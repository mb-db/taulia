{"version":3,"sources":["globals.js","contexts/AnalyticsConfigContext.js","contexts/RequestContext.js","Utils/utils.js","contexts/BulkInvitesProvider.js","contexts/userSettingsContext.js","hooks/useEnabledSettingsFetch.js","hooks/useFetch.js","hooks/useFeatureFetch.js","hooks/useTimer.js","Utils/GenericErrorMessage.js","Utils/RequestUtils.js","components/App/Footer.js","Utils/AccessDenied.js","components/Analytics/LookerDashboard.js","Utils/PageUtil.js","components/Analytics/Home.js","images/taulia-question.png","components/App/NotFound.js","components/App/Releases.js","Utils/FeatureToggledComponent.js","components/MonolithIFrame/MonolithIFrame.js","components/BulkInvitesPages/SupplierSummary.js","Utils/SupplierUtils.js","components/BulkInvitesPages/ReviewPage.js","components/SupplierSearch/AddSegmentsModal.js","components/SupplierSearch/UploadContactsModal.js","components/SupplierSearch/SupplierSearch.js","components/SupplierSearch/SupplierSearchContainer.js","components/SupplierSearch/SupplierSearchBeta.js","components/Settings/CompanySettings.js","components/Settings/SecuritySettings.js","Utils/localizeUtils.js","components/Announcements/Preview.js","components/Announcements/AnnouncementsList.js","icons/Arrow.js","icons/CheckCircle.js","components/Announcements/Accordion.js","components/Announcements/AnnouncementsView.js","components/Announcements/AnnouncementsContainer.js","components/Suppliers/BusinessUnitModal.js","components/Suppliers/EditContactModal.js","components/Suppliers/EventLogModal.js","components/Suppliers/EventLog.js","components/Suppliers/ViewUserModal.js","components/Suppliers/SupplierView.js","components/TermsAndConditions/TermsAndConditions.js","components/Settings/ConnectionDetails.js","components/Settings/Profile.js","Utils/UserManagerUtils.js","components/Settings/UserManager/InviteUserModal.js","components/Settings/UserManager/PermissionsModal.js","components/Settings/UserManager/RoleModal.js","components/Settings/UserManager/ViewUserModal.js","components/Settings/UserManager/UserManager.js","components/SupplierSegment/DeletedSegmentActionCell.js","components/SupplierSegment/DeletedSegmentList.js","components/SupplierSegment/SegmentForm.js","components/SupplierSegment/SegmentList.js","components/SupplierSegment/AddSupplierForm.js","components/SupplierSegment/SegmentContainer.js","components/Documents/Exports.js","components/BulkInvitesPages/StartPage.js","components/BulkInvitesPages/IndividualPage.js","components/BulkInvitesPages/SearchPage.js","components/BulkInvitesPages/SuccessPage.js","components/App/Pages.js","components/App/BuyerNotifications.js","components/App/HeaderWrapper.js","components/App/App.js","translations/translations.js","index.js"],"names":["module","exports","DEBUG","process","FEATURES","ANNOUNCEMENTS_NEW_UI","SUPPLIER_CENTER_NEW_UI","SETTINGS","COMPANY_SETTINGS","CONNECTION_DETAILS","LOGOUT","PROFILE","SECURITY_SETTINGS","USER_MANAGER_NEW","USER_MANAGER","SUPPLIERS","BULK_INVITES","START","INDIVIDUAL","SEARCH","REVIEW","SUCCESS","SUPPLIER_SEGMENTS","LIST","LIST_DELETED","ADD_SUPPLIERS","FAQS","ANNOUNCEMENTS","ANNOUNCEMENTS_VIEW","LAUNCH","COMPLIANCE","SEARCH_BETA","SUPPLIER_VIEW","DOCUMENTS","EXPORTS","INVOICES","PURCHASE_ORDERS","PAYMENTS","CASH","DEPLOY","GLOBAL_SETTINGS","EARLY_PAYMENT_GROUPS","SUPPLIER_ASSIGNMENTS","FORECAST","PLAN","DASHBOARD","HOME","ANALYTICS","CASH_DEPLOYED","CASH_UNLOCKED","INVOICING","SUPPLY_CHAIN_ANALYTICS","TERMS_AND_CONDITIONS","RELEASES","NOT_FOUND","DEFAULT_QUERY","select","filters","field","operator","values","AnalyticsConfigContext","React","createContext","dashboards","RequestContext","parseStringToArray","value","isEmpty","Array","isArray","join","trim","replace","split","parseInput","valueCopy","constructSearchQueryUrl","query","CONSTANTS","filter","el","qs","stringify","encode","genericErrorToast","toast","error","i18nKey","components","href","target","rel","redirectTo404","history","push","downloadBlob","blob","fileName","window","navigator","msSaveOrOpenBlob","downloadLink","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","downloadSampleSupplierInviteList","Blob","type","DEFAULT_SUMMARY","activeSuppliers","activeUsers","inactiveUsers","invitableContacts","nonInvitableContacts","previouslyInvitedSuppliers","suppliersPendingInvite","totalSuppliers","totalUsers","BulkInvitesContext","BulkInvitesProvider","children","request","useContext","useState","summaryLoading","setSummaryLoading","searchOptions","setSearchOptions","summary","setSummary","useEffect","then","res","catch","Provider","fetchSummary","supplierNumbers","businessUnitIds","countries","segmentIds","send","UserSettingsContext","useEnabledSettingsFetch","buyerSettings","systemSettings","setError","isEnabled","setIsEnabled","loading","setLoading","arrayFormat","propTypes","PropTypes","shape","defaultProps","useFetch","url","lazy","setQuery","incr","setIncr","createFetchObj","data","doFetch","fetchQuery","fetchObj","setFetchObj","start","respError","useSend","method","sendData","setSendData","createSendObj","complete","success","doSend","newData","sendObj","setSendObj","useFetchContext","useSendContext","useFeatureFetch","featureName","string","isRequired","useTimer","duration","intervalId","useRef","startTime","isComplete","startIncr","createTimerObj","doReset","current","Date","now","doStart","timerObj","setTimerObj","setInterval","isElapsed","clearInterval","GenericErrorMessage","inline","theme","METHODS","createRequest","csrfConfig","indexOf","Error","requestObj","superagent","toLowerCase","set","csrfHeader","csrfToken","Footer","t","useTranslation","console","className","map","item","index","arr","middle","Math","ceil","length","props","isLocal","to","path","label","alt","src","AccessDenied","lookerURLMap","kebabit","str","LookerDashboard","location","dashboardConfigs","userSettings","showDashboardParams","setShowDashboardParams","filtersChangedFlag","setfiltersChangedFlag","initialLoadFlag","setInitialLoadFlag","useReducer","state","action","payload","sort","a","b","lookerEmbedResources","resourceLoaded","resizeData","newEmbedSizes","id","height","embedSizes","handleResize","titleData","title","pop","dashboardTitles","handleTitleUpdate","handleMessage","event","JSON","parse","e","page","dashboard","generateId","log","targetOrigin","absoluteUrl","newFilters","dashboard_filters","forEach","name","filterResource","activeFilters","dashboardIframe","getElementById","contentWindow","postMessage","changeDashboardFilters","localStorage","setItem","companyId","saveDashboardFilters","savedFilters","getItem","filterAction","dashboardAction","setSavedFilters","dashboardRun","runRelatedDashboard","getLookerResource","lookerResource","lookerResourceKabab","filterResourceKabab","config","resp","allowedRoles","showTitle","message","accessError","pathname","configName","find","it","checkUiAccess","userRoles","requiredRole","userRole","hasAccess","requiredBuyerSettings","requiredSystemSettings","addEventListener","removeEventListener","params","search","ignoreQueryPrefix","displaySections","position","resource","toString","style","marginLeft","marginBottom","width","Home","quickLinksNav","hasAnalystRole","context","shouldShowQuicklinks","settings","isRequestEpEnabled","isInvoiceSubmitEnabled","renderQuickLinks","menuItems","round","dasboardMenu","menuItem","kebabCase","renderAnalytics","this","response","setState","Component","contextType","withTranslation","NotFound","useHistory","question","onClick","Releases","FeatureToggledComponent","enabledComponent","disabledComponent","featureFetch","IframeRoutes","MonolithIFrame","handleResizeMsg","handleFancyboxOpened","handleLocationChanged","handleActivity","iframeUrl","getUrl","key","currentIframeUrl","iframe","prevProps","includes","random","addEmbedParam","baseUrl","portalUrl","fullUrl","scrollToComponent","align","registerActivity","msg","Object","entries","route","ref","SupplierSummary","review","summaryDetails","data-testid","createSupplierCsv","checkForUndefined","arg","csv","concat","supplier","supplierNumber","supplierName","enrollmentState","address","addressLine1","city","country","region","zipCode","supplierAddressType","downloadCsvFile","getTime","match","encodeURI","link","setAttribute","createCsvFileName","stringValue","substring","getFullYear","getMonth","getDate","userCanEditSuppliers","some","role","statusColorMap","active","enrolled","invited","needs_attention","ready_to_invite","riskColorMap","LOW","MEDIUM","HIGH","progressBarColorMap","progressBarLabelMap","BulkInvitesReviewPage","criteria","showError","options","downloadCsv","resend","onUpdateResendOption","checked","onSubmit","preventDefault","onRequestClose","resendInvite","downloadSupplierInviteList","checkSupplierInviteCount","renderErrorMessage","code","renderFromSearchOptions","renderCriteria","uploadFileName","renderSummary","renderForm","onChange","numContacts","goBack","AddSegmentsModal","onAddSuppliersToSegment","open","segments","selectedSuppliers","selectedSegmentId","setSelectedSegmentId","supplierCount","count","selectedCount","segmentName","segment","padding","multiple","noSearchResultsLabel","searchPlaceholder","float","UploadContactsModal","file","setFile","isUploading","setIsUploading","overrideContacts","setOverrideContacts","results","setResults","sampleCsvContentBlob","margin","totalAdded","totalUpdated","totalIgnored","updatedContactFields","updatedContactList","row","fieldValue","display","htmlFor","acceptedFileTypes","disabled","FormData","append","result","spinning","SupplierSearch","countryOptions","regionOptions","showAddSegmentsModal","showInviteSuppliersModal","showUploadContactsModal","onActionComplete","onDataChange","supplierItem","onQueryChange","urlParams","isEqual","loadOptions","locale","loadSegments","addMoneyFields","overrides","overridesCopy","currency","addSuppliersToSegment","all","prepareQuery","number","idQuery","ids","pagination","sorts","segmentId","previewOnly","replaceExistingAssociations","info","suppliers","openInviteModal","supplierDetailsIds","inviteSuppliers","selection","unaryOperators","ternaryOperators","statusColorCell","cell","color","i18n","language","segmentsEnabled","csvExportLimit","userId","fieldOverrides","column","LinkCell","linkUrlGetter","object","fixedOrder","combinedEnrollmentStatus","enumOptions","optionMatcher","option","defaultOptionMatcher","countryFilters","slice","decode","arrayLimit","actions","allowEmptySelection","preventSelectedSelection","excludedFields","isScfBuyer","isSingleErp","enhancedSearchProps","defaultQuery","documentExportData","buyerId","errorCallback","successCallback","documentExport","recordCount","uri","ReviewPage","SupplierSearchContainer","SupplierSearchBeta","supplierCenterFeature","CompanySettings","buyerGroupLoaded","buyerGroupCompanies","selectedBuyer","showBuyerGroupError","showBuyerSelectSuccess","onCompanyChange","setBuyerSelectSuccess","startReloadPageTimer","setBuyerGroupError","getSelectedBuyerName","selectedCompany","company","setTimeout","reload","companies","group","buyerCompany","maxWidth","enableSearch","INITIAL_STATE","newPassword","oldPassword","errors","validations","upper","lower","authType","phoneNumber","SecuritySettings","useLocation","showPasswordModal","setShowPasswordModal","showDisable2faModal","setShowDisable2faModal","status2fa","setStatus2fa","prevState","updatedProperty","user2faData","user2faDataLoading","updatedPassword","sendPassword","passwordError","passwordLoading","doDelete","deleteError","deleteSuccess","errorCode","failureReason","INCORRECT_PASSWORD","OLD_PASSWORD_MISMATCH","PASSWORD_VALIDATION_FAILS","handleInputChange","changePassword","handleSaveDisable2fa","validateOnBlur","gutter","sm","md","lg","validationState","onBlur","email","oldEmail","password","every","size","loginUrl","marginTop","localizeCurrency","Number","isNaN","toLocaleString","i18next","localizeNumber","localizeDate","date","formattedDate","toLocaleDateString","localizeTime","formattedTime","toLocaleTimeString","localizeDateTime","Preview","companyName","announcement","alternateRecipientEnabled","acceptButtonLabel","declineButtonLabel","files","requiresAck","subject","dangerouslySetInnerHTML","__html","dompurify","sanitize","attachmentId","readOnly","placeholder","AnnouncementsList","announcements","setAnnouncements","announcementToClone","setAnnouncementToClone","announcementToPreview","setAnnouncementToPreview","createAnnouncementLoading","setCreateAnnouncementLoading","setName","newAnnouncement","setNewAnnouncement","maxPerPage","totalResults","paginationData","setPaginationData","showAnnouncementModal","setShowAnnouncementModal","showPreviewModal","setShowPreviewModal","onCancelModal","getAnnouncements","currentPage","pageSize","includeTotal","getActionsForCell","cellActions","status","announcementId","showReportDownload","columns","dateCreated","endDate","startDate","dateText","date1","date2","fontSize","toISOString","getStatus","report","countOfMessages","countOfAcks","items","actionsEnabled","isResizable","noResultsText","onPageChange","paginationEnabled","showColumnConfig","showCount","totalCount","createAnnouncement","Arrow","version","xmlns","x","y","viewBox","d","CheckCircle","AccordionItem","buttonLabel","canEdit","completeLabel","isOpen","isSaveDisabled","onComplete","onSave","toggleOpen","fill","aria-expanded","cx","Accordion","onCancel","openSections","setOpenSections","completeSections","setCompleteSections","cancel","completed","child","allComplete","keys","AnnouncementsView","erpClients","useParams","setAcceptButtonLabel","setAlternateRecipientEnabled","audience","setAudience","setCanEdit","supplierNumbersAttachmentId","setSupplierNumbersAttachmentId","customButtonsEnabled","setCustomButtonsEnabled","setDeclineButtonLabel","setFiles","forceAccept","setForceAccept","isEditingTitle","setIsEditingTitle","setMessage","setRequiresAck","savedDates","setSavedDates","erpClientId","setErpClientId","setSubject","tempAudience","setTempAudience","tempDates","setTempDates","tempSubject","setTempSubject","tempMessage","setTempMessage","tempTitle","setTempTitle","setTitle","upload","supplierNumbersAttachmentFile","setSupplierNumbersAttachmentFile","isNew","loadAttachments","saveAnnouncement","draft","accordion","targetingCriteria","allSuppliers","responseAudience","erpOptions","client","clientId","longDescription","audienceSaveDisabled","contentSaveDisabled","getAudienceCompleteLabel","aria-label","erp","hereLink","editor","getData","buttonText","onAdd","attachments","formData","attachment","onDelete","pText","endLabel","onChangeDate","dates","startLabel","AnnouncementsContainer","SupplierView","currPage","setCurrPage","onLastPage","textAlign","first","last","fontWeight","fontStyle","direction","EditContactModal","onSaveAndInvite","emailAddress","setEmailAddress","firstName","setFirstName","lastName","setLastName","emailError","setEmailError","saveEnabled","getContact","evt","validate","validateEmail","EventLogModal","countryCode","eventType","ipAddress","regionName","riskLevel","riskScoreTotal","simEventLogRiskFactors","security","simEventLogUser","is2FaEnabled","userDateCreated","userEmailAddress","userFirstName","userLastLogin","userLastName","userLastPasswordResetRequest","bankChangeTitleDictionary","BANK_ADD","BANK_CHANGE","BANK_DELETE","sortedbyRiskFactorScore","riskScore","fieldListData","colOneData","dataTestId","colTwoData","threatLevel","threatTypes","sortedArr","splice","idx","createThreatTypesArray","colOneWidth","colTwoWidth","header","scoringCriteriaDictionary","description","minWidth","fillColor","date_of_change","time_of_change","email_address","riskType","transform","paddingTop","EventLog","supplierBranchId","eventModalData","setEventModalData","eventModalSelectedId","setEventModalSelectedId","showEventModal","setShowEventModal","eventLogIdData","handleBankEventClick","enumValue","roundedRiskScoreTotal","DateTimeCell","userEmail","ViewUserModal","statusIndicatorComponent","enrollmentStatus","dateInvited","lastLogin","lastPasswordResetRequest","twoFactorAuthEnabled","falseLabel","trueLabel","prev","next","total","currIdx","setOption","sendingCompanyInvite","setSendingCompanyInvite","showBusinessUnitModal","setShowBusinessUnitModal","showEditContactModal","setShowEditContactModal","showViewUserModal","setShowViewUserModal","selectedContact","setSelectedContact","supplierData","setSupplierData","eventLogSettingEnabled","getSupplierData","storedSupplierData","retrieveStoredSupplierData","statusIndicator","inviteUser","user","supplierCompanyId","invitationType","originalType","saveContact","contact","invite","endpoint","contactId","matchingContactId","updatedContact","showUserOrContactModal","userOrContact","tabData","tab","callback","enrollmentSubstatus","supplierRole","roles","addressLink","activated","businessUnits","businessUnitData","unit","reduce","curr","returnBusinessUnits","phone","mergedBranches","branch","returnMergedBranches","is2faRequired","backLink","nextAction","prevAction","invSpendOneYear","isSCFBuyer","epOfferedEnhSpendOneYear","epTakenEnhSpendOneYear","tauliaInvoices","invCountOneYear","contacts","ordering","returnSortedUsers","BusinessUnitModal","TermsAndConditions","termsAndConditions","content","ConnectionDetails","New","Rejected","Submitted","lastUpdated","tooltips","Profile","currencyCode","defaultCurrency","newEmail","workPhone","workTitle","showEmailModal","setShowEmailModal","setProfileCookie","useCurrencyCode","err","translateError","POST_PROCESSING_FAILED","USER_ALREADY_EXISTS","USER_ALREADY_EXISTS_FOR_DIFFERENT_COMPANY","USER_WITH_SAME_EMAIL","EMAIL_INVALID_FORMAT","COMPANY_NOT_FOUND","finally","changeEmail","exists","currencyCodeOptions","currencyDisplayOptions","defaultOption","valid","PhoneNumber","isValid","updateLocale","changeLanguage","Localization","setLocale","paddingBottom","renderEmailModal","addChecked","obj","k","node","checkCurrentRestrictions","hasRestrictions","hasRestrictionsList","filterAllBusinessUnitsIds","availableBusinessUnits","flattenedBusinessUnitIds","formatLabel","backupLabel","newTreeDataFormat","newObj","itemObj","fullAccessBusinessUnits","units","undefined","generateTreeSelectFormat","newTreeBusinessUnits","getSelectedBusinessUnits","selectedList","fullList","idArr","selectedObj","fullObj","InviteUserModal","roleOptions","permissions","restrictions","treeSelectFormatBusinessUnits","checkForEmptyFields","onSelectionChange","selectedNodes","PermissionsModal","currentRestrictions","setCurrentRestrictions","setRestrictions","allAvailableBusinessUnitIds","RoleModal","setShowPermissionsModal","setShowRoleModal","statusToActionMap","userRoleComponent","businessUnitsComponent","hasRestrictionsPerUser","userCompanyCodeAssignedCount","numberOfAvailableCompanyCodes","colGapWidth","func","trans","UserManager","setBusinessUnits","setRoles","showPermissionsModal","showRoleModal","showInviteUserModal","setShowInviteUserModal","setUser","dummyData","stubbedUserId","availableBusinessUnitTree","buyerRoles","pending","enabled","resetPassword","onModalClose","ActionCell","numSuppliers","DeletedSegmentList","deletedSegments","viewSegments","showDataLength","SegmentForm","notUniqueError","createOrUpdateSegment","closeCreateSegmentModal","segmentToEdit","newSegment","isNameUnique","alertType","assign","onDescriptionChange","onNameChange","renderButtons","onKeyDown","isSubmitButtonDisabled","originalValue","other","createdOn","createdBy","nameValidationProp","autoFocus","maxLength","resize","rows","cols","renderInfo","SegmentsList","alerts","clearAlerts","viewDeletedSegments","showCreateModal","showDeleteModal","deleteSegmentId","cancelDeleteSegment","deleteSegment","s","getActionsCellActions","downloadToCSV","linkedCell","fieldsConfig","alertItems","alert","paddingButton","text","comp","renderAlert","cancelAction","AddSupplierForm","activeTab","associationSummary","countNewAssociations","countExistingAssociations","suppliersMissingDetails","defaultAssociationSummary","onUploadSubmit","onInputSubmit","onSupplierNumberInputChange","onSupplierNumberInputBlur","isMultiErp","onUploadChange","addSuppliersToSegmentCompleted","onTabChange","updateReplaceExistingAssociations","addSupplierResultsCallback","supplierSegment","missingSupplierDetails","colSpan","defaultChecked","renderErpClients","renderPreviewResultsSummary","renderFormContent","renderCheckboxItems","SegmentContainer","setSegments","setDeletedSegments","setAlerts","getSegments","getDeletedSegments","archivedSegments","archivedSegment","dateArchived","childProps","resultsData","segmentAlerts","setAlertsViewSegments","render","exact","routeProps","SegmentList","Exports","documentData","setDocumentData","pollDelay","getDocuments","documentExports","doc","recordType","fileType","time","PENDING","FAILED","resultsToDownload","translatedType","localizedDate","downloadFile","StartPage","setType","BulkInvitesIndividualPage","input","navigateToNext","onInputChange","onInputBlur","fetchSummaryInitial","renderSubmit","selectedOption","BulkInvitesSearchPage","onBusinessUnitIdsChange","onCountriesChange","onSegmentIdsChange","showSummary","BulkInvitesSuccessPage","setShowError","Pages","IndividualPage","SearchPage","SuccessPage","component","from","BuyerNotifications","notificationData","currentNotifications","setCurrentNotifications","buyerAnnouncements","currentNotificationData","formattedObj","localizationKey","setActiveMenuItem","navigationDirections","isActive","HeaderWrapper","directions","setDirections","userInfo","mainMenuData","mainMenuError","App","maxInactiveInterval","sessionData","sessionError","sessionLoading","userInfoData","userInfoLoading","userInfoError","regex","debounceTime","lastSend","sendFunc","useDebounceSend","activityError","doSendActivity","logoutTimerComplete","doResetLogoutTimer","getInactiveWarningDuration","logoutWarningTimerComplete","doResetLogoutWarningTimer","gaEnabled","ReactGA","initialize","gaAccount","pageview","listen","validators","pattern","statusCode","analyticsConfig","Helmet","word","charAt","toUpperCase","portalCompany","Branding","fetchDisplayName","fetchImage","script","optimizelyUrl","buyerGroupPrimaryCompanyId","translation","de","es","fr","nl","pt","createBrowserHistory","parentNode","use","initReactI18next","init","resources","TRANSLATIONS","lng","fallbackLng","interpolation","escapeValue","ReactDOM"],"mappings":"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","file":"static/js/main.eca6b78a.chunk.js","sourcesContent":["module.exports = {\n  DEBUG: process.env.NODE_ENV !== 'production',\n  FEATURES: {\n    ANNOUNCEMENTS_NEW_UI: 'ANNOUNCEMENTS_NEW_UI',\n    SUPPLIER_CENTER_NEW_UI: 'SUPPLIER_CENTER_NEW_UI',\n  },\n  SETTINGS: {\n    COMPANY_SETTINGS: '/settings/company-settings',\n    CONNECTION_DETAILS: '/settings/connection-details',\n    LOGOUT: '/logout',\n    PROFILE: '/settings/profile',\n    SECURITY_SETTINGS: '/settings/security',\n    USER_MANAGER_NEW: '/settings/user-manager-new',\n    USER_MANAGER: '/settings/user-manager',\n  },\n  SUPPLIERS: {\n    BULK_INVITES: {\n      START: '/suppliers/invites',\n      INDIVIDUAL: '/suppliers/invites/individual',\n      SEARCH: '/suppliers/invites/search',\n      REVIEW: '/suppliers/invites/review',\n      SUCCESS: '/suppliers/invites/success',\n    },\n    SUPPLIER_SEGMENTS: {\n      LIST: '/suppliers/segments',\n      LIST_DELETED: '/suppliers/segments/deleted',\n      ADD_SUPPLIERS: '/suppliers/segments/:id/suppliers',\n    },\n    FAQS: '/suppliers/faqs',\n    ANNOUNCEMENTS: '/suppliers/announcements',\n    ANNOUNCEMENTS_VIEW: '/suppliers/announcements/:id',\n    LAUNCH: '/suppliers/launch',\n    COMPLIANCE: '/suppliers/compliance',\n    SEARCH: '/suppliers/search',\n    SEARCH_BETA: '/suppliers/search-beta',\n    SUPPLIER_VIEW: '/suppliers/search/:id',\n  },\n  DOCUMENTS: {\n    EXPORTS: '/documents/exports',\n    INVOICES: '/documents/invoices',\n    PURCHASE_ORDERS: '/documents/purchase-orders',\n    PAYMENTS: '/documents/payments',\n  },\n  CASH: {\n    DEPLOY: '/cash/deploy',\n    GLOBAL_SETTINGS: '/cash/global-settings',\n    EARLY_PAYMENT_GROUPS: '/cash/early-payment-groups',\n    SUPPLIER_ASSIGNMENTS: '/cash/supplier-assigntments',\n    FORECAST: '/cash/forecast',\n    PLAN: '/cash/plan',\n  },\n  DASHBOARD: {\n    HOME: '/home',\n  },\n  ANALYTICS: {\n    CASH_DEPLOYED: '/analytics/cash-deployed',\n    CASH_UNLOCKED: '/analytics/cash-unlocked',\n    INVOICING: '/analytics/invoicing',\n    SUPPLY_CHAIN_ANALYTICS: '/analytics/supply-chain-analytics',\n  },\n  TERMS_AND_CONDITIONS: '/terms-and-conditions',\n  RELEASES: '/releases',\n  NOT_FOUND: '/404-not-found',\n  DEFAULT_QUERY: {\n    select: [\n      'name',\n      'number',\n      'combinedEnrollmentStatus',\n      'dateEnrolled',\n      'dateInvited',\n      'invSpendOneYear',\n      'country',\n    ],\n    filters: [\n      { field: 'name', operator: 'CONTAINS', values: [] },\n      { field: 'number', operator: 'CONTAINS', values: [] },\n      { field: 'combinedEnrollmentStatus', operator: 'CONTAINS', values: [] },\n      { field: 'businessUnits', operator: 'EQUAL', values: [] },\n    ],\n  },\n};\n","import React from 'react';\n\nexport const AnalyticsConfigContext = React.createContext({ dashboards: {} });\n","import React from 'react';\n\nexport const RequestContext = React.createContext();\n","/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport qs from 'qs';\nimport { isEmpty } from 'lodash';\nimport { toast } from 'taulia-ui';\nimport { Trans } from 'react-i18next';\nimport CONSTANTS from '../globals';\n\nexport function parseStringToArray(value) {\n  if (isEmpty(value)) {\n    return [];\n  }\n  if (Array.isArray(value)) {\n    value = value.join(',');\n  }\n  return value\n    .trim()\n    .replace(/\\n|\\s+/g, ',')\n    .replace(/,+/g, ',')\n    .split(',');\n}\n\nexport function parseInput(value) {\n  // Used to parse the text in the textareas in invites and announcements to return an array from string of ids\n  let valueCopy = value;\n  if (isEmpty(value)) {\n    return [];\n  }\n  if (Array.isArray(value)) {\n    valueCopy = value.join(',');\n  }\n  return valueCopy\n    .trim()\n    .replace(/\\n|\\s+/g, ',')\n    .replace(/,+/g, ',')\n    .split(',');\n}\n\nexport function constructSearchQueryUrl(field, values, operator = 'EQUAL') {\n  const query = {\n    ...CONSTANTS.DEFAULT_QUERY,\n    filters: [\n      ...CONSTANTS.DEFAULT_QUERY.filters.filter(el => {\n        return el.field !== field;\n      }),\n      { field, operator, values },\n    ],\n  };\n  return `${CONSTANTS.SUPPLIERS.SEARCH_BETA}?${qs.stringify(query, {\n    encode: true,\n  })}`;\n}\n\nexport function genericErrorToast() {\n  return toast.error(\n    <Trans\n      i18nKey=\"app.error\"\n      components={[\n        <a\n          href=\"http://support.taulia.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        />,\n      ]}\n    />\n  );\n}\n\nexport function redirectTo404(history) {\n  history.push(CONSTANTS.NOT_FOUND);\n}\n\nexport function downloadBlob(blob, fileName) {\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveOrOpenBlob(blob, fileName);\n  } else {\n    const downloadLink = document.createElement('a');\n    downloadLink.href = URL.createObjectURL(blob);\n    downloadLink.download = fileName;\n\n    //  Add to the page, click it, and remove from the dom\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n}\n\nexport function downloadSampleSupplierInviteList() {\n  const sampleSupplierInviteList = `Supplier Number\\n\\n00001\\n00002\\n00003`;\n  const resultsToDownload = new Blob([sampleSupplierInviteList], {\n    type: 'text/csv;charset=utf-8',\n  });\n  downloadBlob(resultsToDownload, 'sample-supplier-invite-list.csv');\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { RequestContext } from './RequestContext';\nimport { genericErrorToast } from '../Utils/utils';\n\nconst DEFAULT_SUMMARY = {\n  activeSuppliers: 0,\n  activeUsers: 0,\n  inactiveUsers: 0,\n  invitableContacts: 0,\n  nonInvitableContacts: 0,\n  previouslyInvitedSuppliers: 0,\n  suppliersPendingInvite: 0,\n  totalSuppliers: 0,\n  totalUsers: 0,\n};\n\nexport const BulkInvitesContext = React.createContext();\n\nconst BulkInvitesProvider = ({ children }) => {\n  const request = useContext(RequestContext);\n  const [summaryLoading, setSummaryLoading] = useState(false);\n  const [searchOptions, setSearchOptions] = useState();\n  const [summary, setSummary] = useState(DEFAULT_SUMMARY);\n\n  useEffect(() => {\n    request('GET', '/api/bulkInvites/criteria/searchOptions')\n      .then(res => setSearchOptions(res.body.searchOptions))\n      .catch(genericErrorToast);\n  }, []);\n\n  const fetchSummary = ({\n    supplierNumbers = [],\n    businessUnitIds = [],\n    countries = [],\n    segmentIds = [],\n  }) => {\n    setSummaryLoading(true);\n    request('POST', '/api/bulkInvites/summary')\n      .send({ businessUnitIds, countries, segmentIds, supplierNumbers })\n      .then(res => {\n        setSummary({ ...DEFAULT_SUMMARY, ...res.body.summary });\n        setSummaryLoading(false);\n      })\n      .catch(() => {\n        setSummaryLoading(false);\n      });\n  };\n\n  return (\n    <BulkInvitesContext.Provider\n      value={{\n        fetchSummary,\n        searchOptions,\n        summaryLoading,\n        summary,\n      }}\n    >\n      {children}\n    </BulkInvitesContext.Provider>\n  );\n};\n\nBulkInvitesProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array])\n    .isRequired,\n};\n\nexport default BulkInvitesProvider;\n","import React from 'react';\n\nexport const UserSettingsContext = React.createContext();\n","import { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport qs from 'qs';\nimport { RequestContext } from '../contexts';\n\nconst useEnabledSettingsFetch = (buyerSettings, systemSettings) => {\n  const [error, setError] = useState(false);\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const request = useContext(RequestContext);\n\n  const query = qs.stringify(\n    {\n      buyerSettings,\n      systemSettings,\n    },\n    { arrayFormat: 'brackets' }\n  );\n\n  const getData = () => {\n    setLoading(true);\n    request('GET', `/api/setting/enabled-settings?${query}`)\n      .then(res => {\n        setIsEnabled(res.body);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => getData(), []);\n\n  return { error, isEnabled, loading };\n};\n\nexport default useEnabledSettingsFetch;\n\nuseEnabledSettingsFetch.propTypes = {\n  buyerSettings: PropTypes.shape(),\n  systemSettings: PropTypes.shape(),\n};\n\nuseEnabledSettingsFetch.defaultProps = {\n  buyerSettings: null,\n  systemSettings: null,\n};\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { RequestContext } from '../contexts';\n\n/**\n * A FetchObject is a stateful object that represent the state of the fetch as well as methods for executing fetches.\n *\n * @typedef {Object} FetchObject\n * @property {Object} data - The response data from the request, without the `body` property. It is null if the request is not complete\n * @property {boolean} loading - True if the request is in flight, false otherwise\n * @property {Error} error - Error object returned by request if there is a failure\n * @property {function} doFetch - Function to initiate another fetch. An object representing query parameters can be passed as the argument\n */\n\n/**\n * The useFetch hook is a method to fetch state from a server.\n *\n * The {@link FetchObject} that is returned is stored in state by the hook, and therefore it is not required for it or\n * its properties to be stored in state by the parent component. Any updates to the object and its properties will trigger a re-render.\n *\n * Fetches can be initiated eagerly or lazily. Eager fetches execute as soon as the hook is initiated. Lazy fetches will\n * only execute when {@link FetchObject.doFetch} is called.\n *\n * @example\n * // Eager Fetching\n * const { loading, data, error, doFetch } = useFetch('/api/get-endpoint', request);\n *\n * return (\n *  <>\n *  { loading && <Progress /> }\n *  { data && <div>it loaded!</div> }\n *  { error && <GenericError /> }\n *  </>\n *  );\n *\n * // Lazy Fetching\n * const lazy = true;\n * const { loading, data, error, doFetch } = useFetch('/api/get-endpoint', request, lazy);\n *\n * useEffect(() => {\n *   doFetch({ queryParam: 'Cinco' });\n * }, [])\n *\n * @param {string} url Path for http request\n * @param {function} request The <code>request</code> function being used by the app\n * @param {boolean} [lazy=false] Assign true if the fetch should not be performed eagerly\n * @returns {FetchObject} fetchObject\n */\nconst useFetch = (url, request, lazy = false) => {\n  const [query, setQuery] = useState({});\n  const [incr, setIncr] = useState(0);\n  const createFetchObj = (loading, data, error) => {\n    return {\n      loading,\n      data,\n      error,\n      doFetch: fetchQuery => {\n        setQuery(fetchQuery);\n        setIncr(incr + 1);\n      },\n    };\n  };\n  const [fetchObj, setFetchObj] = useState(createFetchObj(!lazy, null, null));\n\n  const start = lazy ? 1 : 0;\n\n  useEffect(() => {\n    if (incr >= start) {\n      setFetchObj(createFetchObj(true, null, null));\n      request('GET', url)\n        .query(query)\n        .then(res => {\n          setFetchObj(createFetchObj(false, res.body, null));\n        })\n        .catch(respError => {\n          setFetchObj(createFetchObj(false, null, respError));\n        });\n    }\n  }, [incr, url, query]);\n\n  return fetchObj;\n};\n\n/**\n * A SendObject is a stateful object that represent the state of the send as well as methods for executing sends.\n *\n * @typedef {Object} SendObject\n * @property {Object} data - The response data from the request, without the `body` property. It is null if the request is in flight\n * @property {boolean} loading - True if the request is in flight, false otherwise\n * @property {Error} error - Error object returned by request if there is a failure\n * @property {boolean} complete - True if the send was completed, regardless of if it was successful or not\n * @property {boolean} success - True if the send was successfully completed, useful for requests with no response data\n * @property {function} doSend - Function to initiate another send. An object representing POST/PUT parameters can be passed as the argument.\n */\n\n/**\n * The useSend hook is a method for sending POST/PUT updates to a server.\n *\n * The {@link SendObject} that is returned is stored in state by the hook, and therefore it is not required for it or\n * its properties to be stored in state by the parent component. Any updates to the object and its properties will trigger a re-render.\n *\n * Sends are always executed lazily, using the {@link SendObject.doSend} method\n *\n * @example\n * const { loading, data, error, complete, success, doSend } = useSendContext('POST', '/api/post-endpoint');\n * useEffect(() => doSend({postParam: 'Cinco'}), [])\n *\n * @param {string} method - PUT or POST\n * @param {string} url - url path for the http request\n * @param {function} request - The <code>request</code> function used by the app\n * @returns {SendObject} sendObject\n */\nconst useSend = (method, url, request) => {\n  const [sendData, setSendData] = useState();\n  const [incr, setIncr] = useState(0);\n\n  const createSendObj = (loading, data, complete, success, error) => {\n    return {\n      loading,\n      data,\n      complete,\n      success,\n      error,\n      doSend: newData => {\n        setSendData(newData);\n        setIncr(incr + 1);\n      },\n    };\n  };\n\n  const [sendObj, setSendObj] = useState(\n    createSendObj(false, null, false, false, null)\n  );\n\n  useEffect(() => {\n    if (incr > 0) {\n      setSendObj(createSendObj(true, null, false, false, null));\n      request(method, url)\n        .send(sendData)\n        .then(res => {\n          setSendObj(createSendObj(false, res.body, true, true, null));\n        })\n        .catch(respError => {\n          setSendObj(createSendObj(false, null, true, false, respError));\n        });\n    }\n  }, [incr]);\n\n  return sendObj;\n};\n\n/**\n * This is a wrapper for {@link useFetch} that gets the request from context. It can be used anywhere the\n * <code>RequestContext</code> is available without having to pass in a <code>request</code> function.\n *\n * @param {string} url\n * @param {boolean} lazy\n * @returns {FetchObject} fetchObject\n */\nconst useFetchContext = (url, lazy = false) => {\n  const request = useContext(RequestContext);\n  return useFetch(url, request, lazy);\n};\n\n/**\n * This is a wrapper for {@link useSend} that gets the request from context. It can be used anywhere the\n * <code>RequestContext</code> is available without having to pass in a <code>request</code> function.\n *\n * @param {string} method - PUT or POST\n * @param {string} url - url path for the http request\n * @returns {SendObject} sendObject\n */\nconst useSendContext = (method, url) => {\n  const request = useContext(RequestContext);\n  return useSend(method, url, request);\n};\n\n/**\n * This is a wrapper for {@link useSend} that limits requests by a specified amount of time. This is useful for preventing\n * a user from potentially initating too many requests.\n *\n * @param {string} method - PUT or POST\n * @param {string} url - url path for the http request\n * @param {function} request - the <code>request</code> used by the app\n * @param {number} debounceTime - The time in milliseconds to limit additional sends by\n * @returns {SendObject} sendObject\n */\nconst useDebounceSend = (method, url, request, debounceTime) => {\n  const lastSend = useRef(0);\n  const sendObj = useSend(method, url, request);\n  const sendFunc = sendObj.doSend;\n  return {\n    ...sendObj,\n    doSend: () => {\n      if (Date.now() - lastSend.current > debounceTime) {\n        lastSend.current = Date.now();\n        sendFunc();\n      }\n    },\n  };\n};\n\nexport { useFetch, useFetchContext, useSend, useSendContext, useDebounceSend };\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFetchContext } from './useFetch';\n\nconst useFeatureFetch = featureName => {\n  const { data, loading, error } = useFetchContext(\n    `/api/setting/feature-enabled?featureName=${featureName}`\n  );\n  const [isEnabled, setIsEnabled] = useState(false);\n\n  useEffect(() => {\n    setIsEnabled(data?.isEnabled);\n  }, [data]);\n\n  return { loading, isEnabled, error };\n};\n\nuseFeatureFetch.propTypes = {\n  featureName: PropTypes.string.isRequired,\n};\n\nexport default useFeatureFetch;\n","import { useEffect, useRef, useState } from 'react';\n\n/**\n * A TimerObject is a stateful object represnting a timer.\n *\n * @typedef {Object} TimerObject\n * @property {boolean} complete - True of the timer duration has completed\n * @property {function} doStart - Function to start the timer. This is only useful for lazy timers.\n * @property {function} doReset - Restarts the timer. This can be used regardless of the complete state\n */\n\n/**\n * The useTimer can be used to track time in a component or set timers in a component.\n *\n * The {@link TimerObject} that is returned is stored in state by the hook, and therefore it is not required for it or\n * its properties to be stored in state by the parent component. Any updates to the object and its properties will trigger a re-render.\n *\n * Timers can be initiated eagerly or lazily. Eager timers start counting down as soon as the hook is iniated. Lazy timers\n * will not start until {@link TimerObject.doStart} is called.\n *\n * @example\n * // Eager Timer\n * const { complete, doReset } = useTimer(10000)\n *\n * return (\n *  <>\n *    {complete && <div>Time's up!</div>}\n *    <Button onClick={() => doReset() }>Start Over</Button>\n *  </>\n *  )\n *\n * // Lazy Timer\n * const lazy = true;\n * const { complete, doStart, doReset } useTimer(10000, lazy);\n *\n * useEffect(() => { doStart(); }, [])\n *\n * @param {number} duration - The duration of the timer in milliseconds before it is marked as complete\n * @param {boolean} [lazy=false] - Assign true if the timer should not start eagerly\n * @returns {TimerObject} timerObject\n */\nconst useTimer = (duration, lazy = false) => {\n  const intervalId = useRef();\n  const startTime = useRef();\n  const isComplete = useRef();\n  const [incr, setIncr] = useState(0);\n  const startIncr = lazy ? 1 : 0;\n  const createTimerObj = complete => {\n    return {\n      complete,\n      doReset: () => {\n        startTime.current = Date.now();\n      },\n      doStart: () => {\n        setIncr(incr + 1);\n        startTime.current = Date.now();\n      },\n    };\n  };\n\n  const [timerObj, setTimerObj] = useState(createTimerObj(false));\n\n  useEffect(() => {\n    if (incr === startIncr) {\n      startTime.current = Date.now();\n      intervalId.current = setInterval(() => {\n        const currentTime = Date.now();\n        const isElapsed = currentTime - startTime.current > duration;\n        if (isElapsed !== isComplete.current) {\n          isComplete.current = isElapsed;\n          setTimerObj(createTimerObj(isElapsed));\n        }\n      }, 500);\n    }\n    return () => {\n      clearInterval(intervalId.current);\n    };\n  }, [incr]);\n\n  return timerObj;\n};\n\nexport { useTimer };\n","import React from 'react';\nimport { Alert } from 'taulia-ui';\nimport { Trans } from 'react-i18next';\n\nexport const GenericErrorMessage = () => {\n  return (\n    <div>\n      <Alert inline theme=\"danger\">\n        <Trans\n          i18nKey=\"app.error\"\n          components={[\n            <a\n              href=\"http://support.taulia.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            />,\n          ]}\n        />\n      </Alert>\n    </div>\n  );\n};\n","import superagent from 'superagent';\n\nconst METHODS = ['GET', 'PUT', 'POST', 'DELETE'];\n\nconst createRequest = csrfConfig => {\n  return (method, url) => {\n    if (METHODS.indexOf(method) === -1) {\n      throw new Error(\n        `Unknown request method ${method}. Please use one of ${METHODS}`\n      );\n    }\n    const requestObj = superagent[method.toLowerCase()](url);\n    if (csrfConfig) {\n      return requestObj.set(csrfConfig.csrfHeader, csrfConfig.csrfToken);\n    }\n    return requestObj;\n  };\n};\n\nexport { createRequest };\n","import React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'taulia-ui';\n// eslint-disable-next-line no-unused-vars\nimport { useFetchContext } from '../../hooks';\n\nconst Footer = () => {\n  const { t } = useTranslation();\n  const { data, error } = useFetchContext('/api/menu/buyer_area_footer');\n\n  if (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error loading Footer Menu');\n  }\n\n  if (data) {\n    const { children } = data;\n    return (\n      <div className=\"footer\">\n        {children.map((item, index, arr) => {\n          const middle = index + 1 === Math.ceil(arr.length / 2);\n          const props = item.isLocal\n            ? { to: item.path }\n            : { to: item.url, target: '_blank' };\n          return (\n            <Fragment key={item.label}>\n              <span>\n                <Link {...props}>{t(item.label)}</Link>\n              </span>\n              {middle && (\n                <img\n                  alt=\"Taulia logo\"\n                  src=\"https://storage.googleapis.com/brandings/taulia-styles/tau-logo-icon-only.svg\"\n                />\n              )}\n            </Fragment>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default Footer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nfunction AccessDenied() {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <h1>{t('app.accessDenied')}</h1>\n    </div>\n  );\n}\n\nexport default AccessDenied;\n","/* eslint-disable no-console */\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'taulia-ui';\nimport qs from 'qs';\nimport {\n  AnalyticsConfigContext,\n  RequestContext,\n  UserSettingsContext,\n} from '../../contexts';\nimport AccessDenied from '../../Utils/AccessDenied';\nimport CONSTANTS from '../../globals';\nimport hasAccess from '../../Utils/PageUtil';\nimport { GenericErrorMessage } from '../../Utils/GenericErrorMessage';\n\nconst lookerURLMap = {};\nlookerURLMap[CONSTANTS.ANALYTICS.CASH_UNLOCKED] = ['anDeployCashSCF'];\nlookerURLMap[CONSTANTS.ANALYTICS.INVOICING] = ['anInvoicing'];\nlookerURLMap[CONSTANTS.ANALYTICS.SUPPLY_CHAIN_ANALYTICS] = [\n  'supplyChainAnalytics',\n];\nlookerURLMap[CONSTANTS.CASH.DEPLOY] = ['buyerDeployCash'];\nlookerURLMap[CONSTANTS.CASH.FORECAST] = ['cashForecasting'];\nlookerURLMap[CONSTANTS.CASH.PLAN] = [\n  'scenarioPlannerIndustryBenchmarking',\n  'scenarioPlannerOpportunityAssessment',\n  'scenarioPlannerSupplierAdoption',\n  'scenarioPlannerCoreSupplierList',\n  'scenarioPlannerInternalCoreSupplierList',\n  'scenarioPlannerInternalExecutableProgramParameters',\n];\nlookerURLMap[CONSTANTS.DASHBOARD.HOME] = [\n  'landingPageFinancial',\n  'landingPageInvoicing',\n];\n\nconst kebabit = str => str.replace(/\\//g, '-');\n\nconst generateId = data =>\n  data?.page\n    ? kebabit(data.page.url.split('?')[0])\n    : kebabit(data.dashboard.url.split('?')[0]);\n\nconst LookerDashboard = ({ location }) => {\n  const dashboardConfigs = useContext(AnalyticsConfigContext)?.dashboards;\n  const request = useContext(RequestContext);\n  const userSettings = useContext(UserSettingsContext);\n\n  const [showDashboardParams, setShowDashboardParams] = useState([]);\n  const [filtersChangedFlag, setfiltersChangedFlag] = useState(false);\n  const [initialLoadFlag, setInitialLoadFlag] = useState(true);\n\n  const embedResourceReducer = (state, action) => {\n    if (action.type === 'resourceLoaded') {\n      return [...state, action.payload].sort((a, b) => {\n        return a.index - b.index;\n      });\n    }\n    return [];\n  };\n\n  const [lookerEmbedResources, resourceLoaded] = useReducer(\n    embedResourceReducer,\n    []\n  );\n\n  const embedResizeReducer = (state, resizeData) => {\n    const newEmbedSizes = { ...state };\n    newEmbedSizes[resizeData.id] =\n      resizeData.height > 0 ? resizeData.height + 30 : 800;\n    return newEmbedSizes;\n  };\n\n  const [embedSizes, handleResize] = useReducer(embedResizeReducer, {});\n\n  const dashboardTitleReducer = (state, titleData) => {\n    let title;\n    if (titleData?.title) {\n      title = titleData.title.split(':').pop();\n    } else {\n      return state;\n    }\n    return { ...state, [titleData.id]: title };\n  };\n\n  const [dashboardTitles, handleTitleUpdate] = useReducer(\n    dashboardTitleReducer,\n    {}\n  );\n\n  const changeDashboardFilters = ({ id, newFilters, targetOrigin }) => {\n    lookerEmbedResources.forEach(dashboard => {\n      const { name, filterResource } = dashboard;\n      if (filterResource === id) {\n        console.log('Changing related dashboard filters for', name);\n        const activeFilters = JSON.stringify({\n          type: 'dashboard:filters:update',\n          filters: newFilters,\n        });\n        const dashboardIframe = document.getElementById(name);\n        if (dashboardIframe) {\n          dashboardIframe.contentWindow.postMessage(\n            activeFilters,\n            targetOrigin\n          );\n        }\n      }\n    });\n  };\n\n  const runRelatedDashboard = ({ id, targetOrigin }) => {\n    lookerEmbedResources.forEach(dashboard => {\n      const { name, filterResource } = dashboard;\n      if (filterResource === id) {\n        console.log('Running related dashboard for', name);\n        const dashboardRun = JSON.stringify({\n          type: 'dashboard:run',\n        });\n        const dashboardIframe = document.getElementById(name);\n        dashboardIframe.contentWindow.postMessage(dashboardRun, targetOrigin);\n      }\n    });\n    setfiltersChangedFlag(false);\n  };\n\n  const setSavedFilters = ({ targetOrigin }) => {\n    lookerEmbedResources.forEach(dashboard => {\n      const { name } = dashboard;\n      const savedFilters = localStorage.getItem(\n        `dashboardFilters-${userSettings.companyId}${name}`\n      );\n      if (savedFilters) {\n        // Set saved filters\n        console.log(`Setting saved filters for dashboard id ${name}`);\n        const filterAction = JSON.stringify({\n          type: 'dashboard:filters:update',\n          filters: JSON.parse(savedFilters),\n        });\n        const dashboardAction = JSON.stringify({ type: 'dashboard:run' });\n        const dashboardIframe = document.getElementById(name);\n        if (dashboardIframe) {\n          dashboardIframe.contentWindow.postMessage(filterAction, targetOrigin);\n        }\n        // Run with saved filters\n        dashboardIframe.contentWindow.postMessage(\n          dashboardAction,\n          targetOrigin\n        );\n      }\n    });\n    setInitialLoadFlag(false);\n  };\n\n  const saveDashboardFilters = ({ id, newFilters }) => {\n    // Save current dashboard filters\n    console.log(`saving dashboard filters for current dashboard id ${id}`);\n    localStorage.setItem(\n      `dashboardFilters-${userSettings.companyId}${id}`,\n      JSON.stringify(newFilters)\n    );\n    // Save any dashboard filters that have the current dashboard as a filter resource\n    lookerEmbedResources.forEach(dashboard => {\n      const { name, filterResource } = dashboard;\n      if (filterResource === id) {\n        console.log(\n          `Saving dashboard filters for related dashboard id ${name}`\n        );\n        localStorage.setItem(\n          `dashboardFilters-${userSettings.companyId}${name}`,\n          JSON.stringify(newFilters)\n        );\n      }\n    });\n  };\n\n  const handleMessage = event => {\n    let data;\n    try {\n      data = JSON.parse(event?.data);\n    } catch (e) {\n      return;\n    }\n    const id = generateId(data);\n    if (data?.type === 'dashboard:loaded') {\n      handleTitleUpdate({ id, title: data?.dashboard?.title });\n    }\n    if (data?.type === 'page:properties:changed') {\n      console.log(`${id} height = ${data.height}`);\n      handleResize({ id, height: data.height });\n    }\n    if (data?.type === 'dashboard:filters:changed') {\n      setfiltersChangedFlag(true);\n      const targetOrigin = data?.dashboard.absoluteUrl.replace(\n        data?.dashboard.url,\n        ''\n      );\n      const newFilters = data?.dashboard.dashboard_filters;\n      console.log(`Dashboard filters have changed for dashboard id ${id}`);\n      changeDashboardFilters({\n        id,\n        newFilters,\n        targetOrigin,\n      });\n      saveDashboardFilters({ id, newFilters });\n    }\n    if (data?.type === 'dashboard:run:start') {\n      console.log(`Dashboard has run for dashboard id ${id}`);\n      const targetOrigin = data?.dashboard.absoluteUrl.replace(\n        data?.dashboard.url,\n        ''\n      );\n      if (initialLoadFlag) {\n        setSavedFilters({ targetOrigin });\n      }\n      if (filtersChangedFlag) {\n        runRelatedDashboard({\n          id,\n          targetOrigin,\n        });\n      }\n    }\n  };\n\n  const getLookerResource = (\n    lookerResource,\n    lookerResourceKabab,\n    filterResourceKabab,\n    config,\n    index\n  ) => {\n    request('GET', `/api/looker/url?resource=${lookerResource}`)\n      .then(resp => {\n        resourceLoaded({\n          type: 'resourceLoaded',\n          payload: {\n            name: lookerResourceKabab,\n            url: resp.body.url,\n            allowedRoles: config?.allowedRoles,\n            filterResource: filterResourceKabab,\n            showTitle: config?.showTitle ?? false,\n            index,\n          },\n        });\n      })\n      .catch(e => {\n        if (e.message === 'SE_403') {\n          resourceLoaded({\n            type: 'resourceLoaded',\n            payload: {\n              name: lookerResourceKabab,\n              allowedRoles: config?.allowedRoles,\n              filterResource: filterResourceKabab,\n              accessError: true,\n              index,\n            },\n          });\n        } else {\n          resourceLoaded({\n            type: 'resourceLoaded',\n            payload: {\n              name: lookerResourceKabab,\n              allowedRoles: config?.allowedRoles,\n              filterResource: filterResourceKabab,\n              error: true,\n              index,\n            },\n          });\n        }\n      });\n  };\n\n  const checkUiAccess = (\n    lookerResource,\n    lookerResourceKabab,\n    filterResourceKabab,\n    config,\n    index\n  ) => {\n    if (hasAccess(config.allowedRoles, userSettings.userRoles)) {\n      const query = qs.stringify(\n        {\n          buyerSettings: config.requiredBuyerSettings?.length\n            ? config.requiredBuyerSettings\n            : null,\n          systemSettings: config.requiredSystemSettings?.length\n            ? config.requiredSystemSettings\n            : null,\n        },\n        { arrayFormat: 'brackets' }\n      );\n      request('GET', `/api/setting/enabled-settings?${query}`).then(resp => {\n        if (resp.body === true) {\n          getLookerResource(\n            lookerResource,\n            lookerResourceKabab,\n            filterResourceKabab,\n            config,\n            index\n          );\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    resourceLoaded({ type: 'init' });\n    const lookerConfigNames = lookerURLMap[location.pathname];\n    lookerConfigNames.forEach((configName, index) => {\n      const config = dashboardConfigs[configName];\n      const lookerResource = config?.lookerResource;\n      const filterResource = config?.filterResource;\n\n      if (!lookerResource) {\n        console.error(`No looker resource defined for ${configName}`);\n      } else {\n        const lookerResourceKabab = kebabit(lookerResource);\n        const filterResourceKabab = filterResource\n          ? kebabit(filterResource)\n          : null;\n        if (\n          lookerEmbedResources.find(it => {\n            return it.name === lookerResourceKabab;\n          })\n        ) {\n          return;\n        }\n\n        if (config.checkUiAccess) {\n          checkUiAccess(\n            lookerResource,\n            lookerResourceKabab,\n            filterResourceKabab,\n            config,\n            index\n          );\n        } else {\n          getLookerResource(\n            lookerResource,\n            lookerResourceKabab,\n            filterResourceKabab,\n            config,\n            index\n          );\n        }\n      }\n    });\n  }, [dashboardConfigs, location]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [filtersChangedFlag, initialLoadFlag, lookerEmbedResources]);\n\n  useEffect(() => {\n    const params = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    if (params.displaySections) {\n      const displaySections = params.displaySections.split(',');\n      if (displaySections.length) {\n        setShowDashboardParams(params.displaySections.split(','));\n      }\n    }\n  }, []);\n  return (\n    <div className=\"looker-dashboard\">\n      {!lookerEmbedResources.length && <Progress position=\"relative\" />}\n      {lookerEmbedResources.map((resource, index) => {\n        if (\n          showDashboardParams.length &&\n          !showDashboardParams.find(it => {\n            return it === (index + 1).toString();\n          })\n        ) {\n          return null;\n        }\n        if (resource.accessError) {\n          return <AccessDenied key={`access-denied-${resource.name}`} />;\n        }\n        if (resource.error) {\n          return <GenericErrorMessage key={`error-${resource.name}`} />;\n        }\n        return (\n          <div\n            className=\"looker-dashboard-container\"\n            key={`container-${resource.name}`}\n          >\n            {resource.showTitle && dashboardTitles[resource.name] && (\n              <h4 style={{ marginLeft: '60px', marginBottom: '0' }}>\n                {dashboardTitles[resource.name]}\n              </h4>\n            )}\n            <iframe\n              title={resource.name}\n              key={resource.name}\n              id={resource.name}\n              width=\"100%\"\n              height={embedSizes[resource.name] ?? 800}\n              src={resource.url}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nLookerDashboard.propTypes = {\n  location: PropTypes.shape().isRequired,\n};\n\nLookerDashboard.defaultProps = {};\n\nexport default LookerDashboard;\n","export default function hasAccess(allowedRoles = [], userRoles = []) {\n  if (!allowedRoles.length) {\n    return true;\n  }\n\n  return !!allowedRoles.find(requiredRole => {\n    return userRoles.find(userRole => {\n      return requiredRole === userRole;\n    });\n  });\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Progress } from 'taulia-ui';\nimport { withTranslation } from 'react-i18next';\nimport { kebabCase } from 'lodash';\nimport LookerDashboard from './LookerDashboard';\nimport { UserSettingsContext } from '../../contexts';\n\nclass Home extends React.Component {\n  static defaultProps = {\n    settings: {\n      isRequestEpEnabled: false,\n      isInvoiceSubmitEnabled: false,\n    },\n  };\n\n  state = {\n    quickLinksNav: null,\n  };\n\n  componentDidMount() {\n    if (this.shouldShowQuicklinks()) {\n      const { request } = this.props;\n      request('GET', '/api/menu/buyer_area_dashboard')\n        .send()\n        .then(response => {\n          this.setState({ quickLinksNav: response.body });\n        });\n    }\n  }\n\n  hasAnalystRole = () => {\n    const { userRoles } = this.context;\n    return !!userRoles.find(el => {\n      return (\n        el === 'INTERNAL_ANALYST' ||\n        el === 'BUYER_ADMIN' ||\n        el === 'BUYER_CASH_MANAGER'\n      );\n    });\n  };\n\n  shouldShowQuicklinks = () => {\n    const { settings } = this.props;\n    return (\n      !this.hasAnalystRole() ||\n      (!settings.isRequestEpEnabled && !settings.isInvoiceSubmitEnabled)\n    );\n  };\n\n  static contextType = UserSettingsContext;\n\n  renderQuickLinks = () => {\n    const { quickLinksNav } = this.state;\n    const { t } = this.props;\n    const menuItems = quickLinksNav ? quickLinksNav.children : [];\n    const width = Math.round((1 / menuItems.length) * 100);\n    const dasboardMenu = menuItems.map(menuItem => {\n      return (\n        <li\n          style={{ width: `${width}%` }}\n          className={`dashboard-menu-item ${kebabCase(menuItem.name)}`}\n          key={menuItem.name}\n        >\n          <Link to={menuItem.path}>\n            <span>{t(menuItem.label)}</span>\n          </Link>\n        </li>\n      );\n    });\n    return <ul>{dasboardMenu}</ul>;\n  };\n\n  renderAnalytics = () => {\n    return <LookerDashboard {...this.props} />;\n  };\n\n  render() {\n    const { quickLinksNav } = this.state;\n    return (\n      <div>\n        {this.shouldShowQuicklinks() ? (\n          <div className=\"home\">\n            {!quickLinksNav ? <Progress /> : this.renderQuickLinks()}\n          </div>\n        ) : (\n          this.renderAnalytics()\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(Home);\n","export default __webpack_public_path__ + \"static/media/taulia-question.1dc37b0f.png\";","import React from 'react';\nimport { Button } from 'taulia-ui';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport question from '../../images/taulia-question.png';\nimport CONSTANTS from '../../globals';\n\nconst NotFound = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const navigateHome = () => history.push(CONSTANTS.DASHBOARD.HOME);\n\n  return (\n    <div className=\"not-found-404\">\n      <img src={question} alt={t('notFound.error')} />\n      <h2>{t('notFound.error')}</h2>\n      <p>{t('notFound.cantFind')}</p>\n      <Button onClick={navigateHome} theme=\"primary\">\n        {t('notFound.backHome')}\n      </Button>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst Releases = () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"releases-content\">\n      <h2>{t('app.releaseNotes')}</h2>\n      <h3>March 2021</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          We have added signing and archiving compliance services into our data\n          capture flow. These archived digital invoices, in turn help with paper\n          reduction and also reduce the associated costs of physically archiving\n          invoices.\n        </li>\n        <li>\n          For Indian invoices, we now generate a PDF copy with a QR code and\n          digital signature with seal to create a second legal artifact in\n          addition to the JSON file.\n        </li>\n        <li>\n          We have launched our new supplier center as a generally available\n          product. As part of this elevation, we have removed the old supplier\n          center.\n        </li>\n        <li>\n          We enhanced the way our supplier center search filters work. Now, when\n          creating a filtered list and clicking into a specific entry, upon\n          returning to the list your filters are kept in place and still applied\n          instead of having to be reentered.\n        </li>\n        <li>\n          In our emails notifying you of information to review with our bank\n          change monitoring we now bring users to the information requiring\n          review with just one-click. Now, you can immediately address the\n          concern by being brought immediately to the issue to make it easier to\n          investigate.\n        </li>\n        <li>\n          Also to our bank change monitoring, we’ve added a “Date Created” field\n          within the user data. By seeing the “Date Created” spelled out (i.e.\n          03/01/21) you can see if an associated risk flag with a newly created\n          change was made a day ago versus seven days ago to help you determine\n          its legitimacy.\n        </li>\n        <li>\n          And one more enhancement within bank change monitoring is that our\n          scoring criteria is now sorted by level of impact to the score with\n          the most impactful on top and lesser impact as one goes further down\n          the list.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <h3>February 2021</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          The Autoridade Tributária e Aduenceria, the Portuguese tax authority,\n          now requires a QR code for compliance, so we add the QR code to the\n          invoice.\n        </li>\n        <li>\n          We added various enhancements to Invoice Automation, and while\n          individually they are small and specific, together they ensure that\n          you get invoices into your system in a scalable and fast way\n          regardless of format, through a variety of means including improved\n          and faster mapping and improved artificial intelligence.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <h3>January 2021</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          We have introduced Bank Change Monitoring as a part of Supplier\n          Management. This will allow you to proactively assess risk factors of\n          bank account change requests from your suppliers. The risk scores\n          generated by Taulia allow you to make informed decisions when\n          processing any bank changes to reduce the likelihood of a fraudulent\n          change being approved.\n        </li>\n        <li>\n          We’ve created a new UI for making announcements. This responsive,\n          mobile-friendly UI now aligns with the styling of the UI you’re\n          accustomed to in Taulia.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <h3>December 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          We’ve made enhancements to the advance shipping notification (ASN)\n          search to accommodate different ordering addresses or third-party\n          entities involved that may not be an invoicing party.\n        </li>\n        <li>\n          In response to new Indian tax legislation we can now account for “Tax\n          Collected at Source” (TCS). This tax is payable by the seller of a\n          good, collected from the buyer at the time of sale. There is a new\n          header-level, freeform field where suppliers can enter the TCS amount.\n        </li>\n        <li>\n          Italy’s Agenzie Delle Entrate issued new specifications for B2B\n          e-invoices. We can handle the different XML formats required. We can\n          also perform the new validations needed by Italy’s Sistema di\n          Intercambio - the Italian government’s e-invoice platform, comprising\n          twelve new document types and seventeen new tax exemptions.\n        </li>\n        <li>\n          We added support for multiple withholding tax types for Mexican CFDI\n          invoices while also enhancing duplicate checks.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <h3>November 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          안녕하세요! We made adjustments to our Korean translations to better\n          serve our clients around the world.\n        </li>\n        <li>\n          We made improvements to our Supplier Launch. There are now dynamic\n          custom sections in which you can make additional information requests\n          with custom fields for certain suppliers you have segmented.\n        </li>\n        <li>\n          Another improvement to Supplier Launch is second-level approvals. This\n          allows you to provide a second approval of a net new supplier,\n          providing an extra layer of security from a single insider being able\n          to create a possibly fraudulent supplier.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <h3>October 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          India’s tax-clearance scheme has gone live and Taulia is ready to\n          provide compliance services for invoices from suppliers in India.\n        </li>\n        <li>\n          We improved PDF generation for suppliers from multilingual countries\n          (i.e. a Canadian invoice being in French from Montreal, or English if\n          from Toronto or Vancouver).\n        </li>\n        <li>\n          In Europe you can now obtain real-time VAT Number validations for most\n          EU countries using the EU Commission VIES service. This enables you to\n          verify that the information input by suppliers is correct and free of\n          typos.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <br />\n      <h3>September 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          We made improvements to our compliance services for Mexico. Now the\n          UUID (the unique identifying code) from the Comprobantes Fiscal\n          Digital por Internet (CFDI) is extracted into its own custom field so\n          in addition to it being printed on the PDF you can now see it in the\n          portal.\n        </li>\n        <li>\n          We created a new, asynchronous process for exporting documents from\n          Taulia in the Supplier Center. Now you are able to download extremely\n          large data sets. Once the query is complete, you will receive an email\n          with a link to the downloadable file. Your data sets from the last 30\n          days will all be stored on that page so that you can refer back to\n          them within that time frame.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <br />\n      <h3>August 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          For Brazilian invoices, we now display tax certifications and track\n          their expiration dates. We also are able to link existing certificates\n          to branch offices to ensure invoices are linked to the proper tax\n          certification.\n        </li>\n        <li>\n          For emailed invoices which do not pass all validations, buyers can\n          choose to have suppliers correct their own invoices in the UI or have\n          the incomplete invoices passed through to their ERP or workflow for\n          the buyer to correct or complete.\n        </li>\n        <li>\n          Suppliers are now able to use a new invoice search filter to identify\n          invoices which have been paid via early payment.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We fixed a bug that caused a discrepancy between the submission status\n          of invoices in your ERP and in the Taulia UI.\n        </li>\n        <li>\n          We fixed a bug that slowed down purchase order searches, so next time\n          you search it will be much faster.\n        </li>\n      </ul>\n      <br />\n      <h3>July 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          We launched an all new Supplier Center which allows buyers to easily\n          manage their suppliers using robust reporting capabilities and\n          streamlined enrollment processes.\n        </li>\n        <li>\n          We sped up purchase order searches so you can spend less time\n          searching and more time acting on the purchase order information you\n          need.\n        </li>\n        <li>\n          We now support underscores and special characters in European\n          alphabets like ü, é, and more within email addresses or domains for\n          email validations.\n        </li>\n        <li>\n          We now provide the QR code and IRN on the PDF we generate for Indian\n          invoices to be cleared. We also provide receipt of delivery.\n        </li>\n        <li>\n          For Mexican invoices we extract three additional fields from the legal\n          invoice and provide them as custom fields sent to the ERP (Forma de\n          Pago, Método de Pago, Uso de CFDI).\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <br />\n      <h3>June 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          We are now offering data capture services around the world (excluding\n          21 countries that either have sanctions and/or data residency laws\n          that prohibit our ability to offer invoicing services).\n        </li>\n        <li>\n          Streamlined the UX process for scenarios where a supplier has only one\n          tax ID and the main office is located within the same country. In that\n          case, the tax ID is automatically assigned, skipping the screen where\n          the user had to manually select it.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          Some of you had problems with case sensitivity for emails when doing a\n          password reset. We’ve fixed that problem so that you will get the\n          password reset email every time you request one.\n        </li>\n        <li>\n          An update to Google’s Chrome browser led to some file uploading\n          problems, those have been resolved.\n        </li>\n        <li>\n          Under certain conditions, resending an invitation email in Supplier\n          Center did not work. That issue has been fixed.\n        </li>\n      </ul>\n      <br />\n      <h3>May 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          In response to the changing global economy we introduced two new\n          solutions designed to help companies through this crisis:\n        </li>\n        <li>\n          Financial Supply Chain Analytics, a solution that provides the\n          analytics you need to improve your program performance and track your\n          compliance with prompt payment codes.\n        </li>\n        <li>\n          Rapid Start Invoicing, an AP solution to quickly allow a company to\n          handle all of their invoices electronically with minimal IT resources\n          required for ERP integration.\n        </li>\n        <li>\n          General availability release of the Taulia Cash Forecasting solution\n          which enables treasury to forecast their cash using machine learning\n          algorithms, leveraging historical and real-time data.\n        </li>\n        <li>\n          Financial Supply Chain Analytics and Cash Forecasting are both\n          currently available at no charge to existing customers through August\n          31.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed lots of bug fixes on the backend that you won’t see or\n          immediately notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <br />\n      <h3>April 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          The Accelerate All for Early Payments feature now shows the total\n          invoice amount per currency for all early payment available invoices.\n        </li>\n        <li>\n          Suppliers will be able to see information about invoices which are not\n          available for early payment because they are blocked by credit notes.\n          The document information will be available in the Early Payments\n          Detail window.\n        </li>\n        <li>\n          New Tax ID types were added for China, Japan, Malaysia, and the UK so\n          suppliers will have an accurate list of tax ID options for their\n          country when making additions or modifications through SIM.\n        </li>\n        <li>\n          Customers can now require their suppliers to attach a PDF version of\n          their invoice in addition to the tax clearance XML in Brazil and\n          Mexico to ensure they have all the documentation needed to quickly and\n          accurately process the invoice.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          We completed other small bug fixes on the backend that you won’t see\n          or likely notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <br />\n      <h3>March 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          Supplier administrators can now require two-factor authentication\n          (2FA) for all their users company-wide to enhance data security.\n          (Please note: it is not possible for a buyer to mandate 2FA for all\n          suppliers.)\n        </li>\n        <li>\n          We now send you emails when any of these three situations arise: 1) a\n          user changes their password, 2) a user changes their email [the email\n          will go to both the old and new email], or 3) a user completes the\n          password reset process.\n        </li>\n        <li>\n          Everyone now has the ability to upload contacts and initiate supplier\n          invitations through the Supplier Center. These invitations can be sent\n          to as many users as needed, at each supplier.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          The report generated after contacts are uploaded in the Supplier\n          Center is now formatted correctly as a csv file.\n        </li>\n        <li>\n          We completed other small bug fixes on the backend that you won’t see\n          or likely notice but will help your experience be faster, easier and\n          more secure.\n        </li>\n      </ul>\n      <br />\n      <h3>February 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>We acquired SAP certifications for deployment on:</li>\n        <li>\n          SAP ECC 6.0 EhP7 via the SAP integration scenario ABAP Add-On\n          Deployment for SAP NetWeaver 7.40.\n        </li>\n        <li>\n          SAP S/4HANA 1909 via the SAP integration scenario ABAP Add-On\n          Deployment for SAP S/4HANA.\n        </li>\n        <li>\n          Improved VAT number validations to prevent the possibility of\n          downstream invoice submission failure.\n        </li>\n        <li>\n          Added new Tax ID types for Andorra, Bahrain, China, Estonia, Georgia,\n          Hong Kong, Israel, Japan, Laos, Luxembourg, Trinidad and Tobago, and\n          Vietnam.\n        </li>\n        <li>Accessibility improvements.</li>\n        <li>\n          Cash Planner currency filter is now enhanced to function consistently\n          with the Invoice Search currency filter.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          Our Compliance Settings page wouldn’t load entirely if you were using\n          an ad blocking program. That’s been fixed so even with an ad blocker,\n          you can still use the page.\n        </li>\n        <li>\n          Early Payment “Requested” emails were not being consistently\n          delivered. This has been corrected.\n        </li>\n      </ul>\n      <br />\n      <h3>January 2020</h3>\n      <h4>What’s New:</h4>\n      <ul>\n        <li>\n          Suppliers in Mexico can now submit their Complemento de Pago (payment\n          receipt) documents for any CFDI invoice previously submitted through\n          Taulia. These files are validated in real time with the tax authority\n          and passed to their customer’s ERP system.\n        </li>\n        <li>\n          New users are now notified when the email address is changed during\n          the account signup process. Both the old and new email addresses are\n          notified so users can understand when their invitation link is used by\n          someone else.\n        </li>\n        <li>\n          New UI for password resetting which will be more friendly on mobile\n          devices, increasing the number of successful logins and increasing the\n          success rate of resetting your password.\n        </li>\n        <li>\n          Suppliers may now elect to stop receiving email notifications for\n          rejected early payment requests using My Email Settings.\n        </li>\n      </ul>\n      <h4>Bug Fixes:</h4>\n      <ul>\n        <li>\n          Our Invoice to PO reconciliation performance has been optimized.\n        </li>\n        <li>\n          AP invoices with customer lines will derive the payment term from the\n          proper line making payments more accurate.\n        </li>\n      </ul>\n      <i>\n        Note: SAP release notes are maintained separately and users should\n        contact Taulia for release notes specific to their version of the\n        add-on.\n      </i>\n    </div>\n  );\n};\n\nexport default Releases;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'taulia-ui';\nimport { useFeatureFetch } from '../hooks';\nimport { GenericErrorMessage } from './GenericErrorMessage';\n\nconst FeatureToggledComponent = ({\n  featureName,\n  enabledComponent,\n  disabledComponent,\n}) => {\n  const featureFetch = useFeatureFetch(featureName);\n\n  if (featureFetch.loading) {\n    return <Progress />;\n  }\n\n  if (featureFetch.error) {\n    return <GenericErrorMessage />;\n  }\n\n  if (featureFetch.isEnabled) {\n    return enabledComponent;\n  }\n\n  if (disabledComponent) {\n    return disabledComponent;\n  }\n\n  return <></>;\n};\n\nFeatureToggledComponent.propTypes = {\n  featureName: PropTypes.string.isRequired,\n  enabledComponent: PropTypes.element.isRequired,\n  disabledComponent: PropTypes.element,\n};\n\nFeatureToggledComponent.defaultProps = {\n  disabledComponent: null,\n};\n\nexport default FeatureToggledComponent;\n","/* eslint-disable react/sort-comp */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport scrollToComponent from 'react-scroll-to-component';\nimport CONSTANTS from '../../globals';\n\nconst IframeRoutes = {};\nIframeRoutes[CONSTANTS.DOCUMENTS.INVOICES] = '/buyer/invoice/search';\nIframeRoutes[CONSTANTS.DOCUMENTS.PAYMENTS] = '/buyer/paymentRecord/search';\nIframeRoutes[CONSTANTS.DOCUMENTS.PURCHASE_ORDERS] =\n  '/buyer/purchaseOrder/search';\n\nIframeRoutes[CONSTANTS.SUPPLIERS.ANNOUNCEMENTS] = '/buyer/announcements';\nIframeRoutes[CONSTANTS.SUPPLIERS.FAQS] =\n  '/buyer/customerSpecificContent/showCustomerSpecificContentMaintain';\nIframeRoutes[CONSTANTS.SUPPLIERS.LAUNCH] =\n  '/buyer/vendorSetup/showVendorSearch?id=vendorSetup';\nIframeRoutes[CONSTANTS.SUPPLIERS.COMPLIANCE] =\n  '/buyer/supplierCenter/showComplianceReport';\nIframeRoutes[CONSTANTS.SUPPLIERS.SEARCH] = '/buyer/supplierCenter/index';\n\nIframeRoutes[CONSTANTS.SETTINGS.USER_MANAGER] = '/buyer/userManager/index';\n\nIframeRoutes[CONSTANTS.CASH.GLOBAL_SETTINGS] =\n  '/buyer/dynamicDiscounting/showGlobalSettings';\nIframeRoutes[CONSTANTS.CASH.EARLY_PAYMENT_GROUPS] =\n  '/buyer/dynamicDiscounting/showGroupSettings';\nIframeRoutes[CONSTANTS.CASH.SUPPLIER_ASSIGNMENTS] =\n  '/buyer/dynamicDiscounting/showSupplierAssignments';\n\nexport default class MonolithIFrame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      iframeUrl: this.getUrl(props.location.pathname, true),\n      key: '',\n    };\n    this.currentIframeUrl = null;\n    this.iframe = null;\n  }\n\n  componentDidMount() {\n    window.addEventListener('message', this.handleMessage);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      let iframeUrl = this.getUrl(this.props.location.pathname);\n      if (\n        !this.currentIframeUrl ||\n        !this.currentIframeUrl.includes(iframeUrl)\n      ) {\n        this.currentIframeUrl = null;\n        iframeUrl = this.getUrl(this.props.location.pathname, true);\n        this.setState({ iframeUrl, key: Math.random() }); // eslint-disable-line react/no-did-update-set-state\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.handleMessage);\n  }\n\n  getUrl(pathname, addEmbedParam = false) {\n    const baseUrl = `${this.props.portalUrl}${IframeRoutes[pathname]}`;\n    let fullUrl = baseUrl;\n    if (addEmbedParam) {\n      if (baseUrl.includes('?')) {\n        fullUrl = `${baseUrl}&embed=true`;\n      } else {\n        fullUrl = `${baseUrl}?embed=true`;\n      }\n    }\n    return fullUrl;\n  }\n\n  handleFancyboxOpened() {\n    scrollToComponent(this.iframe, { align: 'top' });\n  }\n\n  handleActivity() {\n    if (this.props.registerActivity) {\n      this.props.registerActivity();\n    }\n  }\n\n  handleLocationChanged(msg) {\n    if (msg.location !== this.state.iframeUrl) {\n      this.currentIframeUrl = msg.location;\n      Object.entries(IframeRoutes).forEach(route => {\n        if (msg.location.includes(route[1])) {\n          const { history } = this.props;\n          history.push(route[0]);\n        }\n      });\n    }\n  }\n\n  handleMessage = e => {\n    switch (e.data.type) {\n      case 'resize':\n        this.handleResizeMsg(e.data);\n        break;\n      case 'fancyboxOpened':\n        this.handleFancyboxOpened();\n        break;\n      case 'locationChange':\n        this.handleLocationChanged(e.data);\n        break;\n      case 'activity':\n        this.handleActivity();\n        break;\n      default: // do nothing\n    }\n  };\n\n  handleResizeMsg(msg) {\n    if (this.iframe) {\n      this.iframe.style.height = `${msg.height}px`;\n    }\n  }\n\n  render() {\n    const { iframeUrl, key } = this.state;\n    return (\n      <iframe\n        title=\"Monolith IFrame\"\n        key={key}\n        ref={iframe => {\n          this.iframe = iframe;\n        }}\n        src={iframeUrl}\n        height=\"550\"\n        width=\"100%\"\n      />\n    );\n  }\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, InfoTooltip } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { BulkInvitesContext } from '../../contexts';\n\nconst SupplierSummary = ({ review }) => {\n  const { t } = useTranslation();\n  const { summaryLoading, summary } = useContext(BulkInvitesContext);\n\n  const summaryDetails = (\n    <div>\n      {!review && (\n        <h4 className=\"title\">{t('bulkInvites.supplierSummary.title')}</h4>\n      )}\n      {summaryLoading && <span data-testid=\"spinner\" className=\"spinner\" />}\n      <p>\n        <strong>{t('bulkInvites.supplierSummary.suppliers.title')}</strong>\n      </p>\n      <table>\n        <tbody>\n          <tr>\n            <th>{summary.totalSuppliers}</th>\n            <td>{t('bulkInvites.supplierSummary.suppliers.totalSuppliers')}</td>\n          </tr>\n          <tr>\n            <th>{summary.suppliersPendingInvite}</th>\n            <td>\n              {t(\n                'bulkInvites.supplierSummary.suppliers.suppliersPendingInvite'\n              )}\n            </td>\n            {review ? (\n              <td className=\"tooltip\" data-testid=\"tooltip\">\n                <InfoTooltip align=\"left\" theme=\"light\">\n                  <p>\n                    {t(\n                      'bulkInvites.supplierSummary.tooltips.suppliersPendingInvite'\n                    )}\n                  </p>\n                </InfoTooltip>\n              </td>\n            ) : null}\n          </tr>\n          <tr>\n            <th>{summary.previouslyInvitedSuppliers}</th>\n            <td>\n              {t(\n                'bulkInvites.supplierSummary.suppliers.previouslyInvitedSuppliers'\n              )}\n            </td>\n            {review ? (\n              <td className=\"tooltip\">\n                <InfoTooltip align=\"left\" theme=\"light\">\n                  <p>\n                    {t(\n                      'bulkInvites.supplierSummary.tooltips.previouslyInvitedSuppliers'\n                    )}\n                  </p>\n                </InfoTooltip>\n              </td>\n            ) : null}\n          </tr>\n          <tr>\n            <th>{summary.activeSuppliers}</th>\n            <td>\n              {t('bulkInvites.supplierSummary.suppliers.activeSuppliers')}\n            </td>\n            {review ? (\n              <td className=\"tooltip\">\n                <InfoTooltip align=\"left\" theme=\"light\">\n                  <p>\n                    {t('bulkInvites.supplierSummary.tooltips.activeSuppliers')}\n                  </p>\n                </InfoTooltip>\n              </td>\n            ) : null}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n\n  if (review) {\n    return <div className=\"supplier-summary\">{summaryDetails}</div>;\n  }\n  return (\n    <div className=\"supplier-summary\">\n      <Alert>{summaryDetails}</Alert>\n    </div>\n  );\n};\n\nSupplierSummary.propTypes = {\n  review: PropTypes.bool,\n};\n\nSupplierSummary.defaultProps = {\n  review: false,\n};\n\nexport default SupplierSummary;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-template */\n\nimport { isEmpty } from 'lodash';\n\nexport function createSupplierCsv(data) {\n  if (isEmpty(data)) {\n    return null;\n  }\n\n  function checkForUndefined(arg) {\n    if (arg == null) {\n      return ' ';\n    }\n    return arg;\n  }\n\n  const headers =\n    'Supplier Number,Supplier Name,Enrollment State,Address Line 1,City,Country,Region,Zip Code,Supplier Address Type';\n  let csv = headers.concat('\\r\\n');\n  data.forEach(supplier => {\n    csv += '\"' + checkForUndefined(supplier.supplierNumber) + '\",';\n    csv += '\"' + checkForUndefined(supplier.supplierName) + '\",';\n    csv += '\"' + checkForUndefined(supplier.enrollmentState) + '\",';\n    csv += '\"' + checkForUndefined(supplier.address.addressLine1) + '\",';\n    csv += '\"' + checkForUndefined(supplier.address.city) + '\",';\n    csv += '\"' + checkForUndefined(supplier.address.country) + '\",';\n    csv += '\"' + checkForUndefined(supplier.address.region) + '\",';\n    csv += '\"' + checkForUndefined(supplier.address.zipCode) + '\",';\n    csv += '\"' + checkForUndefined(supplier.address.supplierAddressType) + '\"';\n    csv += '\\n';\n  });\n\n  return csv;\n}\n\nexport function downloadCsvFile(fileName, csv) {\n  if (csv == null) {\n    return;\n  }\n\n  if (isEmpty(fileName)) {\n    fileName = `download-${new Date().getTime()}.csv`;\n  }\n\n  if (!csv.match(/^data:text\\/csv/i)) {\n    csv = 'data:text/csv;charset=utf-8,'.concat(csv);\n  }\n\n  const data = encodeURI(csv);\n  const link = document.createElement('a');\n  link.setAttribute('href', data);\n  link.setAttribute('download', fileName);\n  document.body.appendChild(link); // Required for FF\n  link.click();\n}\n\nexport function createCsvFileName(stringValue) {\n  const MAX_STRING_LEN = 30;\n  const now = new Date();\n\n  if (stringValue.length > MAX_STRING_LEN) {\n    stringValue = stringValue.substring(0, MAX_STRING_LEN);\n  }\n  return `${stringValue.trim()} - ${now.getFullYear()}${now.getMonth() +\n    1}${now.getDate()}.csv`;\n}\n\nexport function userCanEditSuppliers(userRoles) {\n  const editRoles = [\n    'BUYER_ADMIN',\n    'BUYER_SUPPLIER_LAUNCH_SEARCH',\n    'BUYER_USER',\n  ];\n  return editRoles.some(role => {\n    return userRoles.includes(role);\n  });\n}\n\nexport const statusColorMap = {\n  active: 'blue',\n  enrolled: 'blue',\n  invited: 'yellow',\n  needs_attention: 'red',\n  ready_to_invite: 'green',\n};\n\n// sim event log\n\nexport const riskColorMap = {\n  LOW: '#35AF28',\n  MEDIUM: '#ff7800',\n  HIGH: '#e03400',\n};\n\nexport const progressBarColorMap = {\n  LOW: 'green',\n  MEDIUM: 'orange',\n  HIGH: 'red',\n};\n\nexport const progressBarLabelMap = {\n  LOW: 'low',\n  MEDIUM: 'medium',\n  HIGH: 'high',\n};\n","import React from 'react';\nimport { find, isEmpty } from 'lodash';\nimport {\n  Alert,\n  Button,\n  Checkbox,\n  Field,\n  FieldErrorMap,\n  Link,\n  Progress,\n} from 'taulia-ui';\nimport PropTypes from 'prop-types';\nimport { withTranslation, Trans } from 'react-i18next';\nimport SupplierSummary from './SupplierSummary';\nimport {\n  createSupplierCsv,\n  downloadCsvFile,\n  createCsvFileName,\n} from '../../Utils/SupplierUtils';\nimport CONSTANTS from '../../globals';\nimport { BulkInvitesContext } from '../../contexts';\n\nconst MAX_SUPPLIER_DOWNLOAD = 10000;\n\nclass BulkInvitesReviewPage extends React.Component {\n  static propTypes = {\n    onRequestClose: PropTypes.func,\n    request: PropTypes.func.isRequired,\n    t: PropTypes.func,\n    history: PropTypes.shape().isRequired,\n  };\n\n  static defaultProps = {\n    onRequestClose: null,\n    t: null,\n  };\n\n  state = {\n    loading: true,\n    criteria: null,\n    summary: null,\n    showError: null,\n    options: {\n      downloadCsv: false,\n      resend: true,\n    },\n  };\n\n  componentDidMount() {\n    const { request } = this.props;\n    request('GET', '/api/bulkInvites/summary')\n      .then(res => {\n        const { criteria, summary } = res.body;\n        if (criteria && summary) {\n          this.setState({ criteria, summary, loading: false, showError: null });\n        } else {\n          this.setState({\n            loading: false,\n            showError: 'bulkInvites.reviewPage.error.fetchText',\n          });\n        }\n      })\n      .catch(() => {\n        const code = 'bulkInvites.reviewPage.error.fetchText';\n        this.setState({ loading: false, showError: code });\n      });\n  }\n\n  onUpdateResendOption = event => {\n    const { options } = this.state;\n    this.setState({\n      options: {\n        ...options,\n        resend: event.target.checked,\n      },\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { onRequestClose, request, history } = this.props;\n    const { criteria, options } = this.state;\n    this.setState({ loading: true }, () => {\n      request('POST', '/api/bulkInvites/send')\n        .send({\n          ...criteria,\n          resendInvite: options.resend,\n        })\n        .then(() => {\n          if (onRequestClose) onRequestClose();\n          history.push(CONSTANTS.SUPPLIERS.BULK_INVITES.SUCCESS);\n        })\n        .catch(() => {\n          if (onRequestClose) onRequestClose();\n          this.setState({\n            loading: false,\n            showError: 'bulkInvites.reviewPage.error.submitText',\n          });\n        });\n    });\n  };\n\n  downloadSupplierInviteList = () => {\n    const { request } = this.props;\n    const { criteria } = this.state;\n    request('POST', '/api/bulkInvites/postBulkInvitationDataDownload')\n      .send(criteria)\n      .then(res => {\n        this.setState({ options: { downloadCsv: true } });\n        downloadCsvFile(\n          createCsvFileName('TauliaSupplierInviteList'),\n          createSupplierCsv(res.body.criteria)\n        );\n      })\n      .catch(() => {\n        this.setState({\n          loading: false,\n          showError: 'bulkInvites.reviewPage.error.failedDownload',\n        });\n      });\n  };\n\n  checkSupplierInviteCount = () => {\n    const { t } = this.props;\n    const { summary } = this.state;\n    if (summary.totalSuppliers > MAX_SUPPLIER_DOWNLOAD) {\n      return (\n        <div className=\"downloadSupplierResults\">\n          <Alert inline theme=\"warn\">\n            <strong>\n              {t('bulkInvites.reviewPage.error.limitedSupplierDownload')}\n            </strong>\n          </Alert>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  static contextType = BulkInvitesContext;\n\n  renderErrorMessage = () => {\n    const { showError } = this.state;\n    const { t } = this.props;\n    return (\n      <Alert inline theme=\"danger\">\n        <strong>{t('bulkInvites.reviewPage.error.title')}</strong>\n        <FieldErrorMap code={showError}>\n          <Trans\n            i18nKey=\"bulkInvites.reviewPage.error.failedDownload\"\n            components={[\n              <Link to={CONSTANTS.SUPPLIERS.BULK_INVITES.START} />,\n              <Link\n                href=\"http://support.taulia.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              />,\n            ]}\n          />\n          <Trans\n            key=\"bulkInvites.reviewPage.error.fetchText\"\n            i18nKey=\"bulkInvites.reviewPage.error.fetchText\"\n            components={[<Link to={CONSTANTS.SUPPLIERS.BULK_INVITES.START} />]}\n          />\n          <Trans\n            key=\"bulkInvites.reviewPage.error.submitText\"\n            i18nKey=\"bulkInvites.reviewPage.error.submitText\"\n            components={[\n              <Link to={CONSTANTS.SUPPLIERS.BULK_INVITES.START} />,\n              <Link\n                href=\"http://support.taulia.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              />,\n            ]}\n          />\n        </FieldErrorMap>\n      </Alert>\n    );\n  };\n\n  renderFromSearchOptions = key => {\n    const { searchOptions } = this.context;\n    const { criteria } = this.state;\n    if (\n      !criteria ||\n      isEmpty(criteria[key]) ||\n      !searchOptions ||\n      isEmpty(searchOptions[key])\n    ) {\n      return null;\n    }\n    const list = criteria[key].map(value => {\n      const match = find(searchOptions[key], { value });\n      if (match) {\n        return match.label;\n      }\n      return '';\n    });\n    return list.join(', ');\n  };\n\n  renderCriteria = () => {\n    const { searchOptions } = this.context;\n    const { t } = this.props;\n    const { criteria } = this.state;\n    if (criteria.supplierNumbers?.length) {\n      return (\n        <div className=\"review-criteria\">\n          <h4>{t('bulkInvites.reviewPage.criteria.title')}</h4>\n          <p>{t('bulkInvites.reviewPage.criteria.individual.title')}</p>\n          <div className=\"criteria-data\">\n            {criteria.uploadFileName?.length && (\n              <>\n                <strong>\n                  {t('bulkInvites.reviewPage.criteria.individual.fileUpload')}\n                </strong>\n                <p>{criteria.uploadFileName}</p>\n              </>\n            )}\n            <strong>\n              {t('bulkInvites.reviewPage.criteria.individual.supplierNumbers')}\n            </strong>\n            <p>{criteria.supplierNumbers.join(', ')}</p>\n          </div>\n        </div>\n      );\n    }\n    if (\n      !isEmpty(searchOptions) &&\n      (criteria.businessUnitIds?.length ||\n        criteria.countries?.length ||\n        criteria.segmentIds?.length)\n    ) {\n      return (\n        <div className=\"review-criteria\">\n          <h4>{t('bulkInvites.reviewPage.criteria.title')}</h4>\n          <p>{t('bulkInvites.reviewPage.criteria.search.title')}</p>\n          <div className=\"criteria-data\">\n            {criteria?.businessUnitIds.length ? (\n              <>\n                <strong>\n                  {t('bulkInvites.reviewPage.criteria.search.businessUnitIds')}\n                </strong>\n                <p>{this.renderFromSearchOptions('businessUnitIds')}</p>\n              </>\n            ) : null}\n            {criteria.countries?.length ? (\n              <>\n                <strong>\n                  {t('bulkInvites.reviewPage.criteria.search.countries')}\n                </strong>\n                <p>{this.renderFromSearchOptions('countries')}</p>\n              </>\n            ) : null}\n            {criteria.segmentIds?.length ? (\n              <>\n                <strong>\n                  {t('bulkInvites.reviewPage.criteria.search.segmentIds')}\n                </strong>\n                <p>{this.renderFromSearchOptions('segmentIds')}</p>\n              </>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  renderSummary = () => {\n    const { summary } = this.state;\n    const { t } = this.props;\n    return (\n      <div className=\"review-summary\">\n        <h4>{t('bulkInvites.reviewPage.summary.title')}</h4>\n        <SupplierSummary review />\n        {summary.totalSuppliers > 0 && (\n          <div className=\"downloadSupplierResults\">\n            <Button\n              id=\"downloadSupplierList\"\n              onClick={this.downloadSupplierInviteList}\n              theme=\"text\"\n            >\n              {t('bulkInvites.reviewPage.options.downloadSupplierList')}\n            </Button>\n          </div>\n        )}\n        {this.checkSupplierInviteCount()}\n      </div>\n    );\n  };\n\n  renderForm = () => {\n    const { options, summary } = this.state;\n    const { onRequestClose, t, history } = this.props;\n    return (\n      <form className=\"page-form\" onSubmit={this.onSubmit}>\n        <div className=\"form-content\">\n          <h4>{t('bulkInvites.reviewPage.options.title')}</h4>\n          <Field>\n            <Checkbox\n              checked={options.resend}\n              data-testid=\"resend-email\"\n              inline\n              name=\"resend\"\n              onChange={this.onUpdateResendOption}\n            >\n              <p>\n                <strong>\n                  {t('bulkInvites.reviewPage.options.resend.label')}\n                </strong>\n              </p>\n              <p>\n                {t('bulkInvites.reviewPage.options.resend.text', {\n                  numContacts: summary.totalSuppliers,\n                })}\n              </p>\n            </Checkbox>\n          </Field>\n        </div>\n        <div className=\"invites-button-container\">\n          {!onRequestClose && (\n            <Button\n              data-testid=\"back-button\"\n              onClick={history.goBack}\n              theme=\"text\"\n            >\n              &lt;&nbsp;\n              {t('bulkInvites.reviewPage.back')}\n            </Button>\n          )}\n          <Button type=\"submit\" theme=\"primary\">\n            {t('bulkInvites.reviewPage.submit')}\n          </Button>\n        </div>\n      </form>\n    );\n  };\n\n  render() {\n    const { loading, showError } = this.state;\n    const { t } = this.props;\n\n    if (loading) {\n      return <Progress />;\n    }\n\n    return (\n      <>\n        <h1>{t('bulkInvites.title')}</h1>\n        {showError ? (\n          <>{this.renderErrorMessage()}</>\n        ) : (\n          <div>\n            <h3>{t('bulkInvites.reviewPage.title')}</h3>\n            <p>{t('bulkInvites.reviewPage.text')}</p>\n            {this.renderCriteria()}\n            {this.renderSummary()}\n            {this.renderForm()}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTranslation()(BulkInvitesReviewPage);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Link, Modal, Select } from 'taulia-ui';\nimport { useTranslation, Trans } from 'react-i18next';\n\nfunction AddSegmentsModal({\n  onAddSuppliersToSegment,\n  open,\n  onRequestClose,\n  segments,\n  selectedSuppliers,\n}) {\n  const { t } = useTranslation();\n  const [selectedSegmentId, setSelectedSegmentId] = useState('');\n  const supplierCount = t('supplierSearch.supplierCount', {\n    count: selectedSuppliers.selectedCount,\n  });\n\n  useEffect(() => {\n    if (segments.length) {\n      setSelectedSegmentId(segments[0].id);\n    }\n  }, [segments]);\n\n  const segmentName =\n    segments.length &&\n    selectedSegmentId &&\n    segments.find(segment => segment.id === selectedSegmentId).name;\n  const options = segments.map(segment => {\n    return { value: segment.id, label: segment.name };\n  });\n\n  const addSuppliersToSegment = () => {\n    onAddSuppliersToSegment({ id: selectedSegmentId, name: segmentName });\n  };\n\n  return (\n    <Modal width={400} padding={0} open={open} onRequestClose={onRequestClose}>\n      <div className=\"modal-export\">\n        <p>{t('supplierSearch.addSuppliersHeader', { supplierCount })}</p>\n        <hr className=\"hr-actions-subMenu\" />\n        {segments.length ? (\n          <section>\n            <strong>{t('nav.buyer_area.suppliers.supplier_segments')}</strong>\n            <Select\n              multiple={false}\n              noSearchResultsLabel={t(\n                'bulkInvites.searchPage.noSearchResultsLabel'\n              )}\n              onChange={segment => setSelectedSegmentId(segment)}\n              options={options}\n              searchPlaceholder={t('bulkInvites.searchPage.searchPlaceholder')}\n              value={selectedSegmentId}\n            />\n            {selectedSegmentId && (\n              <p>\n                <Trans\n                  i18nKey=\"supplierSearch.addSuppliersModalText\"\n                  values={{ supplierCount, segmentName }}\n                  components={[<strong />]}\n                />\n              </p>\n            )}\n            <div key=\"actions\" style={{ float: 'right' }}>\n              <Button theme=\"text\" onClick={onRequestClose}>\n                {t('standard.cancel')}\n              </Button>\n              <Button onClick={addSuppliersToSegment} theme=\"primary\">\n                {t('standard.submit')}\n              </Button>\n            </div>\n          </section>\n        ) : (\n          <section>\n            <p>\n              <Trans\n                i18nKey=\"supplierSearch.addSuppliersModalEmptyText\"\n                components={[<Link to=\"/suppliers/segments\" />]}\n              />\n            </p>\n            <div key=\"actions\" style={{ float: 'right' }}>\n              <Button theme=\"text\" onClick={onRequestClose}>\n                {t('standard.cancel')}\n              </Button>\n            </div>\n          </section>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nAddSegmentsModal.propTypes = {\n  onAddSuppliersToSegment: PropTypes.func.isRequired,\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  segments: PropTypes.arrayOf(PropTypes.shape()),\n  selectedSuppliers: PropTypes.shape({\n    all: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.shape()),\n    ids: PropTypes.arrayOf(PropTypes.string),\n    selectedCount: PropTypes.number,\n  }).isRequired,\n};\n\nAddSegmentsModal.defaultProps = {\n  open: true,\n  segments: [],\n};\n\nexport default AddSegmentsModal;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Checkbox,\n  Field,\n  FieldLabel,\n  FileUpload,\n  Modal,\n} from 'taulia-ui';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { downloadBlob, genericErrorToast } from '../../Utils/utils';\nimport { RequestContext } from '../../contexts';\n\nfunction UploadContactsModal({ open, onRequestClose }) {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n  const [file, setFile] = useState();\n  const [isUploading, setIsUploading] = useState(false);\n  const [overrideContacts, setOverrideContacts] = useState(false);\n  const [results, setResults] = useState();\n  const sampleCsvContentBlob = new Blob(\n    [\n      'SupplierNumber_Required,EmailAddress,FirstName,LastName,PhoneNumber,MobileNumber,FaxNumber,Department,Role,Notes,ErpClientId,\"Note: The first row (header) is used to read the csv and needs to remain in the csv.\"\\n000000TEST,jane.smith@example.com,Jane,Smith,555-555-5555,123-456-7890,111-111-1111,AP,CEO,Example,ExampleErpClientId',\n    ],\n    {\n      type: 'text/csv;charset=utf-8',\n    }\n  );\n\n  const beginUpload = () => {\n    setIsUploading(true);\n    const data = new FormData();\n    data.append('file', file);\n    data.append('overrideContacts', overrideContacts.toString());\n    request('POST', '/api/batchUpload')\n      .send(data)\n      .then(response => {\n        setResults(response.body.result);\n        setIsUploading(false);\n      })\n      .catch(() => {\n        genericErrorToast();\n        setIsUploading(false);\n      });\n  };\n\n  const downloadResults = () => {\n    const headers = [\n      'Department',\n      'Email Address',\n      'Erp Client Id',\n      'Fax Number',\n      'First Name',\n      'Ignored Reason (if applicable)',\n      'Last Name',\n      'Mobile Number',\n      'Notes',\n      'Phone Number',\n      'Role',\n      'Supplier #',\n      'Update Status',\n    ];\n    const updatedContactFields = [\n      'department',\n      'emailAddress',\n      'erpClientId',\n      'fax',\n      'firstName',\n      'ignoreReason',\n      'lastName',\n      'mobileNumber',\n      'notes',\n      'phoneNumber',\n      'role',\n      'supplierNumber',\n      'updateStatus',\n    ];\n    let csv = '';\n    csv += `${headers.join(',')}\\n`;\n    results.updatedContactList.forEach(item => {\n      let row = '';\n      updatedContactFields.forEach(key => {\n        let fieldValue = `${item[key]}`;\n        if (fieldValue === `undefined`) {\n          fieldValue = '';\n        }\n        row += `${fieldValue},`;\n      });\n      csv += `${row}\\n`;\n    });\n    const resultsToDownload = new Blob([csv], {\n      type: 'text/csv;charset=utf-8',\n    });\n    downloadBlob(resultsToDownload, 'upload-contacts-details.csv');\n  };\n\n  const onClose = () => {\n    setResults();\n    onRequestClose();\n  };\n\n  return (\n    <Modal width={800} open={open} onRequestClose={onRequestClose}>\n      <div>\n        <h3>{t('supplierSearch.uploadContacts')}</h3>\n        {results ? (\n          <section>\n            <p style={{ margin: '20px 0' }}>\n              {t('supplierSearch.uploadProcessed')}\n            </p>\n            <p>\n              <strong>{results.totalAdded}</strong>\n              &nbsp;\n              {t('supplierSearch.added')}\n            </p>\n            <p>\n              <strong>{results.totalUpdated}</strong>\n              &nbsp;\n              {t('supplierSearch.updated')}\n            </p>\n            <p>\n              <strong>{results.totalIgnored}</strong>\n              &nbsp;\n              {t('supplierSearch.ignored')}\n            </p>\n            <div key=\"actions\" style={{ float: 'right' }}>\n              <Button\n                data-testid=\"download-results\"\n                onClick={downloadResults}\n                theme=\"primary\"\n              >\n                {t('supplierSearch.downloadResults')}\n              </Button>\n              <Button data-testid=\"close-upload-modal\" onClick={onClose}>\n                {t('standard.close')}\n              </Button>\n            </div>\n          </section>\n        ) : (\n          <section>\n            <p>\n              <Trans\n                i18nKey=\"supplierSearch.uploadText\"\n                components={[\n                  <Button\n                    style={{ display: 'inline' }}\n                    theme=\"text\"\n                    onClick={() => {\n                      downloadBlob(\n                        sampleCsvContentBlob,\n                        'supplierUploadTemplateForMultiUserInvites.csv'\n                      );\n                    }}\n                  />,\n                ]}\n              />\n            </p>\n            <Field>\n              <FieldLabel htmlFor=\"file-upload\">\n                {t('bulkInvites.individualPage.options.upload.label')}\n              </FieldLabel>\n              <FileUpload acceptedFileTypes={['.csv']} onChange={setFile} />\n            </Field>\n            <Checkbox\n              data-testid=\"override-contacts\"\n              checked={overrideContacts}\n              onChange={() => setOverrideContacts(!overrideContacts)}\n            >\n              <strong>{t('supplierSearch.overrideLabel')}</strong>\n              <p>{t('supplierSearch.overrideText')}</p>\n            </Checkbox>\n            <div key=\"actions\" style={{ float: 'right' }}>\n              <Button\n                disabled={!file}\n                onClick={beginUpload}\n                spinning={isUploading}\n                theme=\"primary\"\n              >\n                {t('supplierSearch.beginUpload')}\n              </Button>\n            </div>\n          </section>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nUploadContactsModal.propTypes = {\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n};\n\nUploadContactsModal.defaultProps = {\n  open: true,\n};\n\nexport default UploadContactsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EnhancedSearch,\n  LinkCell,\n  Modal,\n  StatusIndicator,\n  toast,\n} from 'taulia-ui';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'lodash';\nimport qs from 'qs';\nimport ReviewPage from '../BulkInvitesPages/ReviewPage';\nimport AddSegmentsModal from './AddSegmentsModal';\nimport UploadContactsModal from './UploadContactsModal';\nimport {\n  statusColorMap,\n  userCanEditSuppliers,\n} from '../../Utils/SupplierUtils';\nimport CONSTANTS from '../../globals';\nimport { UserSettingsContext } from '../../contexts';\nimport { genericErrorToast } from '../../Utils/utils';\n\nclass SupplierSearch extends React.Component {\n  static propTypes = {\n    csvExportLimit: PropTypes.number.isRequired,\n    i18n: PropTypes.shape(),\n    location: PropTypes.shape().isRequired,\n    history: PropTypes.shape().isRequired,\n    request: PropTypes.func.isRequired,\n    settings: PropTypes.shape(),\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    i18n: { language: 'en-US ' },\n    settings: { segmentsEnabled: false, isScfBuyer: false, isSingleErp: true },\n  };\n\n  state = {\n    countryOptions: [],\n    regionOptions: [],\n    segments: [],\n    selectedSuppliers: {},\n    showAddSegmentsModal: false,\n    showInviteSuppliersModal: false,\n    showUploadContactsModal: false,\n    onActionComplete: () => {\n      // do nothing\n    },\n  };\n\n  componentDidMount() {\n    const { i18n, settings } = this.props;\n    this.loadOptions('countries', i18n.language).then(options => {\n      this.setState({ countryOptions: options });\n    });\n    this.loadOptions('regions', i18n.language).then(options => {\n      this.setState({ regionOptions: options });\n    });\n    if (settings.segmentsEnabled) {\n      this.loadSegments();\n    }\n  }\n\n  onDataChange = data => {\n    const {\n      location: { pathname, search },\n    } = this.props;\n    localStorage.setItem(\n      'supplierData',\n      data.map(supplierItem => supplierItem.id)\n    );\n    localStorage.setItem('supplier-search-location', pathname + search);\n  };\n\n  onQueryChange = query => {\n    const { location, history } = this.props;\n    this.setState({ query });\n    const urlParams = qs.stringify(query, {\n      encode: true,\n    });\n    if (!isEqual(query, CONSTANTS.DEFAULT_QUERY)) {\n      history.push({\n        pathname: location.pathname,\n        search: `?${urlParams}`,\n      });\n    }\n  };\n\n  loadOptions = (field, locale) => {\n    const { request } = this.props;\n    return request('GET', `/eui/supplier/${field}?locale=${locale}`).then(\n      res => res.body\n    );\n  };\n\n  loadSegments = () => {\n    const { request } = this.props;\n    request('GET', '/api/segments')\n      .then(res => {\n        const { segments } = res.body;\n        this.setState({ segments });\n      })\n      .catch(() => console.error('Error loading segments')); // eslint-disable-line no-console\n  };\n\n  addMoneyFields = overrides => {\n    const moneyFields = [\n      'invSpendThirtyDay',\n      'invSpendOneYear',\n      'eInvEfileSpendThirtyDay',\n      'eInvEfileSpendOneYear',\n      'eInvEsendSpendThirtyDay',\n      'eInvEsendSpendOneYear',\n      'eInvPortalSpendThirtyDay',\n      'eInvPortalSpendOneYear',\n      'revenueUsd',\n      'epOfferedEnhSpendThirtyDay',\n      'epTakenEnhSpendOneYear',\n      'epTakenEnhSpendThirtyDay',\n      'epOfferedEnhSpendOneYear',\n    ];\n\n    const overridesCopy = { ...overrides };\n\n    moneyFields.forEach(field => {\n      overridesCopy[field] = { type: 'MONEY', currency: 'USD' };\n    });\n    return overridesCopy;\n  };\n\n  addSuppliersToSegment = async segment => {\n    const { request, t } = this.props;\n    const { selectedSuppliers, query, onActionComplete } = this.state;\n    let supplierNumbers;\n    if (selectedSuppliers.all) {\n      await request('POST', '/eui/supplier/search')\n        .send({ ...this.prepareQuery(query, 'number') })\n        .then(response => {\n          supplierNumbers = response.body.results.map(item => item.number);\n        });\n    } else {\n      const idQuery = {\n        filters: [\n          { field: 'id', operator: 'EQUAL', values: selectedSuppliers.ids },\n        ],\n        select: ['number'],\n        pagination: {},\n        sorts: [],\n      };\n\n      await request('POST', '/eui/supplier/search')\n        .send(idQuery)\n        .then(response => {\n          supplierNumbers = response.body.results.map(\n            supplier => supplier.number\n          );\n        });\n    }\n\n    const data = {\n      segmentId: segment.id,\n      supplierNumbers,\n      previewOnly: false,\n      replaceExistingAssociations: false,\n    };\n\n    if (selectedSuppliers.selectedCount > 50) {\n      request('POST', '/api/segment/associateSuppliersAsync')\n        .send(data)\n        .then(() => {\n          toast.info(\n            t('supplierSearch.addSuppliersProgress', {\n              suppliers: selectedSuppliers.selectedCount,\n              segmentName: segment.name,\n            })\n          );\n          this.setState({ showAddSegmentsModal: false });\n        })\n        .catch(() => toast.error(t('supplierSearch.addSuppliersFailure')));\n    } else {\n      const supplierCount = t('supplierSearch.supplierCount', {\n        count: selectedSuppliers.selectedCount,\n      });\n      request('POST', '/api/segment/associateSuppliers')\n        .send(data)\n        .then(() => {\n          toast.success(\n            t('supplierSearch.addSuppliersSuccess', {\n              supplierCount,\n              segmentName: segment.name,\n            })\n          );\n          onActionComplete();\n          this.setState({ showAddSegmentsModal: false });\n        })\n        .catch(() => toast.error(t('supplierSearch.addSuppliersFailure')));\n    }\n  };\n\n  openInviteModal = supplierDetailsIds => {\n    const { request, history } = this.props;\n    request('POST', '/api/bulkInvites/criteria')\n      .send({ supplierDetailsIds })\n      .then(() => history.push(CONSTANTS.SUPPLIERS.BULK_INVITES.REVIEW))\n      .then(() => this.setState({ showInviteSuppliersModal: true }))\n      .catch(genericErrorToast);\n  };\n\n  inviteSuppliers = selection => {\n    const { request } = this.props;\n    if (selection.all) {\n      const { query } = this.state;\n      request('POST', '/eui/supplier/search')\n        .send({ ...this.prepareQuery(query) })\n        .then(response => {\n          const ids = [];\n          response.body.results.forEach(supplier => {\n            ids.push(supplier.id);\n          });\n          this.openInviteModal(ids);\n        });\n    } else {\n      this.openInviteModal(selection.ids);\n    }\n  };\n\n  prepareQuery = (query, select = 'id') => {\n    // Remove any filters from the query that don't have valid arguments.\n    const unaryOperators = ['IS_NULL', 'NOT_NULL'];\n    const ternaryOperators = ['BETWEEN', 'NOT_BETWEEN'];\n\n    const filters = query.filters.filter(filter => {\n      const values = filter.values ? filter.values.filter(it => it) : [];\n      const operator = filter.operator || 'EQUAL';\n\n      if (unaryOperators.includes(operator)) {\n        return true;\n      }\n      if (ternaryOperators.includes(operator)) {\n        return values.length === 2;\n      }\n      return values.length > 0;\n    });\n\n    return {\n      filters,\n      pagination: {},\n      select: [select],\n      sorts: [],\n    };\n  };\n\n  statusColorCell = cell => {\n    const { t } = this.props;\n    const { value } = cell;\n    return (\n      <span title={value}>\n        <StatusIndicator color={statusColorMap[value]}>\n          {t(`fields.combinedEnrollmentStatus.enumValues.${value}`)}\n        </StatusIndicator>\n      </span>\n    );\n  };\n\n  static contextType = UserSettingsContext;\n\n  render() {\n    const {\n      countryOptions,\n      regionOptions,\n      selectedSuppliers,\n      segments,\n      showAddSegmentsModal,\n      showInviteSuppliersModal,\n      showUploadContactsModal,\n    } = this.state;\n    const { csvExportLimit, location, request, settings, t } = this.props;\n    const { companyId, userId, userRoles } = this.context;\n    if (!countryOptions.length || !regionOptions.length) {\n      return null;\n    }\n    const regionOptionMatcher = (option, search, defaultOptionMatcher) => {\n      if (defaultOptionMatcher(option, search)) {\n        const filters =\n          qs.parse(location.search.slice(1), {\n            decode: true,\n            arrayLimit: 50,\n          }).filters || [];\n\n        const countryFilters =\n          filters.find(filter => filter.field === 'country') || {};\n\n        if (countryFilters.values) {\n          // If there is a country being filtered, make sure the region is in at least one of the filtered countries.\n          return countryFilters.values.some(country =>\n            option.value.includes(`${country}:`)\n          );\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    const fieldOverrides = {\n      name: {\n        column: {\n          cell: LinkCell,\n          linkUrlGetter: ({ object }) => `/suppliers/search/${object.id}`,\n          fixedOrder: 1,\n          width: 250,\n        },\n      },\n      number: {\n        column: {\n          cell: LinkCell,\n          linkUrlGetter: ({ object }) => `/suppliers/search/${object.id}`,\n          fixedOrder: 2,\n          width: 200,\n        },\n      },\n      combinedEnrollmentStatus: { column: { cell: this.statusColorCell } },\n\n      // These two fields are overridden to be type `ENUM` so they will use a typeahead and translate country and\n      // region ISO codes to a label with the localized name.\n      country: { type: 'ENUM', enumOptions: countryOptions },\n      region: {\n        type: 'ENUM',\n        enumOptions: regionOptions,\n        optionMatcher: regionOptionMatcher,\n      },\n    };\n\n    const actions = [\n      {\n        label: t('supplierSearch.inviteActionTitle'),\n        allowEmptySelection: false,\n        onClick: selection => {\n          this.inviteSuppliers(selection);\n        },\n      },\n      {\n        label: t('supplierSearch.uploadContacts'),\n        preventSelectedSelection: true,\n        onClick: () => this.setState({ showUploadContactsModal: true }),\n      },\n    ];\n\n    if (settings.segmentsEnabled) {\n      actions.push({\n        label: t('supplierSearch.addSuppliersTitle'),\n        allowEmptySelection: false,\n        onClick: (selection, onActionComplete) => {\n          this.setState({\n            selectedSuppliers: selection,\n            showAddSegmentsModal: true,\n            onActionComplete,\n          });\n        },\n      });\n    }\n\n    const excludedFields = [\n      'id',\n      'isEnrolled',\n      'invitationEligibilityStatus',\n      'enrollmentStatus',\n      'businessUnitNumbers',\n      'invPaidSpendThirtyDayEur',\n      'invPaidSpendThirtyDayGbp',\n      'invPaidSpendThirtyDayCan',\n      'invPaidSpendThirtyDayAus',\n      'invPaidSpendThirtyDayLocal',\n      'invPaidSpendOneYearEur',\n      'invPaidSpendOneYearGbp',\n      'invPaidSpendOneYearCan',\n      'invPaidSpendOneYearAus',\n      'invPaidSpendOneYearLocal',\n      'eInvEfileSpendThirtyDayEur',\n      'eInvEfileSpendThirtyDayGbp',\n      'eInvEfileSpendThirtyDayCan',\n      'eInvEfileSpendThirtyDayAus',\n      'eInvEfileSpendThirtyDayLocal',\n      'eInvEfileSpendOneYearEur',\n      'eInvEfileSpendOneYearGbp',\n      'eInvEfileSpendOneYearCan',\n      'eInvEfileSpendOneYearAus',\n      'eInvEfileSpendOneYearLocal',\n      'eInvEsendSpendThirtyDayEur',\n      'eInvEsendSpendThirtyDayGbp',\n      'eInvEsendSpendThirtyDayCan',\n      'eInvEsendSpendThirtyDayAus',\n      'eInvEsendSpendThirtyDayLocal',\n      'eInvEsendSpendOneYearEur',\n      'eInvEsendSpendOneYearGbp',\n      'eInvEsendSpendOneYearCan',\n      'eInvEsendSpendOneYearAus',\n      'eInvEsendSpendOneYearLocal',\n      'eInvPortalSpendThirtyDayEur',\n      'eInvPortalSpendThirtyDayGbp',\n      'eInvPortalSpendThirtyDayCan',\n      'eInvPortalSpendThirtyDayAus',\n      'eInvPortalSpendThirtyDayLocal',\n      'eInvPortalSpendOneYearEur',\n      'eInvPortalSpendOneYearGbp',\n      'eInvPortalSpendOneYearCan',\n      'eInvPortalSpendOneYearAus',\n      'eInvPortalSpendOneYearLocal',\n    ];\n    if (settings.isScfBuyer) {\n      excludedFields.push(\n        'epOfferedEnhSpendThirtyDay',\n        'epTakenEnhSpendOneYear',\n        'epTakenEnhSpendThirtyDay',\n        'epOfferedEnhSpendOneYear'\n      );\n    }\n    if (settings.isSingleErp) {\n      excludedFields.push('clientId');\n    }\n    const successCallback = res => {\n      const { history } = this.props;\n      const suppliers = t('supplierSegment.alert.supplierCount', {\n        count: res.body.documentExport.recordCount,\n      });\n      toast.success(t('documentExports.successToast', { suppliers }));\n      history.push(CONSTANTS.DOCUMENTS.EXPORTS);\n    };\n\n    const enhancedSearchProps = {\n      actions: userCanEditSuppliers(userRoles) ? actions : [],\n      csvExportLimit,\n      defaultQuery: CONSTANTS.DEFAULT_QUERY,\n      documentExportData: {\n        buyerId: companyId,\n        errorCallback: () => toast.error(t('documentExports.errorToast')),\n        successCallback,\n        userId,\n      },\n      excludedFields,\n      fieldOverrides: this.addMoneyFields(fieldOverrides),\n      location,\n      onDataChange: this.onDataChange,\n      onQueryChange: this.onQueryChange,\n      request,\n      uri: '/eui/supplier',\n    };\n\n    return (\n      <div>\n        <EnhancedSearch {...enhancedSearchProps} />\n        <AddSegmentsModal\n          onRequestClose={() => this.setState({ showAddSegmentsModal: false })}\n          open={showAddSegmentsModal}\n          request={request}\n          selectedSuppliers={selectedSuppliers}\n          segments={segments}\n          onAddSuppliersToSegment={this.addSuppliersToSegment}\n        />\n        <UploadContactsModal\n          onRequestClose={() =>\n            this.setState({ showUploadContactsModal: false })\n          }\n          open={showUploadContactsModal}\n          request={request}\n        />\n        <Modal\n          onRequestClose={() =>\n            this.setState({ showInviteSuppliersModal: false })\n          }\n          open={showInviteSuppliersModal}\n          request={request}\n        >\n          <ReviewPage\n            onRequestClose={() =>\n              this.setState({ showInviteSuppliersModal: false })\n            }\n            request={request}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(SupplierSearch);\n","import React from 'react';\nimport CONSTANTS from '../../globals';\nimport FeatureToggledComponent from '../../Utils/FeatureToggledComponent';\nimport { MonolithIFrame } from '../MonolithIFrame';\nimport SupplierSearch from './SupplierSearch';\n\nconst SupplierSearchContainer = props => {\n  return (\n    <div data-testid=\"supplier-center-search-page\">\n      <FeatureToggledComponent\n        featureName={CONSTANTS.FEATURES.SUPPLIER_CENTER_NEW_UI}\n        enabledComponent={<SupplierSearch {...props} />}\n        disabledComponent={<MonolithIFrame {...props} />}\n      />\n    </div>\n  );\n};\n\nexport default SupplierSearchContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport CONSTANTS from '../../globals';\nimport { useFeatureFetch } from '../../hooks';\nimport { GenericErrorMessage } from '../../Utils/GenericErrorMessage';\nimport SupplierSearch from './SupplierSearch';\n\n// TODO remove when /supplier/search-beta is no longer used\n\nconst SupplierSearchBeta = props => {\n  const history = useHistory();\n  const supplierCenterFeature = useFeatureFetch(\n    CONSTANTS.FEATURES.SUPPLIER_CENTER_NEW_UI\n  );\n\n  if (supplierCenterFeature.loading) {\n    return null;\n  }\n\n  if (supplierCenterFeature.error) {\n    return <GenericErrorMessage />;\n  }\n\n  if (supplierCenterFeature.isEnabled) {\n    const { location } = props;\n    history.push({\n      pathname: CONSTANTS.SUPPLIERS.SEARCH,\n      search: location.search,\n    });\n  }\n\n  return <SupplierSearch {...props} />;\n};\n\nSupplierSearchBeta.propTypes = {\n  location: PropTypes.shape(),\n};\n\nSupplierSearchBeta.defaultProps = {\n  location: {},\n};\n\nexport default SupplierSearchBeta;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Field, Progress, Select } from 'taulia-ui';\nimport { withTranslation } from 'react-i18next';\nimport CONSTANTS from '../../globals';\nimport { RequestContext } from '../../contexts';\nimport { GenericErrorMessage } from '../../Utils/GenericErrorMessage';\n\nclass CompanySettings extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n  };\n\n  state = {\n    buyerGroupLoaded: false,\n    buyerGroupCompanies: [],\n    selectedBuyer: '',\n    showBuyerGroupError: false,\n    showBuyerSelectSuccess: false,\n  };\n\n  componentDidMount() {\n    const request = this.context;\n    request('GET', '/api/buyer-group')\n      .then(response => {\n        this.setState({\n          buyerGroupLoaded: true,\n          buyerGroupCompanies: response.body.companies || [],\n          selectedBuyer: response.body.selectedBuyer,\n          showBuyerGroupError: false,\n        });\n      })\n      .catch(error => {\n        this.setBuyerGroupError({ buyerGroupLoaded: true });\n        if (CONSTANTS.DEBUG) {\n          console.log(error); // eslint-disable-line no-console\n        }\n      });\n  }\n\n  onCompanyChange = selectedBuyer => {\n    const request = this.context;\n    request('POST', '/api/selected-buyer')\n      .send({ buyerId: selectedBuyer })\n      .then(() => {\n        this.setBuyerSelectSuccess({ selectedBuyer });\n        this.startReloadPageTimer();\n      })\n      .catch(error => {\n        this.setBuyerGroupError();\n        if (CONSTANTS.DEBUG) {\n          console.log(error); // eslint-disable-line no-console\n        }\n      });\n  };\n\n  getSelectedBuyerName = () => {\n    const { buyerGroupCompanies, selectedBuyer } = this.state;\n    const selectedCompany = buyerGroupCompanies.find(\n      company => company.id === selectedBuyer\n    );\n    return selectedCompany ? selectedCompany.name : '';\n  };\n\n  setBuyerGroupError = props => {\n    this.setState({\n      showBuyerGroupError: true,\n      showBuyerSelectSuccess: false,\n      ...props,\n    });\n  };\n\n  setBuyerSelectSuccess = props => {\n    this.setState({\n      showBuyerGroupError: false,\n      showBuyerSelectSuccess: true,\n      ...props,\n    });\n  };\n\n  startReloadPageTimer = () => {\n    setTimeout(() => {\n      window.location.reload();\n    }, 3000);\n  };\n\n  static contextType = RequestContext;\n\n  render() {\n    const {\n      buyerGroupCompanies,\n      buyerGroupLoaded,\n      selectedBuyer,\n      showBuyerGroupError,\n      showBuyerSelectSuccess,\n    } = this.state;\n    const { t } = this.props;\n\n    const options = buyerGroupCompanies.map(group => {\n      return { label: group.name, value: group.id };\n    });\n\n    return (\n      <div className=\"company-settings-wrapper\">\n        <h3>{t('nav.buyer_area.settings.company_settings')}</h3>\n        {!buyerGroupLoaded && <Progress />}\n        {showBuyerGroupError && (\n          <div className=\"app-error\">\n            <GenericErrorMessage />\n          </div>\n        )}\n        {showBuyerSelectSuccess && (\n          <Alert inline theme=\"success\">\n            {t('company_settings.change_company_success', {\n              buyerCompany: this.getSelectedBuyerName(),\n            })}\n          </Alert>\n        )}\n        {buyerGroupCompanies.length > 1 && (\n          <div>\n            <p style={{ maxWidth: '600px' }}>\n              {t('company_settings.info', {\n                buyerCompany: this.getSelectedBuyerName(),\n              })}\n            </p>\n            <Field>\n              <Select\n                enableSearch={false}\n                options={options}\n                multiple={false}\n                onChange={this.onCompanyChange}\n                value={selectedBuyer}\n              />\n            </Field>\n          </div>\n        )}\n        {buyerGroupCompanies.length < 2 && t('company_settings.no_settings')}\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(CompanySettings);\n","import React, { useEffect, useReducer, useState } from 'react';\nimport {\n  Button,\n  Col,\n  Field,\n  FieldErrorMap,\n  FieldLabel,\n  Grid,\n  Modal,\n  PasswordValidator,\n  StatusIndicator,\n  Text,\n  toast,\n} from 'taulia-ui';\nimport { every } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { useFetchContext, useSendContext } from '../../hooks';\n\nconst INITIAL_STATE = {\n  newPassword: '',\n  oldPassword: '',\n  errors: {},\n  validations: {\n    length: false,\n    upper: false,\n    lower: false,\n    number: false,\n    match: false,\n  },\n  authType: '',\n  phoneNumber: '',\n  userId: '',\n};\n\nconst SecuritySettings = () => {\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  const reducer = (prevState, updatedProperty) => ({\n    ...prevState,\n    ...updatedProperty,\n  });\n\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [showDisable2faModal, setShowDisable2faModal] = useState(false);\n  const [status2fa, setStatus2fa] = useState(false);\n  const [state, setState] = useReducer(reducer, INITIAL_STATE);\n\n  const { data: user2faData, loading: user2faDataLoading } = useFetchContext(\n    '/api/security/user-2fa-config'\n  );\n\n  const {\n    data: updatedPassword,\n    doSend: sendPassword,\n    error: passwordError,\n    loading: passwordLoading,\n  } = useSendContext('PUT', '/api/password');\n\n  const {\n    doSend: doDelete,\n    error: deleteError,\n    success: deleteSuccess,\n  } = useSendContext('DELETE', '/api/security/user-2fa-config');\n\n  const translateError = errorCode => {\n    const errorMap = {\n      INCORRECT_PASSWORD: 'profile.errors.toast.incorrectPassword',\n      OLD_PASSWORD_MISMATCH: 'profile.errors.toast.passwordMismatch',\n      PASSWORD_VALIDATION_FAILS: 'profile.errors.toast.invalidPassword',\n    };\n    const error = errorMap[errorCode] || 'standard.error';\n    return t(error);\n  };\n\n  useEffect(() => {\n    // Clears modal on exit\n    setState(INITIAL_STATE);\n  }, [showPasswordModal]);\n\n  useEffect(() => {\n    if (user2faData) {\n      setStatus2fa(user2faData.enrolled);\n      setState({\n        authType: user2faData.type,\n        phoneNumber: user2faData.phoneNumber,\n        userId: user2faData.userId,\n      });\n    }\n  }, [user2faData]);\n  useEffect(() => {\n    if (updatedPassword) {\n      toast.success(t('security_settings.successToast'));\n    }\n  }, [updatedPassword]);\n\n  useEffect(() => {\n    if (deleteSuccess) {\n      toast.success(t('authentication.disable2faSuccessToast'));\n    }\n  }, [deleteSuccess]);\n\n  useEffect(() => {\n    if (deleteError) {\n      toast.error(t('standard.error'));\n    }\n  }, [deleteError]);\n\n  useEffect(() => {\n    if (passwordError) {\n      toast.error(translateError(passwordError.failureReason));\n    }\n  }, [passwordError]);\n\n  useEffect(() => {\n    if (location.search.includes('user2FASetupSuccess')) {\n      toast.success(t('authentication.user2faSetupSuccess'));\n    }\n  }, []);\n\n  const handleEnableOnClick = () => {\n    window.location = `${user2faData?.loginUrl}/authentication/choose-method`;\n  };\n\n  const handleDisableOnClick = () => {\n    setShowDisable2faModal(true);\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setState({\n      [name]: value,\n      errors: { ...state.errors, [name]: '' },\n    });\n  };\n\n  const changePassword = e => {\n    e.preventDefault();\n    const { oldPassword, newPassword } = state;\n    sendPassword({ oldPassword, newPassword });\n    setShowPasswordModal(false);\n  };\n\n  const handleSaveDisable2fa = e => {\n    e.preventDefault();\n    doDelete();\n    setStatus2fa(false);\n    setState({\n      authType: '',\n      phoneNumber: '',\n      userId: '',\n    });\n    setShowDisable2faModal(false);\n  };\n\n  const validateOnBlur = event => {\n    const { value, name } = event.target;\n    let error;\n    if (!value.length) {\n      error = 'required';\n    }\n    setState({ errors: { ...state.errors, [name]: error } });\n  };\n\n  const renderPasswordModal = () => {\n    return (\n      <Modal\n        width={600}\n        open={showPasswordModal}\n        title={t('profile.changePassword')}\n        onRequestClose={() => setShowPasswordModal(false)}\n      >\n        <h3>{t('profile.changePassword')}</h3>\n        <form onSubmit={changePassword}>\n          <Field validationState={state.errors.oldPassword ? 'error' : null}>\n            <FieldLabel htmlFor=\"current-password\">\n              {t('profile.oldPassword')}\n            </FieldLabel>\n            <Text\n              id=\"current-password\"\n              validationState={state.errors.oldPassword ? 'error' : null}\n              value={state.oldPassword}\n              type=\"password\"\n              name=\"oldPassword\"\n              onChange={handleInputChange}\n              onBlur={validateOnBlur}\n            />\n            <FieldErrorMap code={state.errors.oldPassword}>\n              {t('error.requiredField')}\n            </FieldErrorMap>\n          </Field>\n          <PasswordValidator\n            changePassword\n            email={{ value: state.oldEmail }}\n            password={{\n              value: state.newPassword,\n              error: state.errors.newPassword,\n              validations: state.validations,\n            }}\n            handleInputChange={({ value, validations }) =>\n              setState({ newPassword: value, validations })\n            }\n          />\n          <div key=\"actions\" style={{ float: 'right' }}>\n            <Button theme=\"text\" onClick={() => setShowPasswordModal(false)}>\n              {t('standard.cancel')}\n            </Button>\n            <Button\n              data-testid=\"update-password-button\"\n              disabled={!(state.oldPassword.length && every(state.validations))}\n              spinning={passwordLoading}\n              theme=\"primary\"\n              type=\"submit\"\n            >\n              {t('profile.update')}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    );\n  };\n\n  const renderDisable2faModal = () => {\n    return (\n      <Modal\n        width={600}\n        open={showDisable2faModal}\n        title=\"Disable 2fa modal\"\n        onRequestClose={() => setShowDisable2faModal(false)}\n      >\n        <p>{t('authentication.disable2FAText')}</p>\n        <div style={{ marginTop: '20px' }} className=\"modal-button-container\">\n          <Button\n            data-testid=\"disable-2fa-modal-cancel\"\n            onClick={() => setShowDisable2faModal(false)}\n            theme=\"text\"\n          >\n            {t('standard.cancel')}\n          </Button>\n          <Button\n            data-testid=\"disable-2fa-modal-save\"\n            onClick={handleSaveDisable2fa}\n            theme=\"primary\"\n          >\n            {t('authentication.disable2faButton')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const sm = 100;\n  const md = 60;\n  const lg = 60;\n\n  if (user2faDataLoading) {\n    return <div />;\n  }\n\n  return (\n    <div className=\"profile\">\n      <h3>{t('nav.buyer_area.settings.security_settings')}</h3>\n      <Grid gutter={100}>\n        <Col sm={sm} md={md} lg={lg}>\n          <FieldLabel htmlFor=\"change-password-modal\">\n            {t('profile.changePassword')}\n          </FieldLabel>\n          <p>{t('profile.passwordSubtext')}</p>\n          <Button\n            data-testid=\"change-password-button\"\n            type=\"submit\"\n            theme=\"primary\"\n            onClick={() => setShowPasswordModal(true)}\n          >\n            {t('profile.changePassword')}\n          </Button>\n          {renderPasswordModal()}\n          <FieldLabel htmlFor=\"authentication-header\">\n            {t('authentication.header')}\n          </FieldLabel>\n          <span\n            data-testid={`status-indicator-${\n              status2fa ? 'enabled' : 'disabled'\n            }`}\n            style={{ marginLeft: '10px' }}\n          >\n            <StatusIndicator color={status2fa ? 'green' : 'gray'}>\n              {status2fa ? t('userManager.enabled') : t('userManager.disabled')}\n            </StatusIndicator>\n          </span>\n          <p>{t('authentication.infoText')}</p>\n          {status2fa && (\n            <table className=\"enabled-2fa-info\">\n              <tbody>\n                <tr>\n                  <td>\n                    <div className=\"flex-start-row\">\n                      <FieldLabel htmlFor=\"authentication-preferredMethod\">\n                        {`${t('authentication.preferredMethod')}:`}\n                        <>&nbsp;</>\n                      </FieldLabel>\n                      <span>\n                        {state.authType === 'SMS'\n                          ? state.phoneNumber\n                          : t('authentication.authenticatorApp')}\n                      </span>\n                    </div>\n                    <p>{t('authentication.preferredMethodText')}</p>\n                  </td>\n                  <td>\n                    <Button\n                      type=\"submit\"\n                      theme=\"light\"\n                      size=\"md\"\n                      onClick={() => {\n                        window.location = `${user2faData?.loginUrl}/authentication/choose-method`;\n                      }}\n                    >\n                      {t('standard.edit')}\n                    </Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <FieldLabel htmlFor=\"authentication-recoveryCodes\">\n                      {t('authentication.recoveryCodes')}\n                    </FieldLabel>\n                    <p>{t('authentication.recoveryCodesText')}</p>\n                  </td>\n                  <td>\n                    <Button\n                      type=\"submit\"\n                      theme=\"light\"\n                      size=\"md\"\n                      onClick={() => {\n                        window.location = `${user2faData?.loginUrl}/authentication/recovery-codes?viewOnly=true`;\n                      }}\n                    >\n                      {t('standard.view')}\n                    </Button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          )}\n          {renderDisable2faModal()}\n          <Button\n            type=\"submit\"\n            theme={status2fa ? 'light' : 'primary'}\n            onClick={status2fa ? handleDisableOnClick : handleEnableOnClick}\n          >\n            {status2fa\n              ? t('authentication.disable')\n              : t('authentication.enable')}\n          </Button>\n        </Col>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SecuritySettings;\n","import { i18next } from 'taulia-ui';\n\n// Currency\nexport function localizeCurrency(value, currency = 'USD') {\n  if (value === null || Number.isNaN(Number(value))) {\n    return '—';\n  }\n  return Number(value).toLocaleString(i18next.language, {\n    style: 'currency',\n    currency,\n  });\n}\n\n// Number\nexport function localizeNumber(value) {\n  if (value === null || Number.isNaN(Number(value))) {\n    return '—';\n  }\n  return Number(value).toLocaleString(i18next.language);\n}\n\n// Time\nexport function localizeDate(date) {\n  let formattedDate;\n  if (date) {\n    formattedDate = new Date(date).toLocaleDateString(i18next.language);\n  }\n  if (!formattedDate || formattedDate === 'Invalid Date') {\n    return '—';\n  }\n  return formattedDate;\n}\n\nexport function localizeTime(date) {\n  let formattedTime;\n  if (date) {\n    formattedTime = new Date(date).toLocaleTimeString(i18next.language);\n  }\n  if (!formattedTime || formattedTime === 'Invalid Date') {\n    return '—';\n  }\n  return formattedTime;\n}\n\nexport function localizeDateTime(date) {\n  let formattedTime;\n  if (date) {\n    formattedTime = new Date(date).toLocaleString(i18next.language);\n  }\n  if (!formattedTime || formattedTime === 'Invalid Date') {\n    return '—';\n  }\n  return formattedTime;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Col, Grid, Logo, Text } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport dompurify from 'dompurify';\nimport { localizeDate } from '../../Utils/localizeUtils';\n\nfunction Preview({ companyName, announcement }) {\n  const {\n    alternateRecipientEnabled,\n    acceptButtonLabel,\n    declineButtonLabel,\n    files,\n    message,\n    requiresAck,\n    subject,\n  } = announcement;\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"announcement-preview monolith\">\n      <div className=\"top-section\">\n        {t('announcements.messageFrom', { companyName })}\n      </div>\n      <Logo />\n      <h3>{subject}</h3>\n      <div\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{\n          __html: dompurify.sanitize(message),\n        }}\n      />\n      {files?.length ? (\n        <>\n          <strong>{t('announcements.attachments')}</strong>\n          <ul>\n            {files.map(file => (\n              <li key={file.attachmentId}>{file.fileName}</li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        ''\n      )}\n      {requiresAck && (\n        <>\n          <Grid gutter={100}>\n            <Col sm={50} md={50} lg={50}>\n              <div className=\"strong\">\n                {t('supplierSegment.supplierSegmentList.name')}\n              </div>\n              <div className=\"strong\">{t('profile.email')}</div>\n              <div className=\"strong\" style={{ marginBottom: '45px' }}>\n                {t('profile.title')}\n              </div>\n              <div className=\"strong\">{t('announcements.date')}</div>\n              {alternateRecipientEnabled && (\n                <div className=\"strong\">\n                  {t('announcements.alternateRecipientField')}\n                </div>\n              )}\n            </Col>\n            <Col sm={50} md={50} lg={50}>\n              <div>Joanna Smith</div>\n              <div>joanna.smith@suppliercompany.com</div>\n              <Text readOnly />\n              <div>{localizeDate(new Date())}</div>\n              {alternateRecipientEnabled && (\n                <>\n                  <Text readOnly placeholder={t('profile.firstName')} />\n                  <Text readOnly placeholder={t('profile.lastName')} />\n                  <Text readOnly placeholder={t('profile.email')} />\n                  <Text readOnly placeholder={t('profile.title')} />\n                </>\n              )}\n            </Col>\n          </Grid>\n          <p>{t('announcements.previewText')}</p>\n          <div className=\"button-container\">\n            <Button>{declineButtonLabel?.value || declineButtonLabel}</Button>\n            <Button theme=\"primary\">\n              {acceptButtonLabel?.value || acceptButtonLabel}\n            </Button>\n          </div>\n        </>\n      )}\n      <span className=\"preview\">{t('announcements.preview')}</span>\n    </div>\n  );\n}\n\nPreview.defaultProps = {\n  announcement: {},\n  companyName: 'Acme Birdseed',\n};\n\nPreview.propTypes = {\n  announcement: PropTypes.shape({\n    acceptButtonLabel: PropTypes.string,\n    alternateRecipientEnabled: PropTypes.bool,\n    declineButtonLabel: PropTypes.string,\n    files: PropTypes.arrayOf(PropTypes.shape()),\n    message: PropTypes.string,\n    requiresAck: PropTypes.bool,\n    subject: PropTypes.string,\n  }),\n  companyName: PropTypes.string,\n};\n\nexport default Preview;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  ActionsCell,\n  Button,\n  Field,\n  FieldLabel,\n  Link,\n  ListView,\n  Text,\n  FieldErrorMap,\n  Modal,\n  Progress,\n  StatusIndicator,\n  toast,\n} from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport Preview from './Preview';\nimport CONSTANTS from '../../globals';\nimport { genericErrorToast } from '../../Utils/utils';\nimport { localizeDate, localizeNumber } from '../../Utils/localizeUtils';\nimport { RequestContext, UserSettingsContext } from '../../contexts';\n\nfunction AnnouncementsList() {\n  const history = useHistory();\n  const { companyName, email } = useContext(UserSettingsContext);\n  const request = useContext(RequestContext);\n  const [announcements, setAnnouncements] = useState();\n  const [announcementToClone, setAnnouncementToClone] = useState();\n  const [announcementToPreview, setAnnouncementToPreview] = useState();\n  const [createAnnouncementLoading, setCreateAnnouncementLoading] = useState(\n    false\n  );\n  const [name, setName] = useState({ value: '', error: null });\n  const [newAnnouncement, setNewAnnouncement] = useState();\n  const [paginationData, setPaginationData] = useState({\n    page: 0,\n    maxPerPage: 10,\n    totalResults: 0,\n  });\n  const [showAnnouncementModal, setShowAnnouncementModal] = useState(false);\n  const [showPreviewModal, setShowPreviewModal] = useState(false);\n  const { t } = useTranslation();\n\n  const createAnnouncement = e => {\n    e.preventDefault();\n    if (!name.value.length) {\n      setName({ value: '', error: true });\n    } else {\n      setCreateAnnouncementLoading(true);\n      const data = { title: name.value, message: '' };\n      if (announcementToClone) {\n        data.subject = announcementToClone.subject;\n        data.message = announcementToClone.message;\n      }\n      request('PUT', '/api/announcement')\n        .send(data)\n        .then(res => {\n          setShowAnnouncementModal(false);\n          setAnnouncementToClone(null);\n          setNewAnnouncement(res.body.id);\n        })\n        .catch(() => {\n          setCreateAnnouncementLoading(false);\n          setAnnouncementToClone(null);\n          genericErrorToast();\n        });\n    }\n  };\n\n  const onCancelModal = () => {\n    setName({ value: '', error: null });\n    setShowAnnouncementModal(false);\n  };\n\n  const getAnnouncements = (currentPage = 0, pageSize = 10) => {\n    request('GET', '/api/announcements')\n      .query({\n        includeTotal: true,\n        maxPerPage: pageSize,\n        page: currentPage,\n      })\n      .then(res => {\n        if (res.body) {\n          const { maxPerPage, page, totalResults } = res.body;\n          setPaginationData({ maxPerPage, page, totalResults });\n          setAnnouncements(res.body.announcements);\n        }\n      })\n      .catch(() => {\n        setAnnouncements([]);\n        genericErrorToast();\n      });\n  };\n\n  useEffect(() => {\n    getAnnouncements();\n  }, []);\n\n  useEffect(() => {\n    // Navigate to announcement page after modal is closed and new id is retrieved from server\n    if (!showAnnouncementModal && newAnnouncement) {\n      history.push(\n        `${CONSTANTS.SUPPLIERS.ANNOUNCEMENTS}/${newAnnouncement}?new`\n      );\n    }\n  }, [showAnnouncementModal, newAnnouncement]);\n\n  const renderAnnouncementModal = () => {\n    return (\n      <Modal\n        onRequestClose={onCancelModal}\n        open={showAnnouncementModal}\n        width={600}\n      >\n        <form onSubmit={e => createAnnouncement(e)}>\n          <h2>{t('announcements.createAnAnnouncement')}</h2>\n          <Field validationState={name.error ? 'error' : null}>\n            <FieldLabel htmlFor=\"subject\">{t('fields.name')}</FieldLabel>\n            <Text\n              id=\"subject\"\n              name=\"subject\"\n              onChange={e =>\n                setName({\n                  value: e.target.value,\n                  error: !e.target.value.length,\n                })\n              }\n              validationState={name.error ? 'error' : null}\n              value={name.value}\n            />\n            <FieldErrorMap code=\"error\">\n              {t('error.requiredField')}\n            </FieldErrorMap>\n          </Field>\n          <div style={{ float: 'right' }}>\n            <Button onClick={onCancelModal} theme=\"text\">\n              {t('standard.cancel')}\n            </Button>\n            <Button\n              data-testid=\"create-announcement\"\n              disabled={name.error}\n              spinning={createAnnouncementLoading}\n              theme=\"primary\"\n              type=\"submit\"\n            >\n              {t('announcements.createAnnouncement')}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    );\n  };\n\n  // List view\n\n  const onPageChange = (page, pageSize) => {\n    getAnnouncements(page, pageSize);\n    setPaginationData({ ...paginationData, maxPerPage: pageSize, page });\n  };\n\n  const actions = [\n    {\n      label: `+ ${t('announcements.createAnnouncement')}`,\n      allowEmptySelection: true,\n      onClick: () => setShowAnnouncementModal(true),\n    },\n  ];\n\n  const getActionsForCell = data => {\n    const cellActions = [\n      {\n        label: t(`standard.${data.status === 'DRAFT' ? 'edit' : 'view'}`),\n        action: () =>\n          history.push(\n            `${CONSTANTS.SUPPLIERS.ANNOUNCEMENTS}/${data.announcementId}`\n          ),\n      },\n      {\n        label: t('announcements.preview'),\n        action: () => {\n          if (data.announcementId === announcementToPreview?.announcementId) {\n            setShowPreviewModal(true);\n          } else {\n            request(\n              'GET',\n              `/api/announcement/${data.announcementId}/attachments`\n            ).then(res => {\n              setAnnouncementToPreview({ ...data, files: res.body });\n              setShowPreviewModal(true);\n            });\n          }\n        },\n      },\n      {\n        label: t('announcements.clone'),\n        action: () => {\n          setName({ value: data.title });\n          setAnnouncementToClone(data);\n          setShowAnnouncementModal(true);\n        },\n      },\n    ];\n    if (data.showReportDownload) {\n      cellActions.push({\n        label: t('announcements.downloadReport'),\n        action: () => {\n          request('PUT', `/api/announcement/${data.announcementId}/report`)\n            .send()\n            .then(() => {\n              toast.success(\n                <div>\n                  <h4>{t('announcements.downloadReportHeading')}</h4>\n                  <p>{t('announcements.downloadReportMsg', { email })}</p>\n                </div>\n              );\n            })\n            .catch(() => {\n              genericErrorToast();\n            });\n        },\n      });\n    }\n    return cellActions;\n  };\n\n  const getStatus = (status, endDate) => {\n    if (status === 'DRAFT') {\n      return { state: 'draft', color: 'yellow' };\n    }\n    const today = new Date().toISOString();\n    if (endDate > today) {\n      return { state: 'active', color: 'green' };\n    }\n    return { state: 'inactive', color: 'gray' };\n  };\n\n  const columns = [\n    {\n      key: 'announcement',\n      label: t('announcements.announcement'),\n      type: 'TEXT',\n      width: 400,\n      cell: data => {\n        const { announcementId, dateCreated, title } = data.object;\n        const date = localizeDate(dateCreated);\n        return (\n          <div className=\"table-group\">\n            <Link to={`/suppliers/announcements/${announcementId}`}>\n              {title}\n            </Link>\n            <span>{t('announcements.createdOn', { date })}</span>\n          </div>\n        );\n      },\n    },\n    {\n      key: 'stats',\n      label: t('fields.status'),\n      type: 'TEXT',\n      width: 250,\n      cell: data => {\n        const { endDate, startDate, status } = data.object;\n        let dateText = '';\n        if (startDate && endDate) {\n          const date1 = localizeDate(startDate);\n          const date2 = localizeDate(endDate);\n          dateText = (\n            <span style={{ display: 'block', fontSize: '14px' }}>\n              {t('announcements.dateToDate', { date1, date2 })}\n            </span>\n          );\n        }\n        const { state, color } = getStatus(status, endDate);\n        return (\n          <>\n            <StatusIndicator color={color}>\n              {t(`announcements.${state}`)}\n            </StatusIndicator>\n            {dateText}\n          </>\n        );\n      },\n    },\n    {\n      key: 'publishedTo',\n      label: t('announcements.publishedTo'),\n      type: 'TEXT',\n      cell: data => {\n        if (data.object.status === 'DRAFT') {\n          return '—';\n        }\n        const count = data.object.report.countOfMessages;\n        return (\n          <div className=\"table-group\">\n            <span>{localizeNumber(count)}</span>\n            <span>{t('documentExports.supplier', { count })}</span>\n          </div>\n        );\n      },\n    },\n    {\n      key: 'acknowledgedBy',\n      label: t('announcements.acknowledgedBy'),\n      type: 'TEXT',\n      width: 200,\n      cell: data => {\n        if (data.object.status === 'DRAFT') {\n          return '—';\n        }\n        const count = data.object.report.countOfAcks;\n        return (\n          <div className=\"table-group\">\n            <span>{localizeNumber(count)}</span>\n            <span>{t('documentExports.supplier', { count })}</span>\n          </div>\n        );\n      },\n    },\n    {\n      key: 'actions',\n      label: '',\n      cell: data => <ActionsCell items={getActionsForCell(data.object)} />,\n    },\n  ];\n\n  if (!announcements) {\n    return <Progress />;\n  }\n\n  return (\n    <>\n      <ListView\n        actions={actions}\n        actionsEnabled\n        columns={columns}\n        data={announcements}\n        isResizable\n        noResultsText={<p>{t('announcements.noAnnouncements')}</p>}\n        onPageChange={onPageChange}\n        page={paginationData?.page}\n        pageSize={paginationData?.maxPerPage}\n        paginationEnabled={!!paginationData}\n        showColumnConfig={false}\n        showCount\n        totalCount={paginationData?.totalResults}\n      />\n      <Modal\n        onRequestClose={() => {\n          setShowPreviewModal(false);\n        }}\n        open={showPreviewModal}\n        width={1000}\n      >\n        <Preview\n          announcement={announcementToPreview}\n          companyName={companyName}\n        />\n      </Modal>\n      {renderAnnouncementModal()}\n    </>\n  );\n}\n\nexport default AnnouncementsList;\n","import React from 'react';\n\nconst Arrow = props => {\n  return (\n    <svg\n      {...props}\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 100 100\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M77.9,61.4L77.9,61.4c2.2,2.2,2.2,5.8,0,8L54,93.3c-2.2,2.2-5.8,2.2-8,0L22.1,69.3c-2.2-2.2-2.2-5.8,0-8l0,0  \n          c2.2-2.2,5.8-2.2,8,0l14.3,14.3l0-65C44.3,7.6,46.9,5,50,5h0c3.1,0,5.6,2.5,5.6,5.6l0,65L70,61.4C72.2,59.2,75.7,59.2,\n          77.9,61.4z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\n\nconst CheckCircle = props => {\n  return (\n    <svg\n      {...props}\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 300 300\"\n    >\n      <g>\n        <g>\n          <path\n            d=\"M264.1,150c0,5.9-0.4,11.7-1.2,17.5c0.2-1.3,0.4-2.6,0.5-3.9c-1.5,11.1-4.5,22-8.8,32.3c0.5-1.2,1-2.3,1.5-3.5\n\t\t\tc-4.3,10.2-9.9,19.9-16.7,28.7c0.8-1,1.5-2,2.3-3c-6.8,8.8-14.7,16.8-23.6,23.6c1-0.8,2-1.5,3-2.3c-8.8,6.8-18.4,12.4-28.7,16.7\n\t\t\tc1.2-0.5,2.3-1,3.5-1.5c-10.3,4.3-21.2,7.3-32.3,8.8c1.3-0.2,2.6-0.4,3.9-0.5c-11.6,1.6-23.4,1.6-35,0c1.3,0.2,2.6,0.4,3.9,0.5\n\t\t\tc-11.1-1.5-22-4.5-32.3-8.8c1.2,0.5,2.3,1,3.5,1.5c-10.2-4.3-19.9-9.9-28.7-16.7c1,0.8,2,1.5,3,2.3c-8.8-6.8-16.8-14.7-23.6-23.6\n\t\t\tc0.8,1,1.5,2,2.3,3c-6.8-8.8-12.4-18.4-16.7-28.7c0.5,1.2,1,2.3,1.5,3.5c-4.3-10.3-7.3-21.2-8.8-32.3c0.2,1.3,0.4,2.6,0.5,3.9\n\t\t\tc-1.6-11.6-1.6-23.4,0-35c-0.2,1.3-0.4,2.6-0.5,3.9c1.5-11.1,4.5-22,8.8-32.3c-0.5,1.2-1,2.3-1.5,3.5c4.3-10.2,9.9-19.9,16.7-28.7\n\t\t\tc-0.8,1-1.5,2-2.3,3C65.1,73,73,65.1,81.8,58.3c-1,0.8-2,1.5-3,2.3c8.8-6.8,18.4-12.4,28.7-16.7c-1.2,0.5-2.3,1-3.5,1.5\n\t\t\tc10.3-4.3,21.2-7.3,32.3-8.8c-1.3,0.2-2.6,0.4-3.9,0.5c11.6-1.6,23.4-1.6,35,0c-1.3-0.2-2.6-0.4-3.9-0.5c11.1,1.5,22,4.5,32.3,8.8\n\t\t\tc-1.2-0.5-2.3-1-3.5-1.5c10.2,4.3,19.9,9.9,28.7,16.7c-1-0.8-2-1.5-3-2.3c8.8,6.8,16.8,14.7,23.6,23.6c-0.8-1-1.5-2-2.3-3\n\t\t\tc6.8,8.8,12.4,18.4,16.7,28.7c-0.5-1.2-1-2.3-1.5-3.5c4.3,10.3,7.3,21.2,8.8,32.3c-0.2-1.3-0.4-2.6-0.5-3.9\n\t\t\tC263.7,138.3,264.1,144.1,264.1,150c0,3.8,1.6,7.7,4.3,10.4c2.5,2.5,6.7,4.5,10.4,4.3c3.8-0.2,7.7-1.4,10.4-4.3\n\t\t\tc2.6-2.9,4.3-6.4,4.3-10.4c0-14.7-2.2-29.6-6.8-43.7c-4.4-13.6-10.8-26.7-19-38.4c-4.4-6.2-9.3-12.2-14.6-17.7\n\t\t\tc-5.3-5.5-11.1-10.3-17.1-14.9c-11.4-8.8-24.2-15.4-37.6-20.3c-13.8-5.1-28.5-7.7-43.1-8.3c-14.8-0.6-30,1.3-44.3,5.3\n\t\t\tc-13.7,3.9-27,9.9-38.9,17.7c-11.8,7.8-22.7,17.2-31.7,28.1c-4.8,5.9-9.4,12-13.3,18.5c-4,6.7-7.2,13.7-10.2,20.8\n\t\t\tc-5.6,13.6-8.6,28.1-9.8,42.8c-1.1,14.8,0.3,30,3.8,44.4c3.4,13.9,9.1,27.5,16.5,39.8c7.3,12,16.4,23.2,27,32.5\n\t\t\tc10.6,9.4,22.6,17.5,35.5,23.4c7.1,3.2,14.3,6,21.7,8.1c7.7,2.1,15.5,3.5,23.5,4.4c14.9,1.7,30,0.8,44.6-2.2\n\t\t\tc14.1-2.8,27.9-8.1,40.5-15.1c12.3-6.9,23.7-15.7,33.4-25.9c9.8-10.2,18.3-22,24.6-34.7c6.4-12.9,11.2-26.8,13.4-41.1\n\t\t\tc1.2-7.8,2-15.7,2-23.6c0-3.8-1.6-7.7-4.3-10.4c-2.5-2.5-6.7-4.5-10.4-4.3c-3.8,0.2-7.7,1.4-10.4,4.3\n\t\t\tC265.8,142.5,264.1,146,264.1,150z\"\n          />\n        </g>\n      </g>\n      <path\n        d=\"M137.5,211.5c-3.3,0-6.5-1.3-8.8-3.7l-50-50c-4.9-4.9-4.9-12.8,0-17.7s12.8-4.9,17.7,0l39.8,39.8l66.4-88.5\n\tc4.1-5.5,12-6.6,17.5-2.5c5.5,4.1,6.6,12,2.5,17.5l-75,100c-2.2,2.9-5.5,4.7-9.1,5L137.5,211.5L137.5,211.5z\"\n      />\n    </svg>\n  );\n};\n\nexport default CheckCircle;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { cx, Button } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { CheckCircle } from '../../icons';\n\nfunction AccordionItem({\n  buttonLabel,\n  canEdit,\n  children,\n  completeLabel,\n  isComplete,\n  isOpen,\n  isSaveDisabled,\n  label,\n  onComplete,\n  onSave,\n  toggleOpen,\n}) {\n  const onSubmit = () => {\n    onComplete(label);\n    onSave();\n    toggleOpen();\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"accordion-item\">\n      <div className=\"top-section\">\n        <div>\n          <span className=\"icon-span\">\n            <CheckCircle fill={isComplete ? '#35af28' : '#dcdedf'} />\n            &nbsp;\n            {label}\n          </span>\n          {isComplete && <span>{completeLabel}</span>}\n        </div>\n        {!isOpen && (\n          <Button\n            data-testid={`open-button-${label}`}\n            onClick={() => toggleOpen(label)}\n          >\n            {buttonLabel}\n          </Button>\n        )}\n      </div>\n      <div\n        aria-expanded={isOpen}\n        className={cx('accordion-item-content', { open: isOpen })}\n        data-testid={`accordion-item-content-${label}`}\n      >\n        {children}\n        {canEdit && (\n          <div style={{ marginTop: '20px' }}>\n            <Button\n              data-testid={`save-button-${label}`}\n              disabled={isSaveDisabled}\n              onClick={onSubmit}\n              theme=\"primary\"\n            >\n              {t('standard.save')}\n            </Button>\n            <Button\n              data-testid={`cancel-button-${label}`}\n              onClick={() => toggleOpen(label, true)}\n              theme=\"text\"\n            >\n              {t('standard.cancel')}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nAccordionItem.propTypes = {\n  buttonLabel: PropTypes.string,\n  canEdit: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired,\n  completeLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  isComplete: PropTypes.bool.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  isSaveDisabled: PropTypes.bool,\n  label: PropTypes.string,\n  onComplete: PropTypes.func.isRequired,\n  onSave: PropTypes.func,\n  toggleOpen: PropTypes.func.isRequired,\n};\n\nAccordionItem.defaultProps = {\n  buttonLabel: 'Open!',\n  canEdit: true,\n  completeLabel: 'Complete!',\n  label: 'A label!',\n  isSaveDisabled: false,\n  onSave: () => null,\n};\n\nfunction Accordion({ canEdit, children, onSubmit, onCancel }) {\n  const [openSections, setOpenSections] = useState({});\n  const [completeSections, setCompleteSections] = useState({});\n  const { t } = useTranslation();\n\n  const toggleOpen = (label, cancel = false) => {\n    const isOpen = !!openSections[label];\n    setOpenSections({ [label]: !isOpen });\n    if (cancel) {\n      onCancel(label);\n    }\n  };\n\n  const onComplete = label => {\n    setCompleteSections({ ...completeSections, [label]: true });\n  };\n\n  useEffect(() => {\n    const completed = {};\n    children.forEach(child => {\n      if (child.props.isComplete) completed[child.props.label] = true;\n    });\n    setCompleteSections(completed);\n  }, [children]);\n\n  const allComplete = Object.keys(completeSections).length === children.length;\n\n  return (\n    <div className=\"accordion\">\n      {children.map(child => (\n        <AccordionItem\n          {...child.props}\n          canEdit={canEdit}\n          isOpen={\n            !!openSections[child.props.label] ||\n            !canEdit ||\n            !!child.props.isOpen\n          }\n          isComplete={!!completeSections[child.props.label]}\n          key={child.props.label}\n          onComplete={onComplete}\n          toggleOpen={toggleOpen}\n        >\n          {child.props.children}\n        </AccordionItem>\n      ))}\n      {canEdit && (\n        <div className=\"accordion-button-container\">\n          <Button onClick={() => onSubmit(true)}>\n            {t('announcements.saveDraft')}\n          </Button>\n          <Button\n            data-testid=\"publish-button\"\n            disabled={!allComplete}\n            onClick={() => onSubmit(false)}\n            theme=\"primary\"\n          >\n            {t('announcements.publish')}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nAccordion.propTypes = {\n  canEdit: PropTypes.bool,\n  children: PropTypes.instanceOf(Object).isRequired,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nAccordion.defaultProps = {\n  canEdit: true,\n  onCancel: () => null,\n  onSubmit: () => null,\n};\n\nexport default Accordion;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Checkbox,\n  DateRangePicker,\n  Field,\n  FieldErrorMap,\n  FieldLabel,\n  FileUpload,\n  MultiFileUpload,\n  Progress,\n  Radio,\n  Select,\n  Text,\n  toast,\n} from 'taulia-ui';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport CKEditor from 'ckeditor4-react';\nimport dompurify from 'dompurify';\nimport Accordion from './Accordion';\nimport Preview from './Preview';\nimport { localizeDate } from '../../Utils/localizeUtils';\nimport {\n  downloadSampleSupplierInviteList,\n  redirectTo404,\n  genericErrorToast,\n} from '../../Utils/utils';\nimport { RequestContext, UserSettingsContext } from '../../contexts';\nimport CONSTANTS from '../../globals';\n\nfunction AnnouncementsView({ erpClients }) {\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n  const request = useContext(RequestContext);\n  const { t } = useTranslation();\n  const { companyName } = useContext(UserSettingsContext);\n  const [acceptButtonLabel, setAcceptButtonLabel] = useState({\n    value: '',\n    error: null,\n  });\n  const [alternateRecipientEnabled, setAlternateRecipientEnabled] = useState(\n    false\n  );\n  const [audience, setAudience] = useState();\n  const [canEdit, setCanEdit] = useState(true);\n  const [\n    supplierNumbersAttachmentId,\n    setSupplierNumbersAttachmentId,\n  ] = useState('');\n  const [customButtonsEnabled, setCustomButtonsEnabled] = useState(false);\n  const [declineButtonLabel, setDeclineButtonLabel] = useState({\n    value: '',\n    error: null,\n  });\n  const [files, setFiles] = useState([]);\n  const [forceAccept, setForceAccept] = useState(false);\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const [message, setMessage] = useState('');\n  const [requiresAck, setRequiresAck] = useState(false);\n  const [savedDates, setSavedDates] = useState([]);\n  const [erpClientId, setErpClientId] = useState('');\n  const [subject, setSubject] = useState({ value: '', error: 'error' });\n  const [tempAudience, setTempAudience] = useState('suppliers');\n  const [tempDates, setTempDates] = useState([]);\n  const [tempSubject, setTempSubject] = useState({ value: '', error: 'error' });\n  const [tempMessage, setTempMessage] = useState('');\n  const [tempTitle, setTempTitle] = useState('');\n  const [title, setTitle] = useState('');\n  const [upload] = useState({ value: null, error: null });\n  const [\n    supplierNumbersAttachmentFile,\n    setSupplierNumbersAttachmentFile,\n  ] = useState();\n\n  const { id } = params;\n  const isNew = location?.search === '?new';\n\n  const loadAnnouncement = () => {\n    request('GET', `/api/announcement/${id}`)\n      .then(res => {\n        const responseAudience = res.body.targetingCriteria.allSuppliers\n          ? 'suppliers'\n          : 'supplierNumbers';\n        setAudience(responseAudience);\n        setTempAudience(responseAudience);\n        if (responseAudience === 'supplierNumbers') {\n          setSupplierNumbersAttachmentId(\n            res.body.targetingCriteria.supplierNumbersAttachmentId\n          );\n        }\n        setAcceptButtonLabel({\n          value: res.body.acceptButtonLabel,\n          error: !res.body.acceptButtonLabel?.length,\n        });\n        setAlternateRecipientEnabled(res.body.alternateRecipientEnabled);\n        setCanEdit(res.body.status === 'DRAFT');\n        setCustomButtonsEnabled(res.body.customButtonsEnabled);\n        setDeclineButtonLabel({\n          value: res.body.declineButtonLabel,\n          error: !res.body.declineButtonLabel?.length,\n        });\n        setForceAccept(res.body.forceAccept);\n        setMessage(res.body.message);\n        setTempMessage(res.body.message);\n        setRequiresAck(res.body.requiresAck);\n        if (res.body.startDate && res.body.endDate) {\n          setSavedDates([res.body.startDate, res.body.endDate]);\n          setTempDates([res.body.startDate, res.body.endDate]);\n        }\n        setSubject({\n          value: res.body.subject,\n          error: !res.body.subject?.length,\n        });\n        setTempSubject({\n          value: res.body.subject,\n          error: !res.body.subject?.length,\n        });\n        setTitle(res.body.title);\n        setTempTitle(res.body.title);\n      })\n      .catch(() => redirectTo404(history));\n  };\n\n  const loadAttachments = () => {\n    request('GET', `/api/announcement/${id}/attachments`).then(res => {\n      setFiles(res.body);\n    });\n  };\n\n  const uploadAttachments = attachments => {\n    const formData = new FormData();\n    attachments.forEach(attachment => formData.append('files', attachment));\n    request('POST', `/api/announcement/${id}/attachments`)\n      .send(formData)\n      .then(loadAttachments);\n  };\n\n  const deleteAttachment = attachment => {\n    request(\n      'DELETE',\n      `/api/announcement/attachment/${attachment.attachmentId}`\n    ).then(loadAttachments);\n  };\n\n  const downloadAttachment = attachment => {\n    window.location = `/api/announcement/attachment/${attachment.attachmentId}/download`;\n  };\n\n  const saveAnnouncement = (draft = false, accordion = false) => {\n    request('PUT', `/api/announcement/${id}`)\n      .send({\n        acceptButtonLabel: acceptButtonLabel.value,\n        alternateRecipientEnabled,\n        customButtonsEnabled,\n        declineButtonLabel: declineButtonLabel.value,\n        endDate: savedDates[1],\n        forceAccept,\n        message,\n        requiresAck,\n        startDate: savedDates[0],\n        status: draft ? 'DRAFT' : 'ACTIVE_NOT_SENT',\n        subject: subject.value,\n        targetingCriteria: {\n          allSuppliers: audience === 'suppliers',\n          erpClientId,\n          supplierNumbersAttachmentId:\n            audience === 'supplierNumbers' ? supplierNumbersAttachmentId : null,\n        },\n        title,\n      })\n      .then(() => {\n        toast.success(\n          t(\n            draft\n              ? 'announcements.saveDraftSuccess'\n              : 'announcements.publishSuccess',\n            { title }\n          )\n        );\n        if (!accordion) {\n          history.push(CONSTANTS.SUPPLIERS.ANNOUNCEMENTS);\n        }\n      })\n      .catch(genericErrorToast);\n  };\n\n  useEffect(() => {\n    loadAnnouncement();\n    loadAttachments();\n  }, []);\n\n  useEffect(() => {\n    if (supplierNumbersAttachmentId) {\n      request(\n        'GET',\n        `/api/announcement/attachment/${supplierNumbersAttachmentId}`\n      ).then(res => {\n        setSupplierNumbersAttachmentFile(res.body.fileName);\n      });\n    }\n  }, [supplierNumbersAttachmentId]);\n\n  const erpOptions = erpClients.map(client => {\n    return { value: client.clientId, label: client.longDescription };\n  });\n\n  const getAudienceCompleteLabel = () => {\n    let i18nKey = 'announcements.sendToSupplierNumbers';\n    if (audience === 'suppliers') {\n      i18nKey = 'announcements.sendToSuppliers';\n    }\n    return <Trans i18nKey={i18nKey} components={[<strong />]} />;\n  };\n\n  const onAudienceSave = () => {\n    if (audience === 'suppliers' && supplierNumbersAttachmentId) {\n      request(\n        'DELETE',\n        `/api/announcement/attachment/${supplierNumbersAttachmentId}`\n      ).then(() => {\n        setSupplierNumbersAttachmentId(null);\n        setSupplierNumbersAttachmentFile(null);\n      });\n    }\n    saveAnnouncement(true, true);\n    setTempAudience(audience);\n  };\n\n  const onContentSave = () => {\n    saveAnnouncement(true, true);\n    setTempSubject(subject);\n    setTempMessage(message);\n  };\n\n  const onSchedulingSave = () => {\n    saveAnnouncement(true, true);\n    setTempDates(savedDates);\n  };\n\n  const onTitleSave = () => {\n    saveAnnouncement(true, true);\n    setTempTitle(title);\n    setIsEditingTitle(false);\n  };\n\n  const onTitleCancel = () => {\n    setTitle(tempTitle);\n    setIsEditingTitle(false);\n  };\n\n  const onCancel = label => {\n    if (label === 'Audience') {\n      setAudience(tempAudience);\n    }\n    if (label === 'Content') {\n      setMessage(tempMessage);\n      setSubject(tempSubject);\n    }\n    if (label === 'Scheduling') {\n      setSavedDates(tempDates);\n    }\n  };\n\n  const onCSVUpload = file => {\n    setSupplierNumbersAttachmentFile(file.name);\n    const data = new FormData();\n    data.append('file', file);\n    request('POST', `/api/announcement/${id}/targetingCriteria`)\n      .send(data)\n      .then(res => setSupplierNumbersAttachmentId(res.body.id));\n  };\n\n  const onRequiresAckChange = () => {\n    if (requiresAck) {\n      setForceAccept(false);\n      setCustomButtonsEnabled(false);\n    }\n    setRequiresAck(!requiresAck);\n  };\n\n  const audienceSaveDisabled =\n    audience === 'supplierNumbers' &&\n    (!supplierNumbersAttachmentId || (erpClients.length && !erpClientId));\n\n  const contentSaveDisabled =\n    !!subject.error ||\n    !message?.length ||\n    (customButtonsEnabled &&\n      (!acceptButtonLabel?.value?.length ||\n        !declineButtonLabel?.value?.length));\n\n  if (!tempTitle) {\n    return <Progress />;\n  }\n\n  return (\n    <>\n      <div>\n        {isEditingTitle ? (\n          <>\n            <Text\n              data-testid=\"edit-name-input\"\n              style={{ marginBottom: '10px' }}\n              onChange={e => setTitle(e.target.value)}\n              value={title}\n            />\n            <Button\n              data-testid=\"save-name-button\"\n              disabled={!title.length}\n              theme=\"primary\"\n              onClick={onTitleSave}\n            >\n              {t('standard.save')}\n            </Button>\n            <Button\n              data-testid=\"cancel-name-button\"\n              theme=\"text\"\n              onClick={onTitleCancel}\n            >\n              {t('standard.cancel')}\n            </Button>\n          </>\n        ) : (\n          <>\n            <h1 style={{ marginBottom: '28px' }}>{title}</h1>\n            {canEdit && (\n              <Button onClick={() => setIsEditingTitle(true)} theme=\"text\">\n                {t('announcements.editName')}\n              </Button>\n            )}\n          </>\n        )}\n      </div>\n      <Accordion\n        canEdit={canEdit}\n        onSubmit={saveAnnouncement}\n        onCancel={onCancel}\n      >\n        <section\n          buttonLabel={t('announcements.editAudience')}\n          completeLabel={getAudienceCompleteLabel()}\n          isComplete={!!audience}\n          isOpen={isNew}\n          isSaveDisabled={!!audienceSaveDisabled}\n          label={t('announcements.audience')}\n          onSave={onAudienceSave}\n        >\n          <section className=\"audience-card-container\">\n            <article className=\"audience-card\">\n              <Radio\n                aria-label=\"suppliers\"\n                checked={audience === 'suppliers'}\n                disabled={!canEdit}\n                onChange={event => setAudience(event.target.value)}\n                value=\"suppliers\"\n              >\n                <p className=\"title\">{t('announcements.allSuppliers')}</p>\n                <p>{t('announcements.publishAnnouncement')}</p>\n              </Radio>\n            </article>\n            <article className=\"audience-card\">\n              <Radio\n                aria-label=\"supplierNumbers\"\n                checked={audience === 'supplierNumbers'}\n                disabled={!canEdit}\n                onChange={event => setAudience(event.target.value)}\n                value=\"supplierNumbers\"\n              >\n                <p className=\"title\">\n                  {t('announcements.listSupplierNumbers')}\n                </p>\n                <p>{t('announcements.uploadList')}</p>\n              </Radio>\n            </article>\n          </section>\n          {audience === 'supplierNumbers' && (\n            <>\n              {erpClients.length > 1 && (\n                <div style={{ marginBottom: '10px' }}>\n                  <FieldLabel htmlFor=\"erp-select\">\n                    {t('supplierSegment.segmentAddSupplierForm.erpSystem')}\n                  </FieldLabel>\n                  <Select\n                    disabled={!canEdit}\n                    id=\"erp-select\"\n                    multiple={false}\n                    noSearchResultsLabel={t(\n                      'bulkInvites.searchPage.noSearchResultsLabel'\n                    )}\n                    onChange={erp => setErpClientId(erp)}\n                    options={erpOptions}\n                    placeholder={t(\n                      'supplierSegment.segmentAddSupplierForm.selectErpSystem'\n                    )}\n                    searchPlaceholder={t(\n                      'bulkInvites.searchPage.searchPlaceholder'\n                    )}\n                    value={erpClientId}\n                  />\n                </div>\n              )}\n              <Field validationState={upload.error ? 'error' : null}>\n                <FieldLabel htmlFor=\"file-upload\">\n                  {t('supplierSegment.segmentAddSupplierForm.selectCsvFile')}\n                </FieldLabel>\n                <FileUpload\n                  acceptedFileTypes={['.csv']}\n                  disabled={!canEdit}\n                  file={{ name: supplierNumbersAttachmentFile }}\n                  onChange={onCSVUpload}\n                />\n                <FieldErrorMap code={upload.error}>\n                  <span key=\"invalidType\">\n                    {t(\n                      'bulkInvites.individualPage.options.upload.error.invalidType'\n                    )}\n                  </span>\n                  {t(\n                    'bulkInvites.individualPage.options.upload.error.noContent'\n                  )}\n                </FieldErrorMap>\n                <p className=\"padding\">\n                  <Trans\n                    values={{\n                      hereLink: t(\n                        'bulkInvites.individualPage.options.upload.infoLink'\n                      ),\n                    }}\n                    i18nKey=\"bulkInvites.individualPage.options.upload.info\"\n                    components={[\n                      <Button\n                        style={{ display: 'inline-block' }}\n                        theme=\"text\"\n                        onClick={downloadSampleSupplierInviteList}\n                      />,\n                    ]}\n                  />\n                </p>\n              </Field>\n            </>\n          )}\n        </section>\n        <section\n          buttonLabel={t('announcements.editContent')}\n          completeLabel={subject.value}\n          label={t('announcements.content')}\n          isComplete={!!subject.value}\n          isSaveDisabled={contentSaveDisabled}\n          onSave={onContentSave}\n        >\n          <Field validationState={subject.error ? 'error' : null}>\n            <FieldLabel htmlFor=\"subject\">\n              {t('announcements.subject')}\n            </FieldLabel>\n            <Text\n              disabled={!canEdit}\n              id=\"subject\"\n              name=\"subject\"\n              onChange={e =>\n                setSubject({\n                  value: e.target.value,\n                  error: !e.target.value.length,\n                })\n              }\n              validationState={subject.error ? 'error' : null}\n              value={subject.value}\n            />\n            <FieldErrorMap code=\"error\">\n              {t('error.requiredField')}\n            </FieldErrorMap>\n          </Field>\n          {canEdit ? (\n            <>\n              <CKEditor\n                data={message}\n                onChange={e => setMessage(e.editor.getData())}\n              />\n              <MultiFileUpload\n                buttonText={t('announcements.selectFile')}\n                files={files}\n                onAdd={uploadAttachments}\n                onClick={downloadAttachment}\n                onDelete={deleteAttachment}\n                pText={t('announcements.dragDrop')}\n              />\n            </>\n          ) : (\n            <div\n              // eslint-disable-next-line react/no-danger\n              dangerouslySetInnerHTML={{\n                __html: dompurify.sanitize(message),\n              }}\n              style={{ marginBottom: '10px' }}\n            />\n          )}\n          <Checkbox\n            checked={requiresAck}\n            disabled={!canEdit}\n            data-testid=\"requires-ack-checkbox\"\n            onChange={onRequiresAckChange}\n          >\n            {t('announcements.requiresAck')}\n          </Checkbox>\n          <Checkbox\n            disabled={!requiresAck || !canEdit}\n            checked={forceAccept}\n            onChange={() => setForceAccept(!forceAccept)}\n          >\n            {t('announcements.forceAccept')}\n          </Checkbox>\n          <Checkbox\n            disabled={!requiresAck || !canEdit}\n            checked={customButtonsEnabled}\n            data-testid=\"customize-button-checkbox\"\n            onChange={() => setCustomButtonsEnabled(!customButtonsEnabled)}\n          >\n            {t('announcements.customButtonText')}\n          </Checkbox>\n          {customButtonsEnabled && (\n            <div className=\"field-container\">\n              <Field validationState={acceptButtonLabel.error ? 'error' : null}>\n                <FieldLabel htmlFor=\"primary-action\">\n                  {t('announcements.acceptButtonLabel')}\n                </FieldLabel>\n                <Text\n                  disabled={!canEdit}\n                  id=\"primary-action\"\n                  name=\"primary-action\"\n                  onChange={e =>\n                    setAcceptButtonLabel({\n                      value: e.target.value,\n                      error: !e.target.value.length,\n                    })\n                  }\n                  placeholder={t('announcements.acceptButtonLabel')}\n                  validationState={acceptButtonLabel.error ? 'error' : null}\n                  value={acceptButtonLabel.value}\n                />\n                <FieldErrorMap code=\"error\">\n                  {t('error.requiredField')}\n                </FieldErrorMap>\n              </Field>\n              <Field\n                validationState={declineButtonLabel.error ? 'error' : null}\n              >\n                <FieldLabel htmlFor=\"secondary-action\">\n                  {t('announcements.declineButtonLabel')}\n                </FieldLabel>\n                <Text\n                  disabled={!canEdit}\n                  id=\"secondary-action\"\n                  name=\"secondary-action\"\n                  onChange={e =>\n                    setDeclineButtonLabel({\n                      value: e.target.value,\n                      error: !e.target.value.length,\n                    })\n                  }\n                  placeholder={t('announcements.declineButtonLabel')}\n                  validationState={declineButtonLabel.error ? 'error' : null}\n                  value={declineButtonLabel.value}\n                />\n                <FieldErrorMap code=\"error\">\n                  {t('error.requiredField')}\n                </FieldErrorMap>\n              </Field>\n            </div>\n          )}\n          <Checkbox\n            checked={alternateRecipientEnabled}\n            disabled={!canEdit}\n            onChange={() =>\n              setAlternateRecipientEnabled(!alternateRecipientEnabled)\n            }\n          >\n            {t('announcements.alternateRecipientEnabled')}\n          </Checkbox>\n        </section>\n        <section\n          buttonLabel={t('announcements.editScheduling')}\n          completeLabel={[\n            <span key=\"scheduling\">\n              <Trans\n                values={{\n                  date1: localizeDate(savedDates[0]),\n                  date2: localizeDate(savedDates[1]),\n                }}\n                i18nKey=\"announcements.displayFromTo\"\n                components={[<strong />]}\n              />\n            </span>,\n          ]}\n          isComplete={!!savedDates.length}\n          isSaveDisabled={!savedDates.length}\n          label={t('announcements.scheduling')}\n          onSave={onSchedulingSave}\n        >\n          <DateRangePicker\n            key={savedDates}\n            disabled={!canEdit}\n            endDate={savedDates[1]}\n            endLabel={t('announcements.displayUntil')}\n            onChangeDate={dates => setSavedDates(dates)}\n            startDate={savedDates[0]}\n            startLabel={t('announcements.displayFrom')}\n          />\n        </section>\n      </Accordion>\n      {audience && subject.value && savedDates.length ? (\n        <Preview\n          announcement={{\n            acceptButtonLabel: acceptButtonLabel.value,\n            alternateRecipientEnabled,\n            declineButtonLabel: declineButtonLabel.value,\n            files,\n            message,\n            requiresAck,\n            subject: subject.value,\n          }}\n          companyName={companyName}\n        />\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nAnnouncementsView.defaultProps = {\n  erpClients: [],\n};\n\nAnnouncementsView.propTypes = {\n  erpClients: PropTypes.arrayOf(PropTypes.shape()),\n};\n\nexport default AnnouncementsView;\n","import React from 'react';\nimport CONSTANTS from '../../globals';\nimport AnnouncementsList from './AnnouncementsList';\nimport FeatureToggledComponent from '../../Utils/FeatureToggledComponent';\nimport { MonolithIFrame } from '../MonolithIFrame';\n\nfunction AnnouncementsContainer(props) {\n  return (\n    <FeatureToggledComponent\n      featureName={CONSTANTS.FEATURES.ANNOUNCEMENTS_NEW_UI}\n      enabledComponent={<AnnouncementsList {...props} />}\n      disabledComponent={<MonolithIFrame {...props} />}\n    />\n  );\n}\n\nexport default AnnouncementsContainer;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ArrowButton, Modal } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { localizeDate } from '../../Utils/localizeUtils';\n\nfunction SupplierView({ data, onRequestClose, open }) {\n  const { t } = useTranslation();\n  const [currPage, setCurrPage] = useState(1);\n  const onLastPage = currPage * 10 >= data.length;\n  return (\n    <Modal\n      width={600}\n      open={open}\n      title=\"Email modal\"\n      onRequestClose={onRequestClose}\n    >\n      <h3 style={{ textAlign: 'center' }}>{t('fields.businessUnits')}</h3>\n      <p>\n        {t('supplierView.showingPaginationWithCount', {\n          first: (currPage - 1) * 10 + 1,\n          last: onLastPage ? data.length : currPage * 10,\n          totalCount: data.length,\n        })}\n      </p>\n      <table>\n        <thead>\n          <tr style={{ fontWeight: 600 }}>\n            <td>{t('fields.number')}</td>\n            <td>{t('fields.name')}</td>\n            <td>{t('supplierView.initialized')}</td>\n          </tr>\n        </thead>\n        <tbody>\n          {data.slice((currPage - 1) * 10, currPage * 10).map(item => {\n            return (\n              <tr key={item.number}>\n                <td style={{ fontWeight: 600 }}>{item.number}</td>\n                <td>{item.name}</td>\n                <td style={{ fontStyle: 'italic' }}>\n                  {localizeDate(item.dateCreated)}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <ArrowButton\n        disabled={currPage === 1}\n        direction=\"left\"\n        onClick={() => setCurrPage(currPage - 1)}\n      />\n      <ArrowButton\n        disabled={onLastPage}\n        direction=\"right\"\n        onClick={() => setCurrPage(currPage + 1)}\n      />\n    </Modal>\n  );\n}\n\nexport default SupplierView;\n\nSupplierView.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal,\n  Field,\n  FieldLabel,\n  FieldErrorMap,\n  Text,\n  Button,\n} from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport validate from 'validate.js';\n\nfunction EditContactModal({\n  open,\n  data,\n  onRequestClose,\n  onSave,\n  onSaveAndInvite,\n}) {\n  const { t } = useTranslation();\n  const [emailAddress, setEmailAddress] = useState();\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [emailError, setEmailError] = useState();\n  const saveEnabled = !emailError && emailAddress;\n\n  useEffect(() => {\n    setEmailAddress(data?.emailAddress ?? '');\n    setFirstName(data?.firstName ?? '');\n    setLastName(data?.lastName ?? '');\n  }, [data]);\n\n  const getContact = () => {\n    return {\n      ...data,\n      emailAddress,\n      firstName,\n      lastName,\n    };\n  };\n\n  const validateEmail = value => {\n    let error = validate({ email: value }, { email: { email: true } })\n      ? 'invalid'\n      : null;\n\n    if (!value.length) {\n      error = 'required';\n    }\n\n    setEmailError(error);\n  };\n\n  return (\n    <Modal width={500} open={open} onRequestClose={onRequestClose}>\n      <div className=\"edit-contact-modal\" data-testid=\"edit-contact-modal\">\n        {data ? (\n          <h3>{t('supplierView.editContact')}</h3>\n        ) : (\n          <h3>{t('supplierView.addContact')}</h3>\n        )}\n\n        <Field\n          validationState={emailError ? 'error' : null}\n          className=\"contact-email-address\"\n        >\n          <FieldLabel htmlFor=\"email\">\n            {t('supplierView.emailAddress')}\n          </FieldLabel>\n          <Text\n            id=\"emailAddress\"\n            name=\"emailAddress\"\n            data-testid=\"contact-edit-email\"\n            value={emailAddress}\n            onChange={evt => {\n              setEmailAddress(evt.target.value);\n              validateEmail(evt.target.value);\n            }}\n          />\n\n          <FieldErrorMap code={emailError}>\n            <span key=\"required\">{t('error.requiredField')}</span>\n            <span key=\"invalid\">{t('profile.errors.email.invalid')}</span>\n          </FieldErrorMap>\n        </Field>\n\n        <Field className=\"contact-first-name\">\n          <FieldLabel htmlFor=\"firstName\">\n            {t('supplierView.firstName')}\n          </FieldLabel>\n          <Text\n            id=\"firstName\"\n            name=\"firstName\"\n            data-testid=\"contact-edit-first-name\"\n            value={firstName}\n            onChange={evt => {\n              setFirstName(evt.target.value);\n            }}\n          />\n        </Field>\n\n        <Field className=\"contact-last-name\">\n          <FieldLabel htmlFor=\"lastName\">\n            {t('supplierView.lastName')}\n          </FieldLabel>\n          <Text\n            id=\"lastName\"\n            name=\"lastName\"\n            data-testid=\"contact-edit-last-name\"\n            value={lastName}\n            onChange={evt => {\n              setLastName(evt.target.value);\n            }}\n          />\n        </Field>\n\n        <div className=\"contact-button-container\">\n          <Button\n            theme=\"text\"\n            data-testid=\"contact-cancel\"\n            onClick={() => {\n              onRequestClose();\n            }}\n          >\n            {t('standard.cancel')}\n          </Button>\n          <Button\n            data-testid=\"contact-save\"\n            disabled={!saveEnabled}\n            onClick={() => {\n              onSave(getContact());\n            }}\n          >\n            {t('standard.save')}\n          </Button>\n          <Button\n            disabled={!saveEnabled}\n            data-testid=\"contact-save-and-invite\"\n            theme=\"primary\"\n            onClick={() => {\n              onSaveAndInvite(getContact());\n            }}\n          >\n            {t('supplierView.saveAndInvite')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default EditContactModal;\n\nEditContactModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  data: PropTypes.shape(),\n  onRequestClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func,\n  onSaveAndInvite: PropTypes.func,\n};\n\nEditContactModal.defaultProps = {\n  data: null,\n  onSave: () => {},\n  onSaveAndInvite: () => {},\n};\n","/* eslint-disable consistent-return */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { FieldList, GaugeIndicator, Modal } from 'taulia-ui';\nimport { Arrow } from '../../icons';\nimport {\n  localizeDate,\n  localizeDateTime,\n  localizeTime,\n} from '../../Utils/localizeUtils';\nimport { riskColorMap } from '../../Utils/SupplierUtils';\n\nconst EventLogModal = ({ data, onRequestClose, open }) => {\n  const { t } = useTranslation();\n  if (data?.id) {\n    const {\n      countryCode,\n      dateCreated,\n      eventType,\n      ipAddress,\n      regionName,\n      riskLevel,\n      riskScoreTotal,\n      simEventLogRiskFactors,\n      security = {},\n      simEventLogUser: {\n        is2FaEnabled,\n        userDateCreated,\n        userEmailAddress,\n        userFirstName,\n        userLastLogin,\n        userLastName,\n        userLastPasswordResetRequest,\n      },\n    } = data;\n\n    const bankChangeTitleDictionary = {\n      BANK_ADD: t('supplierView.BANK_ADD'),\n      BANK_CHANGE: t('supplierView.BANK_CHANGE'),\n      BANK_DELETE: t('supplierView.BANK_DELETE'),\n    };\n    const sortedbyRiskFactorScore = simEventLogRiskFactors.sort(\n      (a, b) => Number(b.riskScore) - Number(a.riskScore)\n    );\n    const createThreatTypesArray = () => {\n      const sortedArr = security.threatTypes?.sort();\n      if (\n        sortedArr.indexOf('attack_source') > -1 &&\n        sortedArr.indexOf('attack_source_http') > -1\n      ) {\n        sortedArr.splice(sortedArr.indexOf('attack_source'), 1);\n      }\n      return sortedArr.map((item, idx) => (\n        <span key={item}>\n          {t(`supplierView.ipThreatTypes.enumValues.${item}`)}\n          {idx < security.threatTypes?.length - 1 && <>,&nbsp;</>}\n        </span>\n      ));\n    };\n\n    const fieldListData = {\n      colOneData: [\n        {\n          dataTestId: 'event-log-modal-name',\n          label: t('fields.name'),\n          value: `${userFirstName} ${userLastName}`,\n        },\n        {\n          dataTestId: 'event-log-modal-email',\n          label: t('fields.email'),\n          value: userEmailAddress,\n        },\n        {\n          dataTestId: 'event-log-modal-user-date-created',\n          label: t('fields.dateCreated'),\n          value: localizeDateTime(userDateCreated),\n        },\n        {\n          dataTestId: 'event-log-modal-lastlogin',\n          label: t('fields.lastLogin'),\n          value: localizeDateTime(userLastLogin),\n        },\n        {\n          dataTestId: 'event-log-modal-lastPasswordReset',\n          label: t('supplierView.lastPasswordReset'),\n          value: localizeDateTime(userLastPasswordResetRequest),\n        },\n        {\n          dataTestId: 'event-log-modal-twoFactorAuthEnabled',\n          label: t('supplierView.twoFactorAuthEnabled'),\n          value: is2FaEnabled\n            ? t('filters.trueLabel')\n            : t('filters.falseLabel'),\n        },\n      ],\n      colTwoData: [\n        {\n          dataTestId: 'event-log-modal-ipAddress',\n          label: t('fields.ipAddress'),\n          value: ipAddress,\n        },\n        {\n          dataTestId: 'event-log-modal-ipCountry',\n          label: t('fields.ipCountry'),\n          value: countryCode,\n        },\n        {\n          dataTestId: 'event-log-modal-ipRegion',\n          label: t('fields.ipRegion'),\n          value: regionName,\n        },\n        {\n          dataTestId: 'event-log-modal-ipThreatLevel',\n          label: t('supplierView.ipThreatLevel'),\n          value: security.threatLevel\n            ? t(`supplierView.${security.threatLevel}`)\n            : '—',\n        },\n        {\n          dataTestId: 'event-log-modal-threatTypes',\n          label: t('supplierView.ipThreatTypes.label'),\n          value:\n            security.threatTypes?.length > 0 ? createThreatTypesArray() : '—',\n        },\n      ],\n      colOneWidth: 180,\n      colTwoWidth: 180,\n      header: t('supplierView.userInformation'),\n    };\n\n    const scoringCriteriaDictionary = {\n      '01': {\n        color: 'green',\n        description: t('supplierView.2faIsEnabled'),\n      },\n      '02': {\n        color: 'red',\n        description: t('supplierView.2faIsNotEnabled'),\n      },\n      '03': {\n        color: 'red',\n        description: t('supplierView.bankChangeReqNearHoliday'),\n      },\n      '04': {\n        color: 'red',\n        description: t('supplierView.ipAddressDifferentCountry'),\n      },\n      '05': {\n        color: 'red',\n        description: t('supplierView.ipAddressSuspiciousLocation'),\n      },\n      '06': {\n        color: 'green',\n        description: t('supplierView.ipAddressUsedPreviously'),\n      },\n      '07': { color: 'red', description: t('supplierView.oneUserOnAccount') },\n      '08': {\n        color: 'red',\n        description: t('supplierView.passwordResetInLastWeek'),\n      },\n      '09': {\n        color: 'red',\n        description: t('supplierView.userNotLoggedInRecently'),\n      },\n      '10': {\n        color: 'red',\n        description: t('supplierView.userCreatedWithinLastWeek'),\n      },\n      '11': {\n        color: 'red',\n        description: t('supplierView.ipAddressHigh'),\n      },\n      '12': {\n        color: 'red',\n        description: t('supplierView.ipAddressMedium'),\n      },\n    };\n\n    return (\n      <Modal\n        data-testid=\"supplier-view-event-log-modal\"\n        onRequestClose={onRequestClose}\n        open={open}\n        padding={0}\n        style={{ minWidth: '455px' }}\n        title=\"Event log modal\"\n        width={1000}\n      >\n        <div className=\"event-log-modal-body\">\n          <div className=\"event-log-modal-header\">\n            <div className=\"event-log-modal-header-icon\">\n              <GaugeIndicator\n                fillColor={riskColorMap[riskLevel] || 'gray'}\n                value={riskScoreTotal || 0}\n                width={120}\n              />\n              <p className=\"event-log-modal-header-icon-label\">\n                {riskLevel\n                  ? t(`fields.riskLevel.enumValues.${[riskLevel]}`)\n                  : ''}\n              </p>\n            </div>\n            <div className=\"event-log-modal-header-text\">\n              <h4 className=\"event-log-modal-header-title\">\n                {bankChangeTitleDictionary[eventType]}\n              </h4>\n              <h4 style={{ fontWeight: '400', fontStyle: 'italic' }}>\n                {t('supplierView.bankChangeHeader', {\n                  date_of_change: localizeDate(dateCreated),\n                  time_of_change: localizeTime(dateCreated),\n                  email_address: userEmailAddress || '—',\n                })}\n              </h4>\n            </div>\n          </div>\n          <div className=\"event-log-modal-scoring\">\n            <h4 className=\"event-log-modal-sub-header\">\n              {t('supplierView.scoringCriteria')}\n            </h4>\n            {sortedbyRiskFactorScore?.map(({ id, riskScore, riskType }) => {\n              if (riskType === '10' && riskScore < 10) {\n                return;\n              }\n              return (\n                <div\n                  className=\"event-log-modal-criteria\"\n                  key={`event-log-${id}-${riskType}`}\n                >\n                  <div>\n                    <Arrow\n                      style={{\n                        height: '25px',\n                        transform:\n                          scoringCriteriaDictionary[riskType].color === 'green'\n                            ? 'none'\n                            : 'rotate(180deg)',\n                      }}\n                      fill={\n                        scoringCriteriaDictionary[riskType].color === 'green'\n                          ? riskColorMap.LOW\n                          : riskColorMap.HIGH\n                      }\n                    />\n                  </div>\n                  <h4 style={{ paddingTop: '5px' }}>\n                    {scoringCriteriaDictionary[riskType].description}\n                  </h4>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"event-log-modal-user-info\">\n            <FieldList {...fieldListData} />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n  return null;\n};\n\nexport default EventLogModal;\n\nEventLogModal.propTypes = {\n  data: PropTypes.shape({\n    countryCode: PropTypes.string,\n    dateCreated: PropTypes.string,\n    eventType: PropTypes.string,\n    id: PropTypes.string,\n    ipAddress: PropTypes.string,\n    regionName: PropTypes.string,\n    riskLevel: PropTypes.string,\n    riskScoreTotal: PropTypes.number,\n    security: PropTypes.shape({\n      threatLevel: PropTypes.string,\n      threatTypes: PropTypes.arrayOf(PropTypes.string),\n    }),\n    simEventLogRiskFactors: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        riskScore: PropTypes.number,\n        riskType: PropTypes.string,\n      })\n    ),\n    simEventLogUser: PropTypes.shape({\n      is2FaEnabled: PropTypes.bool,\n      userDateCreated: PropTypes.string,\n      userEmailAddress: PropTypes.string,\n      userFirstName: PropTypes.string,\n      userId: PropTypes.string,\n      userLastLogin: PropTypes.string,\n      userLastName: PropTypes.string,\n      userLastPasswordResetRequest: PropTypes.string,\n    }),\n  }),\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nEventLogModal.defaultProps = {\n  data: {},\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, DateTimeCell, EnhancedSearch, ProgressBar } from 'taulia-ui';\nimport EventLogModal from './EventLogModal';\nimport { useFetchContext } from '../../hooks';\nimport {\n  progressBarColorMap,\n  progressBarLabelMap,\n} from '../../Utils/SupplierUtils';\nimport { genericErrorToast } from '../../Utils/utils';\n\nconst EventLog = ({ supplierBranchId }) => {\n  const [eventModalData, setEventModalData] = useState({});\n  const [eventModalSelectedId, setEventModalSelectedId] = useState();\n  const [showEventModal, setShowEventModal] = useState(false);\n  const { data: eventLogIdData, error } = useFetchContext(\n    `/api/eventLog/${eventModalSelectedId}`\n  );\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    setEventModalData(eventLogIdData);\n    if (error) {\n      genericErrorToast();\n    }\n  }, [eventLogIdData, error]);\n\n  const handleBankEventClick = props => {\n    const { id } = props;\n    setEventModalSelectedId(id);\n    setShowEventModal(true);\n  };\n\n  const handleModalClose = () => {\n    setEventModalSelectedId();\n    setShowEventModal(false);\n  };\n\n  const enumLinkCell = props => {\n    const { column, value } = props;\n    const { enumOptions } = column;\n    const option = enumOptions.find(it => it.value === value);\n    const enumValue = option?.label || value;\n\n    const onClick = handleBankEventClick\n      ? event => {\n          handleBankEventClick(props);\n          event.preventDefault();\n        }\n      : null;\n    return (\n      <Button theme=\"text\" title={enumValue} onClick={onClick}>\n        {enumValue ?? <span>—</span>}\n      </Button>\n    );\n  };\n\n  const progressBarCell = props => {\n    const { value, object } = props;\n    const roundedRiskScoreTotal = object?.riskScoreTotal\n      ? Math.round(object.riskScoreTotal)\n      : 0;\n\n    return (\n      <span title={value} className=\"event-log-progress-bar\">\n        <ProgressBar\n          color={progressBarColorMap[value] || 'gray'}\n          value={roundedRiskScoreTotal || 0}\n          label={value ? t(`supplierView.${progressBarLabelMap[value]}`) : ''}\n        />\n      </span>\n    );\n  };\n\n  const onQueryChange = query => {\n    query.filters.push({\n      field: 'supplierBranchId',\n      operator: 'EQUAL',\n      values: [supplierBranchId],\n    });\n    return query;\n  };\n\n  const defaultQuery = {\n    select: [\n      'eventType',\n      'riskLevel',\n      'dateCreated',\n      'userEmail',\n      'ipAddress',\n      'countryCode',\n      'regionName',\n      'riskFactors',\n      'riskScoreTotal',\n      'userId',\n      'userFirstName',\n      'userLastName',\n      'userLastLogin',\n      'userLastPasswordResetRequest',\n      'userDateCreated',\n      'is2FaEnabled',\n      'id',\n    ],\n    filters: [\n      { field: 'dateCreated', operator: 'EQUAL', values: [] },\n      { field: 'riskLevel', operator: 'EQUAL', values: [] },\n      { field: 'userEmail', operator: 'CONTAINS', values: [] },\n      {\n        field: 'supplierBranchId',\n        operator: 'EQUAL',\n        values: [supplierBranchId],\n      },\n    ],\n    sorts: [\n      {\n        field: 'dateCreated',\n        type: 'DESC',\n      },\n    ],\n  };\n\n  const props = {\n    csvExportLimit: 100000,\n    defaultQuery,\n    excludedFields: [\n      'is2FaEnabled',\n      'riskScoreTotal',\n      'userDateCreated',\n      'userFirstName',\n      'userId',\n      'userLastLogin',\n      'userLastName',\n      'userLastPasswordResetRequest',\n      'id',\n      'riskFactors',\n      'supplierBranchId',\n    ],\n    fieldOverrides: {\n      eventType: {\n        column: {\n          cell: enumLinkCell,\n          fixedOrder: 1,\n          width: 175,\n          enumOptions: [\n            {\n              value: 'BANK_ADD',\n              label: t('supplierView.BANK_ADD'),\n            },\n            {\n              value: 'BANK_CHANGE',\n              label: t('supplierView.BANK_CHANGE'),\n            },\n            {\n              value: 'BANK_DELETE',\n              label: t('supplierView.BANK_DELETE'),\n            },\n          ],\n        },\n        type: 'TEXT',\n      },\n      riskLevel: {\n        column: {\n          fixedOrder: 2,\n          width: 200,\n          cell: progressBarCell,\n        },\n      },\n      dateCreated: {\n        column: {\n          cell: DateTimeCell,\n          width: 200,\n        },\n      },\n      userEmail: { label: t('fields.email'), column: { width: 250 } },\n    },\n    onQueryChange,\n    showColumnConfig: false,\n    uri: '/eui/simEventLog',\n  };\n\n  return (\n    <div\n      className=\"event-log\"\n      data-testid=\"supplier-view-event-log\"\n      key={supplierBranchId}\n    >\n      <EnhancedSearch {...props} />\n      <EventLogModal\n        key=\"event-log\"\n        data={eventModalData}\n        onRequestClose={handleModalClose}\n        open={showEventModal}\n      />\n    </div>\n  );\n};\n\nexport default EventLog;\n\nEventLog.propTypes = {\n  column: PropTypes.shape({\n    enumOptions: PropTypes.arrayOf(\n      PropTypes.shape({ value: PropTypes.string })\n    ),\n  }),\n  data: PropTypes.shape(),\n  id: PropTypes.string,\n  object: PropTypes.shape(),\n  supplierBranchId: PropTypes.string.isRequired,\n  value: PropTypes.string,\n};\n\nEventLog.defaultProps = {\n  column: { enumOptions: [] },\n  data: {},\n  id: '',\n  object: {},\n  value: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BooleanCell,\n  DateCell,\n  FieldList,\n  Modal,\n  StatusIndicator,\n  TextCell,\n} from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { statusColorMap } from '../../Utils/SupplierUtils';\n\nfunction ViewUserModal({ open, data, onRequestClose }) {\n  const { t } = useTranslation();\n\n  const statusIndicatorComponent = (\n    <StatusIndicator color={statusColorMap[data.enrollmentStatus]}>\n      {t(`fields.combinedEnrollmentStatus.enumValues.${data.enrollmentStatus}`)}\n    </StatusIndicator>\n  );\n\n  const fieldListData = {\n    colOneData: [\n      {\n        dataTestId: 'user-status',\n        label: t('fields.status'),\n        value: statusIndicatorComponent,\n      },\n      {\n        dataTestId: 'user-title',\n        label: t('profile.title'),\n        value: <TextCell value={data.title} />,\n      },\n      {\n        dataTestId: 'user-phone-number',\n        label: t('profile.phoneNumber'),\n        value: <TextCell value={data.phoneNumber} />,\n      },\n      {\n        dataTestId: 'user-locale',\n        label: t('supplierView.locale'),\n        value: data.locale,\n      },\n    ],\n    colTwoData: [\n      {\n        dataTestId: 'user-dateInvited',\n        label: t('fields.dateInvited'),\n        value: <DateCell value={data.dateInvited} />,\n      },\n      {\n        dataTestId: 'user-lastLogin',\n        label: t('fields.lastLogin'),\n        value: <DateCell value={data.lastLogin} />,\n      },\n      {\n        dataTestId: 'user-lastPasswordResetRequest',\n        label: t('supplierView.lastPasswordReset'),\n        value: <DateCell value={data.lastPasswordResetRequest} />,\n      },\n      {\n        dataTestId: 'user-twoFactorAuthEnabled',\n        label: t('supplierView.twoFactorAuthEnabled'),\n        value: (\n          <BooleanCell\n            value={data.twoFactorAuthEnabled}\n            column={{\n              falseLabel: t('filters.falseLabel'),\n              trueLabel: t('filters.trueLabel'),\n            }}\n          />\n        ),\n      },\n    ],\n    colOneWidth: 180,\n    colTwoWidth: 180,\n  };\n\n  return (\n    <Modal width={800} open={open} onRequestClose={onRequestClose}>\n      <div className=\"supplier-view\" data-testid=\"view-user-modal\">\n        <h3>{`${data.firstName} ${data.lastName}`}</h3>\n        <p className=\"subtext\">{data.emailAddress}</p>\n        <hr style={{ margin: '20px -20px' }} />\n        <FieldList {...fieldListData} />\n      </div>\n    </Modal>\n  );\n}\n\nexport default ViewUserModal;\n\nViewUserModal.propTypes = {\n  data: PropTypes.shape({\n    dateInvited: PropTypes.string,\n    emailAddress: PropTypes.string,\n    enrollmentStatus: PropTypes.string,\n    firstName: PropTypes.string,\n    lastLogin: PropTypes.string,\n    lastName: PropTypes.string,\n    lastPasswordResetRequest: PropTypes.string,\n    locale: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    title: PropTypes.string,\n    twoFactorAuthEnabled: PropTypes.bool,\n  }),\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nViewUserModal.defaultProps = {\n  data: {\n    dateInvited: '',\n    emailAddress: '',\n    enrollmentStatus: '',\n    firstName: '',\n    lastLogin: '',\n    lastName: '',\n    lastPasswordResetRequest: '',\n    locale: '',\n    phoneNumber: '',\n    title: '',\n    twoFactorAuthEnabled: false,\n  },\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  ActionsCell,\n  Button,\n  FieldList,\n  Link,\n  ListView,\n  MiniPager,\n  Progress,\n  StatusIndicator,\n  Tabs,\n  toast,\n} from 'taulia-ui';\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport BusinessUnitModal from './BusinessUnitModal';\nimport EditContactModal from './EditContactModal';\nimport EventLog from './EventLog';\nimport ViewUserModal from './ViewUserModal';\nimport {\n  localizeCurrency,\n  localizeDate,\n  localizeNumber,\n} from '../../Utils/localizeUtils';\nimport {\n  statusColorMap,\n  userCanEditSuppliers,\n} from '../../Utils/SupplierUtils';\nimport {\n  constructSearchQueryUrl,\n  genericErrorToast,\n  redirectTo404,\n} from '../../Utils/utils';\nimport CONSTANTS from '../../globals';\nimport { useEnabledSettingsFetch } from '../../hooks';\nimport { UserSettingsContext, RequestContext } from '../../contexts';\n\nfunction SupplierView() {\n  const location = useLocation();\n  const history = useHistory();\n  const params = useParams();\n  const { id } = params;\n  const { userRoles } = useContext(UserSettingsContext);\n  const [paginationData, setPaginationData] = useState({\n    prev: '',\n    next: '',\n    total: 1,\n    currIdx: 1,\n  });\n  const [option, setOption] = useState(\n    location.search === '?events' ? 'eventLog' : 'contacts'\n  );\n  const [sendingCompanyInvite, setSendingCompanyInvite] = useState(false);\n  const [showBusinessUnitModal, setShowBusinessUnitModal] = useState(false);\n  const [showEditContactModal, setShowEditContactModal] = useState(false);\n  const [showViewUserModal, setShowViewUserModal] = useState(false);\n  const [selectedContact, setSelectedContact] = useState();\n  const [supplierData, setSupplierData] = useState();\n\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n\n  const retrieveStoredSupplierData = () => {\n    /* Retrieve stored supplier order from local storage.\n    Set as \"1 of 1\" if supplier is not found in data */\n    const storedSupplierData = localStorage.getItem('supplierData')?.split(',');\n    if (storedSupplierData) {\n      const currIdx = storedSupplierData.indexOf(id);\n      setPaginationData({\n        prev: storedSupplierData[currIdx - 1],\n        next: storedSupplierData[currIdx + 1],\n        total: currIdx > -1 ? storedSupplierData.length : 1,\n        currIdx: currIdx > -1 ? currIdx + 1 : 1,\n      });\n    }\n  };\n\n  const enabledSettings = useEnabledSettingsFetch(\n    ['SUPPLIER_CENTER_EVENT_LOG_UI'],\n    null\n  );\n\n  const eventLogSettingEnabled = enabledSettings.isEnabled;\n\n  const getSupplierData = () => {\n    request('GET', `/api/supplierBranchView/${id}`)\n      .then(res => {\n        setSupplierData(res.body);\n      })\n      .catch(() => redirectTo404(history));\n  };\n\n  useEffect(() => {\n    getSupplierData();\n    retrieveStoredSupplierData();\n  }, [id]);\n\n  const statusIndicator = status => {\n    return (\n      <StatusIndicator color={statusColorMap[status]}>\n        {t(`fields.combinedEnrollmentStatus.enumValues.${status}`)}\n      </StatusIndicator>\n    );\n  };\n\n  const returnSegmentLinks = () => {\n    if (!supplierData?.segments.length) {\n      return '—';\n    }\n    return supplierData?.segments.map((segment, idx) => (\n      <span key={segment.name}>\n        <Link to={constructSearchQueryUrl('segments', [segment.id])}>\n          {segment.name}\n        </Link>\n        {idx < supplierData?.segments.length - 1 && <>,&nbsp;</>}\n      </span>\n    ));\n  };\n\n  const returnBusinessUnits = () => {\n    const maxUnits = 9;\n    if (!supplierData?.businessUnits.length) {\n      return '—';\n    }\n    const supplierDataNumbers = supplierData?.businessUnits.map(\n      unit => unit.number\n    );\n    let businessUnitData = supplierDataNumbers\n      .slice(0, maxUnits)\n      .reduce((prev, curr) => [prev, ', ', curr]);\n    if (supplierData?.businessUnits.length > maxUnits) {\n      businessUnitData = businessUnitData.concat(\n        <span key=\"and-more\">\n          &nbsp;\n          {t('supplierView.andMore', {\n            count: supplierData?.businessUnits.length - maxUnits,\n          })}\n          &nbsp;\n        </span>\n      );\n    }\n    return (\n      <>\n        {businessUnitData}\n        &nbsp;\n        <Button\n          onClick={() => setShowBusinessUnitModal(true)}\n          style={{ display: 'inline' }}\n          theme=\"text\"\n        >\n          &#40;\n          {t('supplierView.viewAll')}\n          &#41;\n        </Button>\n      </>\n    );\n  };\n\n  const returnMergedBranches = () => {\n    if (!supplierData?.mergedBranches.length) {\n      return '—';\n    }\n    let mergedBranches = supplierData?.mergedBranches\n      .slice(0, 5)\n      .map((supplier, idx) => {\n        return (\n          <span key={supplier.number}>\n            <Link to={`/suppliers/search/${supplier.id}`}>\n              {supplier.number}\n            </Link>\n            {idx < supplierData?.mergedBranches.length - 1 && <>,&nbsp;</>}\n          </span>\n        );\n      });\n\n    if (supplierData?.mergedBranches.length > 5) {\n      mergedBranches = mergedBranches.concat(\n        <span key=\"and-more\">\n          &nbsp;\n          {t('supplierView.andMore', {\n            count: supplierData?.mergedBranches.length - 5,\n          })}\n          &nbsp;&#40;\n          <Link\n            data-testid=\"merged-branches-view-more\"\n            to={constructSearchQueryUrl(\n              'number',\n              supplierData?.mergedBranches.map(branch => branch.number)\n            )}\n          >\n            {t('supplierView.viewAll')}\n          </Link>\n          &#41;\n        </span>\n      );\n    }\n    return mergedBranches;\n  };\n\n  const inviteCompany = () => {\n    setSendingCompanyInvite(true);\n    request(\n      'POST',\n      `/api/supplierCompany/${supplierData.supplierCompanyId}/inviteCompany`\n    )\n      .then(() => {\n        toast.success(\n          t('supplierView.sendCompanyInviteSuccess', {\n            name: supplierData.name,\n          })\n        );\n        setSendingCompanyInvite(false);\n        getSupplierData();\n      })\n      .catch(() => {\n        genericErrorToast();\n        setSendingCompanyInvite(false);\n      });\n  };\n\n  const inviteUser = user => {\n    request(\n      'POST',\n      `/api/supplierCompany/${supplierData.supplierCompanyId}/sendIndividualInvitation`\n    )\n      .send({ email: user.emailAddress, invitationType: user.originalType })\n      .then(() => {\n        toast.success(\n          t('supplierView.sendUserInviteSuccess', {\n            emailAddress: user.emailAddress,\n          })\n        );\n        setShowEditContactModal(false);\n        getSupplierData();\n      })\n      .catch(() => genericErrorToast());\n  };\n\n  const saveContact = (contact, invite = false) => {\n    const method = contact?.id ? 'PUT' : 'POST';\n\n    let endpoint = `/api/supplierBranch/${id}/contacts`;\n    let payload = contact;\n\n    if (contact?.id && contact?.originalType === 'user') {\n      endpoint = `/api/supplier/users/${contact?.id}/profile`;\n      payload = {\n        supplierBranchId: id,\n        supplierCompanyId: supplierData?.supplierCompanyId,\n        userId: contact?.id,\n        contactId: contact?.matchingContactId,\n        firstName: contact?.firstName,\n        lastName: contact?.lastName,\n        email: contact?.emailAddress,\n      };\n    }\n\n    request(method, endpoint)\n      .send(payload)\n      .then(res => {\n        toast.success(\n          t(\n            contact?.id\n              ? 'supplierView.saveContactSuccess'\n              : 'supplierView.addContactSuccess',\n            { name: supplierData.name }\n          )\n        );\n        if (invite) {\n          if (res.body?.contact) {\n            inviteUser({\n              ...res.body.contact,\n              originalType: contact?.originalType ?? 'contact',\n            });\n          }\n          if (res.body?.updatedContact) {\n            inviteUser({\n              ...res.body.updatedContact[0],\n              originalType: contact?.originalType ?? 'contact',\n            });\n          }\n        } else {\n          setShowEditContactModal(false);\n        }\n        getSupplierData();\n      })\n      .catch(() => genericErrorToast());\n  };\n\n  const showUserOrContactModal = userOrContact => {\n    setSelectedContact(userOrContact);\n    if (userOrContact.enrollmentStatus === 'active') {\n      setShowViewUserModal(true);\n    } else {\n      setShowEditContactModal(true);\n    }\n  };\n\n  const deleteContact = contact => {\n    request('DELETE', `/api/supplierBranch/${id}/contacts/${contact.id}`)\n      .then(() => {\n        toast.success(t('supplierView.deleteContactSuccess'));\n        getSupplierData();\n      })\n      .catch(() => genericErrorToast());\n  };\n\n  const tabData = ['contacts', 'eventLog'].map(tab => ({\n    active: tab === option,\n    callback: () => setOption(tab),\n    label: t(`supplierView.options.${tab}.link`),\n  }));\n\n  // Listview stuff\n\n  const actions = userCanEditSuppliers(userRoles)\n    ? [\n        {\n          label: t('supplierView.addContact'),\n          allowEmptySelection: true,\n          onClick: () => {\n            setSelectedContact();\n            setShowEditContactModal(true);\n          },\n        },\n      ]\n    : [];\n\n  const getActionsForCell = data => {\n    if (!userCanEditSuppliers(userRoles)) {\n      return [];\n    }\n    const { enrollmentStatus, originalType } = data;\n    if (enrollmentStatus === 'active') return [];\n    const cellActions = [\n      {\n        label: t(\n          enrollmentStatus === 'invited'\n            ? 'supplierView.resendInvitation'\n            : 'supplierView.sendInvitation'\n        ),\n        action: () => inviteUser(data),\n        disabled: enrollmentStatus === 'needs_attention',\n      },\n      {\n        label: t('standard.edit'),\n        action: () => {\n          setSelectedContact(data);\n          setShowEditContactModal(true);\n        },\n      },\n    ];\n    if (originalType === 'contact') {\n      cellActions.push({\n        label: t('standard.delete'),\n        action: () => deleteContact(data),\n      });\n    }\n    return cellActions;\n  };\n\n  const columns = [\n    {\n      key: 'name',\n      label: t('fields.name'),\n      type: 'TEXT',\n      fixedOrder: 1,\n      width: 250,\n      cell: data => (\n        <span>\n          {userCanEditSuppliers(userRoles) ? (\n            <Button\n              theme=\"text\"\n              onClick={() => showUserOrContactModal(data.object)}\n            >\n              {`${data.object.firstName} ${data.object.lastName}`}\n            </Button>\n          ) : (\n            `${data.object.firstName} ${data.object.lastName}`\n          )}\n        </span>\n      ),\n    },\n    {\n      key: 'emailAddress',\n      label: t('profile.email'),\n      type: 'TEXT',\n      width: 250,\n      fixedOrder: 2,\n      cell: data => (\n        <span>\n          {userCanEditSuppliers(userRoles) ? (\n            <Button\n              theme=\"text\"\n              onClick={() => showUserOrContactModal(data.object)}\n            >\n              {data.object.emailAddress}\n            </Button>\n          ) : (\n            data.object.emailAddress\n          )}\n        </span>\n      ),\n    },\n    {\n      key: 'enrollmentStatus',\n      label: t('fields.status'),\n      type: 'TEXT',\n      width: 300,\n      cell: data => (\n        <>\n          {statusIndicator(data.object.enrollmentStatus)}\n          {data.object.enrollmentSubstatus && (\n            <span className=\"subtext\">\n              {t(`supplierView.${data.object.enrollmentSubstatus}`)}\n            </span>\n          )}\n        </>\n      ),\n    },\n    {\n      key: 'roles',\n      label: t('supplierView.role'),\n      cell: data => {\n        const supplierRole = data.object.roles?.length\n          ? t(`supplierView.${data.object.roles.find(role => role !== 'USER')}`)\n          : '—';\n        return <span>{supplierRole}</span>;\n      },\n      width: 175,\n    },\n    { key: 'dateInvited', label: t('fields.dateInvited'), type: 'DATE_TIME' },\n    { key: 'lastLogin', label: t('fields.lastLogin'), type: 'DATE_TIME' },\n    {\n      key: 'actions',\n      label: '',\n      width: 25,\n      cell: data => <ActionsCell items={getActionsForCell(data.object)} />,\n    },\n  ];\n\n  const noResultsText = (\n    <>\n      <h2>{t('supplierView.noContacts')}</h2>\n      <p>{t('supplierView.getStarted')}</p>\n    </>\n  );\n\n  const returnSortedUsers = () => {\n    const contacts = [...supplierData.contacts];\n    const ordering = {\n      needs_attention: 0,\n      ready_to_invite: 1,\n      invited: 2,\n      active: 3,\n      disabled: 4,\n    };\n    return contacts.sort(\n      (a, b) => ordering[a.enrollmentStatus] - ordering[b.enrollmentStatus]\n    );\n  };\n\n  const addressLink = supplierData?.address ? (\n    <Link\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      to={`https://www.google.com/maps/search/?api=1&query=${encodeURI(\n        supplierData?.address\n      )}`}\n    >\n      {supplierData?.address}\n    </Link>\n  ) : (\n    '—'\n  );\n\n  const fieldListData = {\n    colOneData: [\n      {\n        dataTestId: 'supplier-number',\n        label: t('fields.supplier.number'),\n        value: supplierData?.supplierNumber,\n      },\n      {\n        dataTestId: 'supplier-status',\n        label: t('fields.status'),\n        value: statusIndicator(supplierData?.status),\n      },\n      {\n        dataTestId: 'supplier-activated',\n        label: t('fields.combinedEnrollmentStatus.enumValues.invited'),\n        value: localizeDate(supplierData?.invited),\n      },\n      {\n        dataTestId: 'supplier-enrolled',\n        label: t('fields.combinedEnrollmentStatus.enumValues.enrolled'),\n        value: localizeDate(supplierData?.activated),\n      },\n      {\n        dataTestId: 'business-units',\n        label: t('fields.businessUnits'),\n        value: returnBusinessUnits(),\n      },\n    ],\n    colTwoData: [\n      {\n        dataTestId: 'address',\n        label: t('supplierView.address'),\n        value: addressLink,\n      },\n      {\n        dataTestId: 'phone',\n        label: t('supplierView.phone'),\n        value: supplierData?.phone,\n      },\n      {\n        dataTestId: 'segments',\n        label: t('fields.segments'),\n        value: returnSegmentLinks(),\n      },\n      {\n        dataTestId: 'merged-branches',\n        label: t('supplierView.mergedBranches'),\n        value: returnMergedBranches(),\n      },\n      {\n        dataTestId: 'is2faRequired',\n        label: t('fields.is2faRequired'),\n        value: supplierData?.is2faRequired\n          ? t('filters.trueLabel')\n          : t('filters.falseLabel'),\n      },\n    ],\n    colOneWidth: 180,\n    colTwoWidth: 180,\n  };\n\n  if (!supplierData) {\n    return <Progress />;\n  }\n\n  const backLink =\n    localStorage.getItem('supplier-search-location') ||\n    CONSTANTS.SUPPLIERS.SEARCH_BETA;\n\n  return (\n    <div className=\"supplier-view\">\n      <div className=\"flex-spread-row\">\n        <Link to={backLink}>\n          &lt;&nbsp;\n          {t('supplierView.returnToSuppliers')}\n        </Link>\n        <MiniPager\n          current={paginationData.currIdx}\n          nextAction={() => {\n            history.push(`/suppliers/search/${paginationData.next}`);\n          }}\n          prevAction={() =>\n            history.push(`/suppliers/search/${paginationData.prev}`)\n          }\n          total={paginationData.total}\n        />\n      </div>\n      <div className=\"flex-spread-row\">\n        <h2>{supplierData.name}</h2>\n        {userCanEditSuppliers(userRoles) && supplierData.status !== 'enrolled' && (\n          <Button\n            data-testid=\"supplier-view-invite-company\"\n            disabled={supplierData.status === 'needs_attention'}\n            spinning={sendingCompanyInvite}\n            theme=\"primary\"\n            onClick={inviteCompany}\n          >\n            {t(\n              supplierData.status === 'invited'\n                ? 'supplierView.resendInvitation'\n                : 'supplierView.sendInvitation'\n            )}\n          </Button>\n        )}\n      </div>\n      <FieldList {...fieldListData} />\n      <dl className=\"money-grouping-container\">\n        <p>\n          <dt>{t('supplierView.invoiceSpend')}</dt>\n          <dd data-testid=\"invoice-spend\">\n            {localizeCurrency(\n              supplierData.invSpendOneYear,\n              supplierData.currency\n            )}\n          </dd>\n        </p>\n        {!supplierData.isSCFBuyer && (\n          <>\n            <p>\n              <dt>{t('fields.epOfferedEnhSpendOneYear')}</dt>\n              <dd data-testid=\"ep-offered-spendOneYear\">\n                {localizeCurrency(\n                  supplierData.epOfferedEnhSpendOneYear,\n                  supplierData.currency\n                )}\n              </dd>\n            </p>\n            <p>\n              <dt>{t('fields.epTakenEnhSpendOneYear')}</dt>\n              <dd data-testid=\"ep-taken-spendOneYear\">\n                {localizeCurrency(\n                  supplierData.epTakenEnhSpendOneYear,\n                  supplierData.currency\n                )}\n              </dd>\n            </p>\n          </>\n        )}\n        <p>\n          <dt>{t('supplierView.tauliaInvoices')}</dt>\n          <dd data-testid=\"taulia-invoices\">\n            {localizeNumber(supplierData.tauliaInvoices)}\n          </dd>\n        </p>\n        <p>\n          <dt>{t('supplierView.invoiceCount')}</dt>\n          <dd>{localizeNumber(supplierData.invCountOneYear)}</dd>\n        </p>\n      </dl>\n      {eventLogSettingEnabled && <Tabs data={tabData} />}\n      {((eventLogSettingEnabled && option === 'contacts') ||\n        !eventLogSettingEnabled) && (\n        <ListView\n          actions={actions}\n          actionsEnabled\n          columns={columns}\n          data={returnSortedUsers()}\n          isResizable\n          noResultsText={noResultsText}\n          showColumnConfig={false}\n        />\n      )}\n      {eventLogSettingEnabled && option === 'eventLog' && (\n        <EventLog supplierBranchId={id} />\n      )}\n      <BusinessUnitModal\n        data={supplierData.businessUnits}\n        open={showBusinessUnitModal}\n        onRequestClose={() => setShowBusinessUnitModal(false)}\n      />\n      <EditContactModal\n        open={showEditContactModal}\n        data={selectedContact}\n        onRequestClose={() => {\n          setShowEditContactModal(false);\n        }}\n        onSave={contact => {\n          saveContact(contact);\n        }}\n        onSaveAndInvite={contact => {\n          saveContact(contact, true);\n        }}\n      />\n      <ViewUserModal\n        open={showViewUserModal}\n        data={selectedContact}\n        onRequestClose={() => {\n          setShowViewUserModal(false);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default SupplierView;\n\nSupplierView.defaultProps = {};\n\nSupplierView.propTypes = {};\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { Progress } from 'taulia-ui';\nimport CONSTANTS from '../../globals';\nimport { GenericErrorMessage } from '../../Utils/GenericErrorMessage';\n\nexport default class TermsAndConditions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { termsAndConditions: null };\n  }\n\n  componentDidMount() {\n    this.props\n      .request('GET', '/api/terms-and-conditions')\n      .send()\n      .then(response => {\n        this.setState({ showError: false, termsAndConditions: response.body });\n      })\n      .catch(error => {\n        this.setState({ showError: true });\n        if (CONSTANTS.DEBUG) {\n          console.log(error); // eslint-disable-line no-console\n        }\n      });\n  }\n\n  render() {\n    if (this.state.showError) {\n      return (\n        <div className=\"app-error\">\n          <GenericErrorMessage />\n        </div>\n      );\n    }\n    const { termsAndConditions } = this.state;\n    return (\n      <div className=\"terms-and-conditions\">\n        {termsAndConditions ? (\n          <div\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: termsAndConditions.content }}\n          />\n        ) : (\n          <Progress />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { EnhancedSearch, DateTimeCell, StatusIndicator } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\n\nconst ConnectionDetails = () => {\n  const { t } = useTranslation();\n\n  const StatusColorCell = cell => {\n    const { value } = cell;\n    const statusColorMap = {\n      New: 'yellow',\n      Rejected: 'red',\n      Submitted: 'green',\n    };\n    return (\n      <span title={value}>\n        <StatusIndicator color={statusColorMap[value]}>{value}</StatusIndicator>\n      </span>\n    );\n  };\n\n  const enhancedSearchProps = {\n    uri: '/eui/ticket',\n    defaultQuery: {\n      select: ['document', 'documentType', 'dateCreated', 'status', 'message'],\n      filters: [\n        { field: 'document', values: [] },\n        { field: 'documentType', operator: 'EQUAL', values: [] },\n        { field: 'status', operator: 'EQUAL', values: [] },\n        { field: 'dateCreated', values: [] },\n      ],\n    },\n    fieldOverrides: {\n      status: { column: { cell: StatusColorCell } },\n      lastUpdated: { column: { cell: DateTimeCell, width: 180 } },\n      dateCreated: { column: { cell: DateTimeCell, width: 180 } },\n      id: { column: { width: 280 } },\n      message: { column: { width: 300 } },\n      document: { column: { fixedOrder: 1, width: 150 } },\n    },\n    excludedFields: ['buyerId'],\n    tooltips: [\n      'batchId',\n      'clientId',\n      'document',\n      'id',\n      'message',\n      'object',\n      'referenceId',\n      'status',\n    ],\n  };\n\n  return (\n    <>\n      <h3>{t('nav.buyer_area.settings.connection_details')}</h3>\n      <EnhancedSearch {...enhancedSearchProps} />\n    </>\n  );\n};\n\nexport default ConnectionDetails;\n","import React, { useContext, useEffect, useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Col,\n  Field,\n  FieldErrorMap,\n  FieldLabel,\n  Grid,\n  InfoTooltip,\n  LocaleSelect,\n  Localization,\n  Modal,\n  PasswordValidator,\n  PhoneNumber,\n  Select,\n  setProfileCookie,\n  Text,\n  toast,\n} from 'taulia-ui';\nimport { every } from 'lodash';\nimport validate from 'validate.js';\nimport { useTranslation } from 'react-i18next';\nimport { RequestContext, UserSettingsContext } from '../../contexts';\n\nconst Profile = () => {\n  const { i18n, t } = useTranslation();\n  const { email } = useContext(UserSettingsContext);\n  const request = useContext(RequestContext);\n\n  const INITIAL_STATE = {\n    currencyCode: '',\n    defaultCurrency: '',\n    firstName: '',\n    lastName: '',\n    locale: i18n.language,\n    newEmail: '',\n    newPassword: '',\n    oldEmail: '',\n    oldPassword: '',\n    workPhone: '',\n    workTitle: '',\n    errors: {},\n    validations: {\n      length: false,\n      upper: false,\n      lower: false,\n      number: false,\n      match: false,\n    },\n  };\n\n  const reducer = (prevState, updatedProperty) => ({\n    ...prevState,\n    ...updatedProperty,\n  });\n\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const [state, setState] = useReducer(reducer, INITIAL_STATE);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setState({\n      [name]: value,\n      errors: { ...state.errors, [name]: '' },\n    });\n  };\n\n  const getUserProfile = () => {\n    request('GET', '/api/user-profile')\n      .then(response => {\n        const {\n          defaultCurrency,\n          firstName,\n          lastName,\n          locale,\n          useCurrencyCode,\n          workPhone,\n          workTitle,\n        } = response.body;\n        setState({\n          currencyCode: useCurrencyCode ? 'code' : 'symbol',\n          defaultCurrency,\n          firstName,\n          lastName,\n          locale,\n          oldEmail: email,\n          workPhone,\n          workTitle,\n        });\n      })\n      .catch(err => console.error(err)); // eslint-disable-line no-console\n  };\n\n  useEffect(() => {\n    setProfileCookie(i18n.language);\n    getUserProfile();\n  }, []);\n\n  useEffect(() => {\n    // Clear modals on exit\n    setState({\n      oldPassword: '',\n      newPassword: '',\n      newEmail: '',\n    });\n  }, [showEmailModal, showPasswordModal]);\n\n  const translateError = errorCode => {\n    const errorMap = {\n      POST_PROCESSING_FAILED: 'profile.errors.toast.generic',\n      USER_ALREADY_EXISTS: 'profile.errors.toast.userExists',\n      USER_ALREADY_EXISTS_FOR_DIFFERENT_COMPANY:\n        'profile.errors.toast.userExists',\n      USER_WITH_SAME_EMAIL: 'profile.errors.toast.userExists',\n      EMAIL_INVALID_FORMAT: 'profile.errors.email.invalid',\n      COMPANY_NOT_FOUND: 'profile.errors.toast.generic',\n      INCORRECT_PASSWORD: 'profile.errors.toast.incorrectPassword',\n      OLD_PASSWORD_MISMATCH: 'profile.errors.toast.passwordMismatch',\n      PASSWORD_VALIDATION_FAILS: 'profile.errors.toast.invalidPassword',\n    };\n    const error = errorMap[errorCode] || 'profile.errors.toast.generic';\n    return t(error);\n  };\n\n  const updateUserProfile = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    const {\n      currencyCode,\n      defaultCurrency,\n      firstName,\n      lastName,\n      locale,\n      workPhone,\n      workTitle,\n    } = state;\n\n    request('PUT', '/api/user-profile')\n      .send({\n        defaultCurrency,\n        firstName,\n        lastName,\n        locale,\n        workPhone,\n        workTitle,\n        useCurrencyCode: currencyCode === 'code',\n      })\n      .then(() => {\n        i18n.changeLanguage(locale);\n        Localization.setLocale(locale);\n        toast.success(t('profile.successToast'));\n      })\n      .catch(err =>\n        toast.error(translateError(err?.response?.body?.failureReason))\n      )\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const changePassword = e => {\n    setLoading(true);\n    e.preventDefault();\n    const { oldPassword, newPassword } = state;\n    request('PUT', '/api/password')\n      .send({ oldPassword, newPassword })\n      .then(() => {\n        setShowPasswordModal(false);\n        toast.success(t('profile.successToast'));\n      })\n      .catch(err =>\n        toast.error(translateError(err?.response?.body?.failureReason))\n      )\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const changeEmail = e => {\n    const { newEmail, oldPassword } = state;\n    setLoading(true);\n    e.preventDefault();\n    request('PUT', '/api/email')\n      .send({\n        newEmail,\n        password: oldPassword,\n      })\n      .then(() => {\n        setShowEmailModal(false);\n        setState({ oldEmail: newEmail });\n        toast.success(t('profile.successToast'));\n      })\n      .catch(err =>\n        toast.error(translateError(err?.response?.body?.failureReason))\n      )\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const validateOnBlur = event => {\n    const { value, name } = event.target;\n    const { newEmail } = state;\n    let error;\n    if (name === 'newEmail') {\n      error = validate({ email: newEmail }, { email: { email: true } })\n        ? 'invalid'\n        : null;\n      if (!error) {\n        request('GET', `/api/email/${newEmail}`).then(response => {\n          if (response.body.exists) {\n            setState({ errors: { ...state.errors, [name]: 'inUse' } });\n          }\n        });\n      }\n    }\n    if (!value.length) {\n      error = 'required';\n    }\n    setState({ errors: { ...state.errors, [name]: error } });\n  };\n\n  const currencyCodeOptions = [\n    {\n      value: 'code',\n      label: t('profile.currencyCode.options.code'),\n    },\n    {\n      value: 'symbol',\n      label: t('profile.currencyCode.options.symbol'),\n    },\n  ];\n\n  const currencyDisplayOptions = [\n    'AUD',\n    'CAD',\n    'EUR',\n    'GBP',\n    'local',\n    'USD',\n  ].map(value => ({\n    value,\n    label: t(`profile.currencyDisplay.options.${value}`),\n  }));\n\n  const validatePhone = () => {\n    const { workPhone } = state;\n    const valid = PhoneNumber.isValid(workPhone);\n    setState({\n      value: workPhone,\n      errors: { ...state.errors, workPhone: valid ? null : 'invalid' },\n    });\n  };\n\n  const renderEmailModal = () => {\n    const { newEmail, oldEmail, oldPassword } = state;\n    return (\n      <Modal\n        width={600}\n        open={showEmailModal}\n        title=\"Email modal\"\n        onRequestClose={() => setShowEmailModal(false)}\n      >\n        <h3>{t('profile.changeEmail')}</h3>\n        <p style={{ paddingBottom: '10px' }}>\n          {t('profile.emailSubtext')}\n          <strong>\n            &nbsp;\n            {oldEmail}\n          </strong>\n          .\n        </p>\n        <form onSubmit={changeEmail}>\n          <Field validationState={state.errors.oldPassword ? 'error' : null}>\n            <FieldLabel htmlFor=\"current-password\">\n              {t('profile.oldPassword')}\n            </FieldLabel>\n            <Text\n              id=\"current-password\"\n              validationState={state.errors.oldPassword ? 'error' : null}\n              value={oldPassword}\n              name=\"oldPassword\"\n              type=\"password\"\n              onChange={handleInputChange}\n              onBlur={validateOnBlur}\n            />\n            <FieldErrorMap code={state.errors.oldPassword}>\n              {t('error.requiredField')}\n            </FieldErrorMap>\n          </Field>\n          <Field validationState={state.errors.newEmail ? 'error' : null}>\n            <FieldLabel htmlFor=\"new-email\">{t('profile.newEmail')}</FieldLabel>\n            <Text\n              id=\"new-email\"\n              validationState={state.errors.newEmail ? 'error' : null}\n              value={newEmail}\n              name=\"newEmail\"\n              onChange={handleInputChange}\n              onBlur={validateOnBlur}\n            />\n            <FieldErrorMap code={state.errors.newEmail}>\n              <span key=\"required\">{t('error.requiredField')}</span>\n              <span key=\"invalid\">{t('profile.errors.email.invalid')}</span>\n              <span key=\"inUse\">{t('profile.errors.email.inUse')}</span>\n            </FieldErrorMap>\n          </Field>\n          <div key=\"actions\" style={{ float: 'right' }}>\n            <Button theme=\"text\" onClick={() => setShowEmailModal(false)}>\n              {t('standard.cancel')}\n            </Button>\n            <Button\n              data-testid=\"update-email-button\"\n              disabled={\n                !oldPassword.length || !newEmail.length || state.errors.newEmail\n              }\n              spinning={loading}\n              type=\"submit\"\n              theme=\"primary\"\n            >\n              {t('profile.update')}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    );\n  };\n\n  const renderPasswordModal = () => {\n    return (\n      <Modal\n        width={600}\n        open={showPasswordModal}\n        title={t('profile.changePassword')}\n        onRequestClose={() => setShowPasswordModal(false)}\n      >\n        <h3>{t('profile.changePassword')}</h3>\n        <form onSubmit={changePassword}>\n          <Field validationState={state.errors.oldPassword ? 'error' : null}>\n            <FieldLabel htmlFor=\"current-password\">\n              {t('profile.oldPassword')}\n            </FieldLabel>\n            <Text\n              id=\"current-password\"\n              validationState={state.errors.oldPassword ? 'error' : null}\n              value={state.oldPassword}\n              type=\"password\"\n              name=\"oldPassword\"\n              onChange={handleInputChange}\n              onBlur={validateOnBlur}\n            />\n            <FieldErrorMap code={state.errors.oldPassword}>\n              {t('error.requiredField')}\n            </FieldErrorMap>\n          </Field>\n          <PasswordValidator\n            changePassword\n            email={{ value: state.oldEmail }}\n            password={{\n              value: state.newPassword,\n              error: state.errors.newPassword,\n              validations: state.validations,\n            }}\n            handleInputChange={({ value, validations }) =>\n              setState({ newPassword: value, validations })\n            }\n          />\n          <div key=\"actions\" style={{ float: 'right' }}>\n            <Button theme=\"text\" onClick={() => setShowPasswordModal(false)}>\n              {t('standard.cancel')}\n            </Button>\n            <Button\n              data-testid=\"update-password-button\"\n              disabled={!(state.oldPassword.length && every(state.validations))}\n              spinning={loading}\n              theme=\"primary\"\n              type=\"submit\"\n            >\n              {t('profile.update')}\n            </Button>\n          </div>\n        </form>\n      </Modal>\n    );\n  };\n\n  const sm = 100;\n  const md = 50;\n  const lg = 50;\n  return (\n    <div className=\"profile\">\n      <h3>{t('nav.buyer_area.settings.profile')}</h3>\n      <Grid gutter={100}>\n        <Col sm={sm} md={md} lg={lg}>\n          <form>\n            <Field validationState={state.errors.firstName ? 'error' : null}>\n              <FieldLabel htmlFor=\"first-name\">\n                {t('profile.firstName')}\n              </FieldLabel>\n              <Text\n                id=\"first-name\"\n                name=\"firstName\"\n                onBlur={validateOnBlur}\n                onChange={handleInputChange}\n                validationState={state.errors.firstName ? 'error' : null}\n                value={state.firstName}\n              />\n              <FieldErrorMap code={state.errors.firstName}>\n                {t('error.requiredField')}\n              </FieldErrorMap>\n            </Field>\n            <Field validationState={state.errors.lastName ? 'error' : null}>\n              <FieldLabel htmlFor=\"last-name\">\n                {t('profile.lastName')}\n              </FieldLabel>\n              <Text\n                id=\"last-name\"\n                validationState={state.errors.lastName ? 'error' : null}\n                value={state.lastName}\n                name=\"lastName\"\n                onChange={handleInputChange}\n                onBlur={validateOnBlur}\n              />\n              <FieldErrorMap code={state.errors.lastName}>\n                {t('error.requiredField')}\n              </FieldErrorMap>\n            </Field>\n            <Field>\n              <FieldLabel htmlFor=\"title-position\">\n                {t('profile.title')}\n              </FieldLabel>\n              <Text\n                id=\"title-position\"\n                value={state.workTitle}\n                name=\"workTitle\"\n                onChange={handleInputChange}\n              />\n            </Field>\n            <Field validationState={state.errors.workPhone ? 'error' : null}>\n              <FieldLabel htmlFor=\"phone\">\n                {t('profile.phoneNumber')}\n              </FieldLabel>\n              <PhoneNumber\n                id=\"phone\"\n                defaultOption=\"US\"\n                name=\"phone\"\n                value={state.workPhone}\n                validationState={state.errors.workPhone ? 'error' : null}\n                onChange={value =>\n                  setState({\n                    workPhone: value,\n                    errors: { ...state.errors, workPhone: '' },\n                  })\n                }\n                onBlur={validatePhone}\n              />\n              <FieldErrorMap code={state.errors.workPhone}>\n                {t('profile.errors.phoneNumber.invalid')}\n              </FieldErrorMap>\n            </Field>\n            <LocaleSelect\n              locale={{ value: state.locale }}\n              updateLocale={locale => setState({ locale })}\n            />\n            <Field>\n              <FieldLabel htmlFor=\"currency-code\">\n                {t('profile.currencyCode.label')}\n              </FieldLabel>\n              <InfoTooltip align=\"left\" theme=\"light\">\n                {t('profile.currencyCode.tooltip')}\n              </InfoTooltip>\n              <Select\n                name=\"currencyCode\"\n                enableSearch={false}\n                multiple={false}\n                placeholder={t('standard.defaultOption')}\n                options={currencyCodeOptions}\n                onChange={value => setState({ currencyCode: value })}\n                value={state.currencyCode}\n              />\n            </Field>\n            <Field>\n              <FieldLabel htmlFor=\"currency-display\">\n                {t('profile.currencyDisplay.label')}\n              </FieldLabel>\n              <InfoTooltip align=\"left\" theme=\"light\">\n                {t('profile.currencyDisplay.tooltip')}\n              </InfoTooltip>\n              <Select\n                name=\"currencyDisplay\"\n                enableSearch={false}\n                multiple={false}\n                placeholder={t('standard.defaultOption')}\n                options={currencyDisplayOptions}\n                onChange={value => setState({ defaultCurrency: value })}\n                value={state.defaultCurrency}\n              />\n            </Field>\n            <Button\n              data-testid=\"update-profile-button\"\n              disabled={\n                state.errors.firstName ||\n                state.errors.lastName ||\n                state.errors.workPhone\n              }\n              onClick={updateUserProfile}\n              theme=\"primary\"\n              type=\"submit\"\n            >\n              {t('profile.update')}\n            </Button>\n          </form>\n        </Col>\n        <Col sm={sm} md={md} lg={lg}>\n          <FieldLabel htmlFor=\"change-password-modal\">\n            {t('profile.changePassword')}\n          </FieldLabel>\n          <p>{t('profile.passwordSubtext')}</p>\n          <Button\n            data-testid=\"change-password-button\"\n            type=\"submit\"\n            theme=\"primary\"\n            onClick={() => setShowPasswordModal(true)}\n          >\n            {t('profile.changePassword')}\n          </Button>\n          {renderPasswordModal()}\n          <FieldLabel htmlFor=\"change-email-modal\">\n            {t('profile.changeEmail')}\n          </FieldLabel>\n          <p>\n            {t('profile.emailSubtext')}\n            <strong>\n              &nbsp;\n              {state.oldEmail}\n            </strong>\n            .\n          </p>\n          <Button\n            data-testid=\"change-email-button\"\n            type=\"submit\"\n            theme=\"primary\"\n            onClick={() => setShowEmailModal(true)}\n          >\n            {t('profile.changeEmail')}\n          </Button>\n          {renderEmailModal()}\n        </Col>\n      </Grid>\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  i18n: { changeLanguage: null, language: 'en-US' },\n};\n\nProfile.propTypes = {\n  i18n: PropTypes.shape({\n    changeLanguage: PropTypes.func,\n    language: PropTypes.string,\n  }),\n};\n\nexport default Profile;\n","/* eslint-disable no-param-reassign */\nimport { toString } from 'lodash';\n\n// Utils helper functions, not exported from file\nconst addChecked = (obj, unit) => {\n  Object.keys(obj).forEach(k => {\n    const node = obj[k];\n    if (typeof node === 'object') {\n      if (unit === node.value) {\n        node.checked = true;\n      }\n      addChecked(node, unit);\n    }\n  });\n};\n\nconst checkCurrentRestrictions = (\n  obj,\n  hasRestrictions,\n  hasRestrictionsList\n) => {\n  if (hasRestrictions) {\n    hasRestrictionsList.forEach(unit => addChecked(obj, unit));\n  }\n};\n\nconst filterAllBusinessUnitsIds = ({ id, availableBusinessUnits = [] }) =>\n  [id].concat(...availableBusinessUnits.map(filterAllBusinessUnitsIds));\n\nconst flattenedBusinessUnitIds = data =>\n  [].concat(...data.map(unit => filterAllBusinessUnitsIds(unit)));\n\nconst formatLabel = (label, backupLabel) =>\n  toString(label) === '' ? toString(backupLabel) : toString(label);\n\nconst newTreeDataFormat = (obj, newObj) => {\n  Object.keys(obj).forEach(k => {\n    const node = obj[k];\n    if (typeof node === 'object') {\n      if ('companyId' in obj) {\n        newObj.value = obj.companyId;\n        newObj.label = formatLabel(obj.companyName, 'Company');\n      }\n      if ('buyerId' in obj) {\n        newObj.value = obj.id;\n        newObj.label = formatLabel(obj.name, obj.number);\n      }\n      if ('availableBusinessUnits' in obj) {\n        newObj.children = [];\n        obj.availableBusinessUnits.forEach(item => {\n          const itemObj = {};\n          newTreeDataFormat(item, itemObj);\n          newObj.children.push(itemObj);\n        });\n      }\n    }\n  });\n};\n\n// Functions exported from file\nexport const fullAccessBusinessUnits = units =>\n  units.length\n    ? flattenedBusinessUnitIds(units).filter(x => x !== undefined)\n    : [];\n\nexport const generateTreeSelectFormat = (\n  businessUnits,\n  hasRestrictions,\n  hasRestrictionsList\n) => {\n  const newTreeBusinessUnits = [];\n  businessUnits.forEach(item => {\n    const newObj = {};\n    newTreeDataFormat(item, newObj);\n    newTreeBusinessUnits.push(newObj);\n  });\n  checkCurrentRestrictions(\n    newTreeBusinessUnits,\n    hasRestrictions,\n    hasRestrictionsList\n  );\n  return newTreeBusinessUnits;\n};\n\nexport const getSelectedBusinessUnits = (selectedList, fullList) => {\n  const idArr = [];\n  selectedList.forEach(selectedObj => {\n    if ('children' in selectedObj) {\n      fullList.forEach(fullObj => {\n        if (fullObj.value === selectedObj.value) {\n          idArr.push(fullObj.children.map(item => item.value));\n        }\n      });\n    } else {\n      idArr.push(selectedObj.value);\n    }\n  });\n  return [].concat(...idArr);\n};\n","import React, { useContext, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { Trans, useTranslation } from 'react-i18next';\nimport validate from 'validate.js';\nimport {\n  Button,\n  Col,\n  Field,\n  FieldErrorMap,\n  FieldLabel,\n  Grid,\n  Link,\n  LocaleSelect,\n  Modal,\n  Radio,\n  Select,\n  Text,\n  toast,\n  TreeSelect,\n} from 'taulia-ui';\n\nimport {\n  fullAccessBusinessUnits,\n  generateTreeSelectFormat,\n  getSelectedBusinessUnits,\n} from '../../../Utils/UserManagerUtils';\nimport { genericErrorToast } from '../../../Utils/utils';\nimport { RequestContext } from '../../../contexts';\n\nfunction InviteUserModal({ businessUnits, open, onRequestClose, roles }) {\n  const { i18n, t } = useTranslation();\n  const request = useContext(RequestContext);\n\n  const roleOptions = roles.map(role => {\n    return { value: role, label: t(`userManager.roles.${role}`) };\n  });\n\n  const INITIAL_STATE = {\n    email: '',\n    firstName: '',\n    lastName: '',\n    locale: i18n.language,\n    permissions: 'fullAccess',\n    restrictions: [],\n    role: roles.length ? roles[0] : '',\n    errors: {},\n  };\n\n  const reducer = (prevState, updatedProperty) => ({\n    ...prevState,\n    ...updatedProperty,\n  });\n  const [state, setState] = useReducer(reducer, INITIAL_STATE);\n  const treeSelectFormatBusinessUnits = generateTreeSelectFormat(businessUnits);\n\n  useEffect(() => {\n    if (roles.length) setState({ role: roles[0] });\n  }, [roles]);\n\n  const validateOnBlur = event => {\n    const { value, name } = event.target;\n    let error;\n    if (name === 'email') {\n      error = validate({ email: state.email }, { email: { email: true } })\n        ? 'invalid'\n        : null;\n      if (!error) {\n        request('GET', `/api/email/${state.email}`).then(response => {\n          if (response.body.exists) {\n            setState({ errors: { ...state.errors, [name]: 'inUse' } });\n          }\n        });\n      }\n    }\n    if (!value.length) {\n      error = 'required';\n    }\n    setState({ errors: { ...state.errors, [name]: error } });\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setState({\n      [name]: value,\n      errors: { ...state.errors, [name]: '' },\n    });\n  };\n\n  const checkForEmptyFields = () => {\n    const fields = ['firstName', 'lastName', 'email'];\n    const errors = {};\n    fields.forEach(field => {\n      if (!state[field].length) {\n        errors[field] = 'required';\n      }\n    });\n    setState({ errors });\n    return Object.entries(errors).length;\n  };\n\n  const inviteUser = event => {\n    event.preventDefault();\n    const {\n      email,\n      firstName,\n      lastName,\n      locale,\n      permissions,\n      restrictions,\n      role,\n    } = state;\n    if (checkForEmptyFields()) return;\n    request('POST', '/api/user-manager/invite/users')\n      .send({\n        firstName,\n        lastName,\n        email,\n        userRole: role,\n        locale,\n        businessUnits:\n          permissions === 'fullAccess'\n            ? fullAccessBusinessUnits(businessUnits)\n            : restrictions,\n      })\n      .then(() => {\n        toast.success(t('userManager.toast.inviteUserSuccess', { email }));\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n    onRequestClose();\n    setState(INITIAL_STATE);\n  };\n\n  return (\n    <Modal width={800} open={open} onRequestClose={onRequestClose}>\n      <h2>{t('userManager.inviteAUser')}</h2>\n      <form onSubmit={inviteUser}>\n        <Field validationState={state.errors.email ? 'error' : null}>\n          <FieldLabel htmlFor=\"email\">{t('profile.email')}</FieldLabel>\n          <Text\n            id=\"email\"\n            name=\"email\"\n            onBlur={validateOnBlur}\n            onChange={handleInputChange}\n            validationState={state.errors.email ? 'error' : null}\n            value={state.email}\n          />\n          <FieldErrorMap code={state.errors.email}>\n            <span key=\"required\">{t('error.requiredField')}</span>\n            <span key=\"invalid\">{t('profile.errors.email.invalid')}</span>\n            <span key=\"inUse\">{t('profile.errors.email.inUse')}</span>\n          </FieldErrorMap>\n        </Field>\n        <Grid gutter={20} style={{ marginBottom: '10px' }}>\n          <Col sm={50} md={50} lg={50}>\n            <Field validationState={state.errors.firstName ? 'error' : null}>\n              <FieldLabel htmlFor=\"first-name\">\n                {t('profile.firstName')}\n              </FieldLabel>\n              <Text\n                id=\"first-name\"\n                name=\"firstName\"\n                onBlur={validateOnBlur}\n                onChange={handleInputChange}\n                validationState={state.errors.firstName ? 'error' : null}\n                value={state.firstName}\n              />\n              <FieldErrorMap code={state.errors.firstName}>\n                {t('error.requiredField')}\n              </FieldErrorMap>\n            </Field>\n            <FieldLabel htmlFor=\"role\">{t('supplierView.role')}</FieldLabel>\n            <Select\n              enableSearch={false}\n              id=\"role\"\n              name=\"role\"\n              multiple={false}\n              options={roleOptions}\n              onChange={role => setState({ role })}\n              value={state.role}\n            />\n          </Col>\n          <Col sm={50} md={50} lg={50}>\n            <Field validationState={state.errors.lastName ? 'error' : null}>\n              <FieldLabel htmlFor=\"last-name\">\n                {t('profile.lastName')}\n              </FieldLabel>\n              <Text\n                id=\"last-name\"\n                validationState={state.errors.lastName ? 'error' : null}\n                value={state.lastName}\n                name=\"lastName\"\n                onChange={handleInputChange}\n                onBlur={validateOnBlur}\n              />\n              <FieldErrorMap code={state.errors.lastName}>\n                {t('error.requiredField')}\n              </FieldErrorMap>\n            </Field>\n            <LocaleSelect\n              locale={{ value: state.locale }}\n              updateLocale={locale => setState({ locale })}\n            />\n          </Col>\n        </Grid>\n        <p style={{ marginBottom: '20px' }}>\n          <Trans\n            i18nKey=\"userManager.roleDesc\"\n            components={[\n              <Link to=\"https://customersupport.taulia.com/articles/en_US/Agent_Knowledge_Base/Q-How-can-I-add-or-remove-users-in-the-Buyer-UI-000008765/\" />,\n            ]}\n          />\n        </p>\n        <Radio\n          aria-label=\"fullAccess\"\n          checked={state.permissions === 'fullAccess'}\n          onChange={event => setState({ permissions: event.target.value })}\n          value=\"fullAccess\"\n        >\n          <strong>{t('userManager.fullAccess')}</strong>\n          <p style={{ marginBottom: '10px' }}>\n            {t('userManager.fullAccessDesc')}\n          </p>\n        </Radio>\n        <Radio\n          aria-label=\"applyRestrictions\"\n          checked={state.permissions === 'applyRestrictions'}\n          onChange={event => setState({ permissions: event.target.value })}\n          value=\"applyRestrictions\"\n        >\n          <strong>{t('userManager.applyRestrictions')}</strong>\n          <p style={{ marginBottom: '10px' }}>\n            {t('userManager.applyRestrictionsDesc')}\n          </p>\n        </Radio>\n        {state.permissions === 'applyRestrictions' && (\n          <TreeSelect\n            id=\"business-unit-ids\"\n            name=\"businessUnitIds\"\n            data={treeSelectFormatBusinessUnits}\n            onSelectionChange={selectedNodes =>\n              setState({\n                restrictions: getSelectedBusinessUnits(\n                  selectedNodes,\n                  treeSelectFormatBusinessUnits\n                ),\n              })\n            }\n          />\n        )}\n        <div style={{ marginTop: '20px', float: 'right' }}>\n          <Button\n            disabled={\n              state.errors.firstName ||\n              state.errors.lastName ||\n              state.errors.email\n            }\n            type=\"submit\"\n            theme=\"primary\"\n          >\n            {t('userManager.inviteUser')}\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nInviteUserModal.propTypes = {\n  businessUnits: PropTypes.arrayOf(\n    PropTypes.shape({\n      availableBusinessUnits: PropTypes.arrayOf(\n        PropTypes.shape({\n          address: PropTypes.shape({\n            city: PropTypes.string,\n            county: PropTypes.string,\n            name: PropTypes.string,\n          }),\n          buyerId: PropTypes.string,\n          id: PropTypes.string,\n          name: PropTypes.string,\n          number: PropTypes.string,\n        })\n      ),\n      companyId: PropTypes.string,\n      companyName: PropTypes.string,\n    })\n  ),\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  roles: PropTypes.arrayOf(PropTypes.string),\n};\n\nInviteUserModal.defaultProps = {\n  businessUnits: [],\n  open: true,\n  roles: ['BUYER_ADMIN', 'BUYER_SEARCH_ONLY'],\n};\n\nexport default InviteUserModal;\n","/* eslint-disable no-unused-expressions  */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Radio, toast, TreeSelect } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  fullAccessBusinessUnits,\n  generateTreeSelectFormat,\n  getSelectedBusinessUnits,\n} from '../../../Utils/UserManagerUtils';\nimport { genericErrorToast } from '../../../Utils/utils';\nimport { RequestContext } from '../../../contexts';\n\nfunction PermissionsModal({ businessUnits, open, onRequestClose, user }) {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n  const [option, setOption] = useState('');\n  const [currentRestrictions, setCurrentRestrictions] = useState({});\n  const [restrictions, setRestrictions] = useState([]);\n  const { email, id } = user;\n  const treeSelectFormatBusinessUnits = generateTreeSelectFormat(\n    businessUnits,\n    currentRestrictions.hasRestrictions,\n    currentRestrictions.businessUnitIds\n  );\n  const allAvailableBusinessUnitIds = fullAccessBusinessUnits(businessUnits);\n\n  const getServerRestrictions = () => {\n    request('GET', `/api/user-manager/user/${id}/permissions`)\n      .then(res => {\n        res.body.hasRestrictions &&\n        res.body.businessUnitIds.length !== allAvailableBusinessUnitIds.length\n          ? setOption('applyRestrictions')\n          : setOption('fullAccess');\n        return setCurrentRestrictions(res.body);\n      })\n      .catch(genericErrorToast);\n  };\n\n  useEffect(() => {\n    if (id) {\n      getServerRestrictions();\n    }\n  }, [user]);\n\n  const savePermissions = () => {\n    request('PUT', `/api/user-manager/user/${id}/permissions`)\n      .send(\n        option === 'fullAccess' ||\n          restrictions.length === allAvailableBusinessUnitIds.length\n          ? {\n              hasRestrictions: false,\n            }\n          : { hasRestrictions: true, businessUnitIds: restrictions }\n      )\n      .then(() => {\n        toast.success(\n          t('userManager.toast.updateBusinessUnitsSuccess', {\n            email: user.email,\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n    onRequestClose();\n  };\n\n  return (\n    <Modal width={800} open={open} onRequestClose={onRequestClose}>\n      <strong>{t('userManager.editBusinessUnitFor', { email })}</strong>\n      <hr className=\"modal-divider\" />\n      <Radio\n        aria-label=\"fullAccess\"\n        checked={option === 'fullAccess'}\n        onChange={event => setOption(event.target.value)}\n        value=\"fullAccess\"\n      >\n        <strong>{t('userManager.fullAccess')}</strong>\n        <p style={{ marginBottom: '10px' }}>\n          {t('userManager.fullAccessDesc')}\n        </p>\n      </Radio>\n      <Radio\n        aria-label=\"applyRestrictions\"\n        checked={option === 'applyRestrictions'}\n        onChange={event => setOption(event.target.value)}\n        value=\"applyRestrictions\"\n      >\n        <strong>{t('userManager.applyRestrictions')}</strong>\n        <p style={{ marginBottom: '10px' }}>\n          {t('userManager.applyRestrictionsDesc')}\n        </p>\n      </Radio>\n      {option === 'applyRestrictions' && (\n        <TreeSelect\n          id=\"business-unit-ids\"\n          name=\"businessUnitIds\"\n          data={treeSelectFormatBusinessUnits}\n          onSelectionChange={selectedNodes =>\n            setRestrictions(\n              getSelectedBusinessUnits(\n                selectedNodes,\n                treeSelectFormatBusinessUnits\n              )\n            )\n          }\n        />\n      )}\n      <div style={{ marginTop: '20px', float: 'right' }}>\n        <Button onClick={savePermissions} theme=\"primary\">\n          {t('userManager.savePermissions')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nPermissionsModal.propTypes = {\n  businessUnits: PropTypes.arrayOf(\n    PropTypes.shape({\n      availableBusinessUnits: PropTypes.arrayOf(\n        PropTypes.shape({\n          address: PropTypes.shape({\n            city: PropTypes.string,\n            county: PropTypes.string,\n            name: PropTypes.string,\n          }),\n          buyerId: PropTypes.string,\n          id: PropTypes.string,\n          name: PropTypes.string,\n          number: PropTypes.string,\n        })\n      ),\n      companyId: PropTypes.string,\n      companyName: PropTypes.string,\n    })\n  ),\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    id: PropTypes.string,\n  }),\n};\n\nPermissionsModal.defaultProps = {\n  businessUnits: [],\n  open: true,\n  user: { email: '', id: '' },\n};\n\nexport default PermissionsModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Link, Modal, Radio, toast } from 'taulia-ui';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { genericErrorToast } from '../../../Utils/utils';\nimport { RequestContext } from '../../../contexts';\n\nfunction RoleModal({ open, onRequestClose, roles, user }) {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n  const [option, setOption] = useState('fullAccess');\n  const { email, id } = user;\n\n  useEffect(() => {\n    setOption(user.role);\n  }, [user]);\n\n  const changeRole = () => {\n    request('PUT', `/api/user-manager/user/${id}`)\n      .send({ role: option })\n      .then(() => {\n        toast.success(\n          t('userManager.toast.changeRoleSuccess', {\n            email: user.email,\n            role: t(`userManager.roles.${option}`),\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n    onRequestClose();\n  };\n\n  return (\n    <Modal width={800} open={open} onRequestClose={onRequestClose}>\n      <strong>{t('userManager.editRoleFor', { email })}</strong>\n      <hr className=\"modal-divider\" />\n      <section>\n        <p style={{ marginBottom: '10px' }}>\n          <Trans\n            i18nKey=\"userManager.roleDesc\"\n            components={[\n              <Link to=\"https://customersupport.taulia.com/articles/en_US/Agent_Knowledge_Base/Q-How-can-I-add-or-remove-users-in-the-Buyer-UI-000008765/\" />,\n            ]}\n          />\n        </p>\n        {roles.map(role => (\n          <Radio\n            aria-label={role}\n            checked={option === role}\n            key={role}\n            onChange={event => setOption(event.target.value)}\n            value={role}\n          >\n            <strong>{t(`userManager.roles.${role}`)}</strong>\n            <p style={{ marginBottom: '10px' }}>\n              {t(`userManager.roles.${role}Desc`)}\n            </p>\n          </Radio>\n        ))}\n      </section>\n      <div style={{ marginTop: '20px', float: 'right' }}>\n        <Button onClick={changeRole} theme=\"primary\">\n          {t('userManager.changeRole')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nRoleModal.propTypes = {\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  roles: PropTypes.arrayOf(PropTypes.string),\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    id: PropTypes.string,\n    role: PropTypes.string,\n  }),\n};\n\nRoleModal.defaultProps = {\n  open: true,\n  roles: ['BUYER_ADMIN', 'BUYER_SEARCH_ONLY'],\n  user: { email: '', id: '', role: '' },\n};\n\nexport default RoleModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, FieldList, Modal } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { localizeDate } from '../../../Utils/localizeUtils';\n\nfunction RoleModal({\n  onRequestClose,\n  open,\n  setShowPermissionsModal,\n  setShowRoleModal,\n  setShowViewUserModal,\n  statusToActionMap,\n  statusIndicator,\n  user,\n}) {\n  const { t } = useTranslation();\n\n  const userRoleComponent = (\n    <>\n      {t(`userManager.roles.${user.role}`)}\n      &nbsp;&#40;\n      <Button\n        data-testid=\"edit-role\"\n        onClick={() => {\n          setShowViewUserModal(false);\n          setShowRoleModal(true);\n        }}\n        theme=\"text\"\n      >\n        {t('standard.edit')}\n      </Button>\n      &#41;\n    </>\n  );\n\n  const businessUnitsComponent = (\n    <>\n      {user.hasRestrictionsPerUser\n        ? `${user.userCompanyCodeAssignedCount} /\n    ${user.numberOfAvailableCompanyCodes}`\n        : t('userManager.noRestriction')}\n      &nbsp;&#40;\n      <Button\n        data-testid=\"edit-permissions\"\n        onClick={() => {\n          setShowViewUserModal(false);\n          setShowPermissionsModal(true);\n        }}\n        theme=\"text\"\n      >\n        {t('standard.edit')}\n      </Button>\n      &#41;\n    </>\n  );\n\n  const fieldListData = {\n    colOneData: [\n      {\n        dataTestId: 'user-manager-status',\n        label: t('fields.status'),\n        value: statusIndicator(user.status),\n      },\n      {\n        dataTestId: 'user-manager-locale',\n        label: t('supplierView.locale'),\n        value: user.locale,\n      },\n      {\n        dataTestId: 'user-manager-role',\n        label: t('supplierView.role'),\n        value: userRoleComponent,\n      },\n    ],\n    colTwoData: [\n      {\n        dataTestId: 'user-manager-dateInvited',\n        label: t('fields.dateInvited'),\n        value: localizeDate(user.dateInvited),\n      },\n      {\n        dataTestId: 'user-manager-lastLogin',\n        label: t('fields.lastLogin'),\n        value: localizeDate(user.lastLogin),\n      },\n      {\n        dataTestId: 'user-manager-businessUnitAccess',\n        label: t('userManager.businessUnitAccess'),\n        value: businessUnitsComponent,\n      },\n    ],\n    colGapWidth: 100,\n    colOneWidth: 180,\n    colTwoWidth: 180,\n  };\n\n  return (\n    <Modal width={1100} open={open} onRequestClose={onRequestClose}>\n      <h3>{user.name}</h3>\n      <span className=\"subtext\">{user.email}</span>\n      <hr className=\"modal-divider\" />\n      <FieldList {...fieldListData} />\n      {user.status && (\n        <div style={{ marginTop: '20px', float: 'right' }}>\n          {statusToActionMap[user.status].map(action => (\n            <Button key={action.trans} onClick={() => action.func(user.id)}>\n              {t(action.trans)}\n            </Button>\n          ))}\n        </div>\n      )}\n    </Modal>\n  );\n}\n\nRoleModal.propTypes = {\n  onRequestClose: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  setShowPermissionsModal: PropTypes.func.isRequired,\n  setShowRoleModal: PropTypes.func.isRequired,\n  setShowViewUserModal: PropTypes.func,\n  statusToActionMap: PropTypes.shape().isRequired,\n  statusIndicator: PropTypes.func,\n  user: PropTypes.shape({\n    dateInvited: PropTypes.string,\n    email: PropTypes.string,\n    hasRestrictionsPerUser: PropTypes.bool,\n    id: PropTypes.string,\n    lastLogin: PropTypes.string,\n    locale: PropTypes.string,\n    name: PropTypes.string,\n    numberOfAvailableCompanyCodes: PropTypes.number,\n    role: PropTypes.string,\n    status: PropTypes.string,\n    userCompanyCodeAssignedCount: PropTypes.number,\n  }).isRequired,\n};\n\nRoleModal.defaultProps = {\n  setShowViewUserModal: () => null,\n  statusIndicator: () => null,\n  open: true,\n};\n\nexport default RoleModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionsCell,\n  Button,\n  ListView,\n  StatusIndicator,\n  toast,\n} from 'taulia-ui';\nimport qs from 'qs';\nimport InviteUserModal from './InviteUserModal';\nimport PermissionsModal from './PermissionsModal';\nimport RoleModal from './RoleModal';\nimport ViewUserModal from './ViewUserModal';\nimport { genericErrorToast } from '../../../Utils/utils';\nimport { RequestContext } from '../../../contexts';\n\nconst UserManager = ({ location }) => {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n  const [businessUnits, setBusinessUnits] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [showPermissionsModal, setShowPermissionsModal] = useState(false);\n  const [showRoleModal, setShowRoleModal] = useState(false);\n  const [showViewUserModal, setShowViewUserModal] = useState(false);\n  const [showInviteUserModal, setShowInviteUserModal] = useState(false);\n  const [user, setUser] = useState({});\n\n  const getBusinessUnits = () => {\n    request('GET', '/api/user-manager/business-units')\n      .then(res => setBusinessUnits(res.body.availableBusinessUnitTree))\n      .catch(genericErrorToast);\n  };\n\n  const getRoles = () => {\n    request('GET', '/api/user-manager/buyer-roles')\n      .then(res => setRoles(res.body.buyerRoles))\n      .catch(genericErrorToast);\n  };\n\n  const params = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n\n  // TODO: delete when connected to API\n  const dummyData = [\n    {\n      id: params.stubbedUserId || '402881a875f759300175fb4af132000e', // Allows better testing on integration\n      email: 'bigjared@theman.com',\n      name: 'the one and only',\n      status: 'pending',\n      dateInvited: '2020-01-15T12:07:05.000Z',\n      lastLogin: '2020-01-18T12:05:05.000Z',\n      hasRestrictionsPerUser: true,\n      userCompanyCodeAssignedCount: 3,\n      numberOfAvailableCompanyCodes: 22,\n      role: 'BUYER_ADMIN',\n      locale: 'en-US',\n    },\n    {\n      id: '402881a87620037f01762b6e66b80025',\n      email: 'smalljared@nottheman.com',\n      name: 'small jared',\n      status: 'enabled',\n      lastLogin: null,\n      hasRestrictionsPerUser: false,\n      role: 'BUYER_DOCUMENT_SEARCH_ONLY',\n      locale: 'es',\n      dateInvited: '2020-01-15T12:07:05.000Z',\n    },\n    {\n      id: '402881a8761a48c201761afcbed9000e',\n      email: 'mediumjared@nottheman.com',\n      name: 'JARED',\n      status: 'disabled',\n      dateInvited: '2020-04-17T12:07:05.000Z',\n      hasRestrictionsPerUser: true,\n      userCompanyCodeAssignedCount: 4,\n      numberOfAvailableCompanyCodes: 5,\n      lastLogin: '2020-08-16T12:07:05.000Z',\n      role: 'BUYER_SUPPLIER_LAUNCH_SEARCH',\n      locale: 'de',\n    },\n  ];\n\n  useEffect(() => {\n    getBusinessUnits();\n    getRoles();\n  }, []);\n\n  const statusIndicator = status => {\n    const statusColorMap = {\n      pending: 'yellow',\n      enabled: 'green',\n    };\n    return (\n      <StatusIndicator color={statusColorMap[status]}>\n        {t(`userManager.${status}`)}\n      </StatusIndicator>\n    );\n  };\n\n  const resendInviteEmail = data => {\n    request('POST', `/api/user-manager/resendInvitation/${data.email}`)\n      .then(() => {\n        toast.success(\n          t('userManager.toast.resendInviteEmailSuccess', {\n            email: data.email,\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n  };\n\n  const deleteUser = data => {\n    request('DELETE', `/api/user-manager/user/${data.id}`)\n      .then(() => {\n        toast.success(\n          t('userManager.toast.deleteUserSuccess', {\n            email: data.email,\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n  };\n\n  const reactivateUser = data => {\n    request('PUT', `/api/user-manager/user/${data.id}`)\n      .send({ active: true })\n      .then(() => {\n        toast.success(\n          t('userManager.toast.reactivateUserSuccess', {\n            email: data.email,\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n  };\n\n  const deactivateUser = data => {\n    request('PUT', `/api/user-manager/user/${data.id}`)\n      .send({ active: false })\n      .then(() => {\n        toast.success(\n          t('userManager.toast.deactivateUserSuccess', {\n            email: data.email,\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n  };\n\n  const resetPassword = data => {\n    request('POST', `/api/user-manager/user/${data.id}/resetPassword`)\n      .then(() => {\n        toast.success(\n          t('userManager.toast.resetPasswordSuccess', {\n            email: data.email,\n          })\n        );\n      })\n      .catch(() => {\n        genericErrorToast();\n      });\n  };\n\n  const statusToActionMap = {\n    pending: [\n      { func: resendInviteEmail, trans: 'userManager.resendInviteEmail' },\n      { func: deleteUser, trans: 'standard.delete' },\n    ],\n    enabled: [\n      { func: deactivateUser, trans: 'userManager.deactivateUser' },\n      { func: resetPassword, trans: 'userManager.resetPassword' },\n    ],\n    disabled: [\n      { func: reactivateUser, trans: 'userManager.reactivateUser' },\n      { func: resetPassword, trans: 'userManager.resetPassword' },\n    ],\n  };\n\n  const getActionsForCell = data => {\n    const { status } = data;\n    const cellActions = [\n      {\n        label: t('userManager.editRole'),\n        action: () => {\n          setShowRoleModal(true);\n          setUser(data);\n        },\n      },\n      {\n        label: t('userManager.editPermissions'),\n        action: () => {\n          setShowPermissionsModal(true);\n          setUser(data);\n        },\n      },\n    ];\n    statusToActionMap[status].forEach(action => {\n      cellActions.push({\n        label: t(action.trans),\n        action: () => action.func(data),\n      });\n    });\n    return cellActions;\n  };\n\n  const columns = [\n    {\n      key: 'email',\n      label: t('profile.email'),\n      cell: data => (\n        <Button\n          onClick={() => {\n            setShowViewUserModal(true);\n            setUser(data.object);\n          }}\n          theme=\"text\"\n          title={data.object.email}\n        >\n          {data.object.email}\n        </Button>\n      ),\n      width: 225,\n      fixedOrder: 1,\n    },\n    {\n      key: 'name',\n      label: t('fields.name'),\n      cell: data => (\n        <Button\n          onClick={() => {\n            setShowViewUserModal(true);\n            setUser(data.object);\n          }}\n          theme=\"text\"\n          title={data.object.name}\n        >\n          {data.object.name}\n        </Button>\n      ),\n      width: 180,\n      fixedOrder: 2,\n    },\n    {\n      key: 'status',\n      label: t('fields.status'),\n      cell: data => statusIndicator(data.object.status),\n      width: 300,\n    },\n    {\n      key: 'role',\n      label: t('supplierView.role'),\n      cell: data => t(`userManager.roles.${data.object.role}`),\n      width: 275,\n    },\n    {\n      key: 'businessUnits',\n      label: t('userManager.businessUnitAccess'),\n      type: 'TEXT',\n      width: 200,\n      cell: data => {\n        const {\n          hasRestrictionsPerUser,\n          userCompanyCodeAssignedCount,\n          numberOfAvailableCompanyCodes,\n        } = data.object;\n        if (hasRestrictionsPerUser) {\n          return (\n            <span>\n              {userCompanyCodeAssignedCount}\n              &nbsp;&#47;&nbsp;\n              {numberOfAvailableCompanyCodes}\n            </span>\n          );\n        }\n        return t('userManager.noRestriction');\n      },\n    },\n    { key: 'lastLogin', label: t('fields.lastLogin'), type: 'DATE_TIME' },\n    {\n      key: 'actions',\n      label: '',\n      width: 10,\n      cell: data => <ActionsCell items={getActionsForCell(data.object)} />,\n    },\n  ];\n\n  const actions = [\n    {\n      label: t('userManager.inviteUser'),\n      onClick: () => setShowInviteUserModal(true),\n      allowEmptySelection: true,\n    },\n  ];\n\n  const onModalClose = () => {\n    setUser({});\n    setShowInviteUserModal(false);\n    setShowPermissionsModal(false);\n    setShowRoleModal(false);\n    setShowViewUserModal(false);\n  };\n\n  return (\n    <>\n      <h3>{t('nav.buyer_area.settings.user_manager')}</h3>\n      {/* TODO: swap listview for EnhancedSearch when API is connected */}\n      <ListView\n        actions={actions}\n        actionsEnabled\n        columns={columns}\n        data={dummyData} // TODO: remove\n        noResultsText={<p>{t('userManager.noUsers')}</p>}\n      />\n      <PermissionsModal\n        businessUnits={businessUnits}\n        onRequestClose={onModalClose}\n        open={showPermissionsModal}\n        request={request}\n        user={user}\n      />\n      <RoleModal\n        onRequestClose={onModalClose}\n        open={showRoleModal}\n        request={request}\n        roles={roles}\n        user={user}\n      />\n      <ViewUserModal\n        onRequestClose={onModalClose}\n        open={showViewUserModal}\n        setShowPermissionsModal={setShowPermissionsModal}\n        setShowRoleModal={setShowRoleModal}\n        setShowViewUserModal={setShowViewUserModal}\n        statusToActionMap={statusToActionMap}\n        statusIndicator={statusIndicator}\n        user={user}\n      />\n      <InviteUserModal\n        businessUnits={businessUnits}\n        onRequestClose={onModalClose}\n        open={showInviteUserModal}\n        request={request}\n        roles={roles}\n      />\n    </>\n  );\n};\n\nexport default UserManager;\n\nUserManager.propTypes = {\n  location: PropTypes.shape(),\n};\n\nUserManager.defaultProps = {\n  location: {},\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'taulia-ui';\nimport {\n  createSupplierCsv,\n  downloadCsvFile,\n  createCsvFileName,\n} from '../../Utils/SupplierUtils';\nimport { genericErrorToast } from '../../Utils/utils';\nimport { RequestContext } from '../../contexts';\n\nconst ActionCell = ({ segment }) => {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n\n  const downloadSupplier = () => {\n    request('GET', `/api/archivedSegments/${segment.id}/suppliers`)\n      .then(res =>\n        downloadCsvFile(\n          createCsvFileName(segment.name),\n          createSupplierCsv(res.body.suppliers)\n        )\n      )\n      .catch(genericErrorToast);\n  };\n\n  if (segment.numSuppliers) {\n    return (\n      <Button\n        data-testid={`download_${segment.id}_${segment.name}`}\n        id={`download_${segment.id}_${segment.name}`}\n        theme=\"text\"\n        onClick={downloadSupplier}\n      >\n        {t('supplierSegment.segmentAddSupplierForm.downloadToCsv')}\n      </Button>\n    );\n  }\n  return null;\n};\n\nActionCell.propTypes = {\n  segment: PropTypes.shape(),\n};\n\nActionCell.defaultProps = {\n  segment: {},\n};\n\nexport default ActionCell;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, ListView } from 'taulia-ui';\nimport ActionCell from './DeletedSegmentActionCell';\nimport { RequestContext } from '../../contexts';\n\nexport default function DeletedSegmentList({ deletedSegments, viewSegments }) {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n  const getFieldsConfig = () => {\n    return [\n      {\n        key: 'name',\n        label: t('supplierSegment.supplierSegmentList.name'),\n        type: 'TEXT',\n        width: 350,\n      },\n      {\n        key: 'description',\n        label: t('supplierSegment.supplierSegmentList.description'),\n        type: 'TEXT',\n        width: 350,\n      },\n      {\n        key: 'dateArchived',\n        label: t('supplierSegment.deletedSegmentList.dateDeleted'),\n        type: 'DATE_TIME',\n      },\n      {\n        key: 'numSuppliers',\n        label: t('bulkInvites.supplierSummary.suppliers.title'),\n        type: 'NUMBER',\n        align: 'center',\n      },\n      {\n        key: 'actions',\n        label: '',\n        type: 'TEXT',\n        cell: segment => (\n          <ActionCell request={request} segment={segment.object} />\n        ),\n      },\n    ];\n  };\n\n  const columns = getFieldsConfig();\n  const data = deletedSegments;\n\n  return (\n    <div className=\"supplier-segment\">\n      <h3>{t('supplierSegment.deletedSegmentList.title')}</h3>\n      <p>{t('supplierSegment.deletedSegmentList.info')}</p>\n      <Button\n        style={{ margin: '20px 0' }}\n        theme=\"text\"\n        id=\"viewSegmentsLink\"\n        onClick={viewSegments}\n      >\n        {t('supplierSegment.deletedSegmentList.viewSupplierSegments')}\n      </Button>\n      <ListView\n        columns={columns}\n        data={data}\n        noResultsText={\n          <p>{t('supplierSegment.deletedSegmentList.emptyResults')}</p>\n        }\n        isResizable={false}\n        showColumnConfig={false}\n        showCount={false}\n        showDataLength={false}\n      />\n    </div>\n  );\n}\n\nDeletedSegmentList.propTypes = {\n  deletedSegments: PropTypes.arrayOf(PropTypes.shape()),\n  viewSegments: PropTypes.func.isRequired,\n};\n\nDeletedSegmentList.defaultProps = {\n  deletedSegments: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Field,\n  FieldLabel,\n  FieldError,\n  Text,\n  Textarea,\n  toast,\n} from 'taulia-ui';\nimport { RequestContext } from '../../contexts';\n\nexport default class SegmentForm extends Component {\n  static propTypes = {\n    closeCreateSegmentModal: PropTypes.func,\n    loadSegments: PropTypes.func,\n    params: PropTypes.shape(),\n    segments: PropTypes.arrayOf(PropTypes.shape()),\n    segmentToEdit: PropTypes.shape(),\n    t: PropTypes.func,\n  };\n\n  static defaultProps = {\n    closeCreateSegmentModal: null,\n    loadSegments: null,\n    params: {},\n    segments: [],\n    segmentToEdit: { name: '', description: '' },\n    t: null,\n  };\n\n  state = {\n    name: { value: '', notUniqueError: false },\n    description: { value: '' },\n  };\n\n  componentDidMount() {\n    const { segmentToEdit } = this.props;\n    this.setState({\n      name: {\n        value: segmentToEdit.name,\n        notUniqueError: false,\n        originalValue: segmentToEdit.name,\n      },\n      description: {\n        value: segmentToEdit.description,\n        originalValue: segmentToEdit.description,\n      },\n    });\n  }\n\n  createOrUpdateSegment = e => {\n    e.preventDefault();\n\n    const { name, description } = this.state;\n    const {\n      closeCreateSegmentModal,\n      loadSegments,\n      segmentToEdit,\n      t,\n    } = this.props;\n    const request = this.context;\n    const newSegment = {\n      id: segmentToEdit.id,\n      name: name.value,\n      description: description.value,\n    };\n\n    if (!this.isNameUnique(newSegment)) {\n      this.setState({\n        name: Object.assign({}, name, { notUniqueError: true }),\n      });\n      return;\n    }\n\n    const alertType = segmentToEdit.id\n      ? 'segmentWasUpdated'\n      : 'segmentWasAdded';\n\n    request('POST', '/api/segment')\n      .send(newSegment)\n      .then(() => {\n        closeCreateSegmentModal();\n        loadSegments();\n        toast.success(\n          t(`supplierSegment.supplierSegmentForm.${alertType}`, {\n            segmentName: newSegment.name,\n          })\n        );\n      });\n  };\n\n  onDescriptionChange = event => {\n    const { description } = this.state;\n    this.setState({\n      description: { ...description, value: event.target.value },\n    });\n  };\n\n  onNameChange = event => {\n    const { name } = this.state;\n    this.setState({\n      name: { ...name, value: event.target.value, notUniqueError: false },\n    });\n  };\n\n  isNameUnique(newSegment) {\n    const { segments } = this.props;\n    const matchingSegments = segments.filter(\n      other =>\n        other.id !== newSegment.id &&\n        other.name.toLowerCase() === newSegment.name.toLowerCase()\n    );\n    return matchingSegments.length === 0;\n  }\n\n  isSubmitButtonDisabled() {\n    const { name, description } = this.state;\n    return (\n      !name.value ||\n      name.notUniqueError ||\n      (name.value === name.originalValue &&\n        description.value === description.originalValue)\n    );\n  }\n\n  static contextType = RequestContext;\n\n  renderButtons = () => {\n    const { closeCreateSegmentModal, t } = this.props;\n    return (\n      <div\n        className=\"btn-container\"\n        style={{ paddingTop: '15px', float: 'right' }}\n      >\n        <Button\n          id=\"segment-form-cancel-link\"\n          onClick={closeCreateSegmentModal}\n          onKeyDown={closeCreateSegmentModal}\n          theme=\"text\"\n        >\n          {t('standard.cancel')}\n        </Button>\n        <Button\n          id=\"segment-form-submit-button\"\n          type=\"submit\"\n          theme=\"primary\"\n          disabled={this.isSubmitButtonDisabled()}\n        >\n          {t('supplierSegment.supplierSegmentForm.saveSegment')}\n        </Button>\n      </div>\n    );\n  };\n\n  renderInfo() {\n    const { segmentToEdit, t } = this.props;\n    if (!segmentToEdit.id) {\n      return '';\n    }\n    return (\n      <small>\n        <em>\n          {t('supplierSegment.supplierSegmentForm.field.info', {\n            createdOn: ` ${new Date(segmentToEdit.dateCreated).toString()} `,\n            createdBy: ` ${segmentToEdit.createdBy}`,\n          })}\n        </em>\n      </small>\n    );\n  }\n\n  render() {\n    const { name, description } = this.state;\n    const { segmentToEdit, t } = this.props;\n    const nameValidationProp = {};\n    if (name.notUniqueError) {\n      nameValidationProp.validationState = 'error';\n    }\n\n    return (\n      <>\n        <h3>\n          {segmentToEdit.id\n            ? t('supplierSegment.supplierSegmentForm.edit.title')\n            : t('supplierSegment.supplierSegmentForm.create.title')}\n        </h3>\n        <form\n          data-testid=\"form\"\n          id=\"segmentForm\"\n          onSubmit={this.createOrUpdateSegment}\n        >\n          <Field {...nameValidationProp}>\n            <FieldLabel htmlFor=\"segment-name\">\n              {t('supplierSegment.supplierSegmentForm.field.name.label')}\n            </FieldLabel>\n            <Text\n              id=\"segment-name\"\n              autoFocus=\"autoFocus\"\n              type=\"text\"\n              maxLength=\"255\"\n              size=\"44\"\n              name=\"name\"\n              placeholder={t(\n                'supplierSegment.supplierSegmentForm.field.name.placeholder'\n              )}\n              value={name.value}\n              onChange={this.onNameChange}\n            />\n            <FieldError>\n              {t('supplierSegment.supplierSegmentForm.field.name.error')}\n            </FieldError>\n          </Field>\n          <Field>\n            <FieldLabel htmlFor=\"segment-desc\">\n              {t('supplierSegment.supplierSegmentForm.field.description')}\n            </FieldLabel>\n            <Textarea\n              id=\"segment-desc\"\n              style={{ resize: 'vertical' }}\n              rows=\"8\"\n              cols=\"45\"\n              maxLength=\"1024\"\n              name=\"description\"\n              value={description.value}\n              onChange={this.onDescriptionChange}\n            />\n          </Field>\n          {this.renderInfo()}\n          {this.renderButtons()}\n        </form>\n      </>\n    );\n  }\n}\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionsCell,\n  Alert,\n  Button,\n  Link,\n  ListView,\n  Modal,\n  toast,\n} from 'taulia-ui';\nimport SegmentForm from './SegmentForm';\nimport {\n  createCsvFileName,\n  createSupplierCsv,\n  downloadCsvFile,\n  userCanEditSuppliers,\n} from '../../Utils/SupplierUtils';\nimport { constructSearchQueryUrl } from '../../Utils/utils';\nimport CONSTANTS from '../../globals';\nimport { RequestContext, UserSettingsContext } from '../../contexts';\n\nconst SegmentsList = ({\n  alerts,\n  clearAlerts,\n  loadSegments,\n  segments,\n  viewDeletedSegments,\n}) => {\n  const initialState = {\n    showCreateModal: false,\n    showDeleteModal: false,\n    deleteSegmentId: null,\n    segmentToEdit: null,\n  };\n\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [state, setState] = useState(initialState);\n  const request = useContext(RequestContext);\n  const { userRoles } = useContext(UserSettingsContext);\n\n  const {\n    deleteSegmentId,\n    segmentToEdit,\n    showCreateModal,\n    showDeleteModal,\n  } = state;\n\n  const addSuppliers = segmentId => {\n    history.push(\n      CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.ADD_SUPPLIERS.replace(\n        ':id',\n        segmentId\n      )\n    );\n  };\n\n  const openCreateEditModal = selectedSegment => {\n    setState({\n      segmentToEdit: selectedSegment,\n      showCreateModal: true,\n    });\n  };\n\n  const confirmDeleteSegment = segmentId => {\n    setState({\n      showDeleteModal: true,\n      deleteSegmentId: segmentId,\n    });\n  };\n\n  const cancelDeleteSegment = () => {\n    setState({\n      showDeleteModal: false,\n      deleteSegmentId: null,\n    });\n  };\n\n  const closeCreateSegmentModal = () => {\n    setState({\n      showCreateModal: false,\n      segmentToEdit: null,\n    });\n  };\n\n  const deleteSegment = () => {\n    const segment = segments.filter(s => s.id === deleteSegmentId);\n    const segmentName = segment[0].name;\n\n    request('DELETE', `/api/segment/${deleteSegmentId}`)\n      .then(() => {\n        setState({\n          deleteSegmentId: null,\n          showDeleteModal: false,\n        });\n        loadSegments();\n        toast.success(\n          t('supplierSegment.supplierSegmentList.segmentWasDeleted', {\n            segmentName,\n          })\n        );\n      })\n      .catch(() => {\n        setState({\n          showDeleteModal: false,\n          deleteSegmentId: null,\n        });\n        toast.error(\n          t('supplierSegment.alert.errorDeletingSegments', { segmentName })\n        );\n      });\n  };\n\n  const downloadToCSV = (id, name) => {\n    const fileName = createCsvFileName(name);\n    request('GET', `/api/segment/${id}/suppliers`).then(res => {\n      downloadCsvFile(fileName, createSupplierCsv(res.body.suppliers));\n    });\n  };\n\n  const getActionsCellActions = data => {\n    if (!userCanEditSuppliers(userRoles)) {\n      return [];\n    }\n    const items = [\n      {\n        action: () => openCreateEditModal(data),\n        label: t('standard.edit'),\n      },\n      {\n        action: () => addSuppliers(data.id),\n        label: t('supplierSegment.supplierSegmentList.addSuppliers'),\n      },\n      {\n        action: () => confirmDeleteSegment(data.id),\n        label: t(t('standard.delete')),\n      },\n    ];\n    if (data.numSuppliers > 0) {\n      items.push({\n        action: () => downloadToCSV(data.id, data.name),\n        label: t('supplierSegment.segmentAddSupplierForm.downloadToCsv'),\n      });\n    }\n    return items;\n  };\n\n  const linkedCell = ({ id, value }) => (\n    <Link to={constructSearchQueryUrl('segments', [id])}>{value}</Link>\n  );\n\n  const getFieldsConfig = () => {\n    return [\n      {\n        key: 'name',\n        label: t('supplierSegment.supplierSegmentList.name'),\n        type: 'TEXT',\n        width: 350,\n        cell: linkedCell,\n      },\n      {\n        key: 'description',\n        label: t('supplierSegment.supplierSegmentList.description'),\n        type: 'TEXT',\n        width: 350,\n      },\n      {\n        key: 'createdBy',\n        label: t('supplierSegment.supplierSegmentList.createdBy'),\n        type: 'TEXT',\n        width: 250,\n      },\n      {\n        key: 'numSuppliers',\n        label: t('bulkInvites.supplierSummary.suppliers.title'),\n        type: 'NUMBER',\n        align: 'center',\n        width: 150,\n      },\n      {\n        key: 'actions',\n        label: '',\n        type: 'TEXT',\n        width: 150,\n        // eslint-disable-next-line react/prop-types\n        cell: ({ object }) => {\n          return <ActionsCell items={getActionsCellActions(object)} />;\n        },\n      },\n    ];\n  };\n\n  const renderAlert = () => {\n    if (!alerts || alerts.length === 0) {\n      return null;\n    }\n\n    const alertItems = alerts.map(alert => (\n      <div key={alert.text} style={{ paddingTop: '5px', paddingButton: '5px' }}>\n        <Alert theme={alert.theme}>\n          <p>{alert.text}</p>\n          {alert.comp}\n        </Alert>\n      </div>\n    ));\n    setTimeout(() => clearAlerts(), 15000);\n    return <div className=\"alerts\">{alertItems}</div>;\n  };\n\n  const renderCreateEditModal = () => (\n    <Modal\n      open={showCreateModal}\n      width={600}\n      onRequestClose={closeCreateSegmentModal}\n    >\n      <div id=\"createModal\" style={{ padding: '15px' }}>\n        <SegmentForm\n          cancelAction={closeCreateSegmentModal}\n          closeCreateSegmentModal={closeCreateSegmentModal}\n          loadSegments={loadSegments}\n          request={request}\n          segmentToEdit={segmentToEdit || undefined}\n          segments={segments}\n          t={t}\n        />\n      </div>\n    </Modal>\n  );\n\n  const renderConfirmDeleteModal = () => {\n    return (\n      <Modal\n        open={showDeleteModal}\n        width={400}\n        onRequestClose={cancelDeleteSegment}\n      >\n        <div id=\"deleteModal\" style={{ padding: '15px' }}>\n          <h3>{t('supplierSegment.supplierSegmentList.modal.title')}</h3>\n          <p>{t('supplierSegment.supplierSegmentList.modal.info')}</p>\n        </div>\n        <div style={{ float: 'right' }}>\n          <Button\n            theme=\"text\"\n            onKeyDown={cancelDeleteSegment}\n            onClick={cancelDeleteSegment}\n          >\n            {t('standard.cancel')}\n          </Button>\n          <Button\n            data-testid=\"delete-segment-button\"\n            onClick={deleteSegment}\n            theme=\"primary\"\n          >\n            {t('standard.delete')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const fieldsConfig = getFieldsConfig();\n  const data = segments;\n\n  return (\n    <div className=\"supplier-segment\">\n      {renderAlert()}\n      <p>{t('supplierSegment.supplierSegmentList.overview')}</p>\n      {userCanEditSuppliers(userRoles) && (\n        <div style={{ margin: '10px 0' }} id=\"createSegmentButton\">\n          <Button\n            theme=\"primary\"\n            onClick={() => setState({ showCreateModal: true })}\n          >\n            {t('supplierSegment.supplierSegmentList.createSegment')}\n          </Button>\n        </div>\n      )}\n      <ListView\n        columns={fieldsConfig}\n        data={data}\n        id=\"segmentListView\"\n        isResizable={false}\n        noResultsText={\n          <p>{t('supplierSegment.supplierSegmentList.emptyResults')}</p>\n        }\n        showColumnConfig={false}\n        showCount={false}\n        showDataLength={false}\n      />\n      <Button\n        id=\"viewDeletedSegmentsLink\"\n        onClick={viewDeletedSegments}\n        style={{ marginTop: '10px' }}\n        theme=\"text\"\n      >\n        {t('supplierSegment.supplierSegmentList.viewDeletedSegments')}\n      </Button>\n      {renderConfirmDeleteModal()}\n      {renderCreateEditModal()}\n    </div>\n  );\n};\n\nexport default SegmentsList;\n\nSegmentsList.propTypes = {\n  alerts: PropTypes.arrayOf(PropTypes.shape()),\n  clearAlerts: PropTypes.func,\n  loadSegments: PropTypes.func,\n  segments: PropTypes.arrayOf(PropTypes.shape()),\n  viewDeletedSegments: PropTypes.func,\n};\n\nSegmentsList.defaultProps = {\n  alerts: [],\n  clearAlerts: null,\n  loadSegments: null,\n  segments: [],\n  viewDeletedSegments: null,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  Button,\n  Field,\n  FieldLabel,\n  FileUpload,\n  FieldErrorMap,\n  Progress,\n  Select,\n  Tabs,\n  Textarea,\n  Tooltip,\n} from 'taulia-ui';\nimport { Trans, withTranslation } from 'react-i18next';\nimport {\n  downloadSampleSupplierInviteList,\n  parseStringToArray,\n} from '../../Utils/utils';\nimport { RequestContext } from '../../contexts';\n\nclass AddSupplierForm extends Component {\n  static propTypes = {\n    addSupplierResultsCallback: PropTypes.func,\n    erpClients: PropTypes.arrayOf(PropTypes.shape()),\n    params: PropTypes.shape(),\n    segments: PropTypes.arrayOf(PropTypes.shape()),\n    t: PropTypes.func.isRequired,\n    viewSegments: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    addSupplierResultsCallback: () => null,\n    erpClients: [],\n    params: {},\n    segments: [],\n  };\n\n  state = {\n    activeTab: 'upload',\n    erpClientId: false,\n    file: null,\n    supplierNumbers: { value: '', error: null },\n    upload: { value: null, error: null },\n    loading: false,\n    previewOnly: false,\n    replaceExistingAssociations: false,\n    associationSummary: {\n      countNewAssociations: 0,\n      countExistingAssociations: 0,\n      suppliersMissingDetails: [],\n    },\n    defaultAssociationSummary: {\n      countNewAssociations: 0,\n      countExistingAssociations: 0,\n      suppliersMissingDetails: [],\n    },\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { activeTab } = this.state;\n\n    if (activeTab === 'upload') {\n      this.onUploadSubmit();\n    } else {\n      this.onInputSubmit();\n    }\n  };\n\n  onSupplierNumberInputChange = event => {\n    const { supplierNumbers, defaultAssociationSummary } = this.state;\n    this.setState({\n      supplierNumbers: { ...supplierNumbers, value: event.target.value },\n      associationSummary: defaultAssociationSummary,\n    });\n  };\n\n  onSupplierNumberInputBlur = () => {\n    const { supplierNumbers } = this.state;\n\n    if (this.isMultiErp()) {\n      this.setState({\n        supplierNumbers: {\n          ...supplierNumbers,\n          value: parseStringToArray(supplierNumbers.value).join(', '),\n        },\n      });\n      return;\n    }\n\n    this.setState(\n      {\n        supplierNumbers: {\n          ...supplierNumbers,\n          value: parseStringToArray(supplierNumbers.value).join(', '),\n        },\n        previewOnly: true,\n        loading: true,\n      },\n      this.onInputSubmit\n    );\n  };\n\n  onUploadChange = file => {\n    const { defaultAssociationSummary } = this.state;\n\n    if (this.isMultiErp()) {\n      this.setState({\n        file,\n        upload: { value: file.name, error: null },\n        associationSummary: defaultAssociationSummary,\n      });\n      return;\n    }\n\n    this.setState(\n      {\n        file,\n        upload: { value: file.name, error: null },\n        previewOnly: true,\n        loading: true,\n        associationSummary: defaultAssociationSummary,\n      },\n      this.onUploadSubmit\n    );\n  };\n\n  onUploadSubmit = () => {\n    const {\n      erpClientId,\n      file,\n      previewOnly,\n      replaceExistingAssociations,\n      upload,\n    } = this.state;\n    const { params } = this.props;\n    const request = this.context;\n\n    this.setState({ loading: true }, () => {\n      const data = new FormData();\n      data.append('file', file);\n      data.append('segmentId', params.id);\n      data.append('previewOnly', previewOnly);\n      data.append('replaceExistingAssociations', replaceExistingAssociations);\n\n      if (erpClientId) {\n        data.append('erpClientId', erpClientId);\n      }\n\n      request('POST', '/api/segment/associateSuppliersUpload')\n        .send(data)\n        .then(res => this.addSuppliersToSegmentCompleted(res))\n        .catch(err => {\n          console.error('[associateSuppliersUpload]', err); // eslint-disable-line no-console\n          this.setState({\n            upload: {\n              value: upload.value,\n              error: err.response.body.code,\n            },\n            loading: false,\n          });\n        });\n    });\n  };\n\n  onInputSubmit = () => {\n    const {\n      erpClientId,\n      previewOnly,\n      replaceExistingAssociations,\n      supplierNumbers,\n    } = this.state;\n\n    const { params } = this.props;\n    const request = this.context;\n\n    const data = {\n      segmentId: params.id,\n      supplierNumbers: parseStringToArray(supplierNumbers.value),\n      previewOnly,\n      replaceExistingAssociations,\n    };\n\n    if (erpClientId) {\n      data.erpClientId = erpClientId;\n    }\n\n    this.setState({ loading: true }, () => {\n      request('POST', '/api/segment/associateSuppliers')\n        .send(data)\n        .then(res => this.addSuppliersToSegmentCompleted(res))\n        .catch(err => {\n          console.error('[associateSuppliers]', err); // eslint-disable-line no-console\n          this.setState({\n            previewOnly: false,\n            loading: false,\n            supplierNumbers: {\n              value: supplierNumbers.value,\n              error: err.response.body.code,\n            },\n          });\n        });\n    });\n  };\n\n  onTabChange = activeTab => {\n    const { defaultAssociationSummary } = this.state;\n    this.setState({\n      activeTab,\n      associationSummary: defaultAssociationSummary,\n    });\n  };\n\n  updateReplaceExistingAssociations = () => {\n    const { replaceExistingAssociations } = this.state;\n    this.setState({\n      replaceExistingAssociations: !replaceExistingAssociations,\n    });\n  };\n\n  addSuppliersToSegmentCompleted = res => {\n    const { addSupplierResultsCallback } = this.props;\n    const { associationSummary, supplierSegment } = res.body;\n\n    this.setState({\n      associationSummary,\n      loading: false,\n      previewOnly: false,\n    });\n\n    if (!supplierSegment.previewOnly) {\n      addSupplierResultsCallback(res.body);\n    }\n  };\n\n  static contextType = RequestContext;\n\n  isMultiErp() {\n    const { erpClients } = this.props;\n    return erpClients.length > 1;\n  }\n\n  isSubmitButtonDisabled() {\n    const {\n      supplierNumbers,\n      erpClientId,\n      upload,\n      associationSummary,\n    } = this.state;\n    const {\n      countNewAssociations,\n      countExistingAssociations,\n    } = associationSummary;\n    return (\n      (!supplierNumbers.value && !upload.value) ||\n      (!erpClientId && this.isMultiErp()) ||\n      (this.isMultiErp() === false &&\n        countNewAssociations === 0 &&\n        countExistingAssociations === 0)\n    );\n  }\n\n  renderPreviewResultsSummary() {\n    const { associationSummary } = this.state;\n    const { t } = this.props;\n    const {\n      countNewAssociations,\n      countExistingAssociations,\n      suppliersMissingDetails,\n    } = associationSummary;\n\n    let missingSupplierDetails;\n\n    if (suppliersMissingDetails.length) {\n      missingSupplierDetails = (\n        <Tooltip theme=\"light\" align=\"center\">\n          <span data-testid=\"missing-details-tooltip\">\n            {t('supplierSegment.supplierSegmentList.viewNotFoundSuppliers')}\n          </span>\n          <div>{suppliersMissingDetails.join(', ')}</div>\n        </Tooltip>\n      );\n    } else {\n      missingSupplierDetails = (\n        <Button theme=\"text\" disabled>\n          {t('supplierSegment.supplierSegmentList.viewNotFoundSuppliers')}\n        </Button>\n      );\n    }\n\n    const resultsSummary = (\n      <div className=\"supplier-segment\">\n        <div className=\"results-summary-container\">\n          <table id=\"resultsSummary\" className=\"add-supplier-summary\">\n            <thead>\n              <tr className=\"header\">\n                <td colSpan=\"3\">\n                  <div>\n                    {t(\n                      'supplierSegment.segmentAddSupplierForm.supplierSummary'\n                    )}\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td className=\"label\">\n                  {t('supplierSegment.segmentAddSupplierForm.newAdditions')}\n                  &#58;\n                </td>\n                <td>{countNewAssociations}</td>\n                <td>{null}</td>\n              </tr>\n              <tr>\n                <td className=\"label\">\n                  {t('supplierSegment.segmentAddSupplierForm.alreadyInSegment')}\n                  &#58;\n                </td>\n                <td>{countExistingAssociations}</td>\n                <td>{null}</td>\n              </tr>\n              <tr>\n                <td className=\"label\">\n                  {t('supplierSegment.segmentAddSupplierForm.notFound')}\n                  &#58;\n                </td>\n                <td>{suppliersMissingDetails.length}</td>\n                <td>{missingSupplierDetails}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n\n    return resultsSummary;\n  }\n\n  renderCheckboxItems() {\n    const { replaceExistingAssociations } = this.state;\n    const { t } = this.props;\n\n    return (\n      <div style={{ paddingTop: '15px' }}>\n        <Field>\n          <Checkbox\n            data-testid=\"replace-existing-associations-checkbox\"\n            defaultChecked={replaceExistingAssociations === true}\n            id=\"replace_existing_associations\"\n            name=\"replaceExistingAssociations\"\n            onChange={this.updateReplaceExistingAssociations}\n          >\n            <strong>\n              {t('supplierSegment.segmentAddSupplierForm.clearBeforeAdding')}\n            </strong>\n            <div className=\"padding\">\n              {t(\n                'supplierSegment.segmentAddSupplierForm.replaceSuppliersWarning'\n              )}\n            </div>\n          </Checkbox>\n        </Field>\n      </div>\n    );\n  }\n\n  renderErpClients() {\n    const { erpClientId } = this.state;\n    const { erpClients, t } = this.props;\n    const erpOptions = erpClients.map(client => ({\n      value: client.clientId,\n      label: client.longDescription,\n    }));\n    return (\n      <div style={{ marginBottom: '20px' }}>\n        <FieldLabel htmlFor=\"erp-client\">\n          {t('supplierSegment.segmentAddSupplierForm.erpSystem')}\n        </FieldLabel>\n        <Select\n          id=\"erp-client\"\n          multiple={false}\n          noSearchResultsLabel={t(\n            'bulkInvites.searchPage.noSearchResultsLabel'\n          )}\n          onChange={id =>\n            this.setState({\n              erpClientId: id,\n            })\n          }\n          options={erpOptions}\n          placeholder={t(\n            'supplierSegment.segmentAddSupplierForm.selectErpSystem'\n          )}\n          searchPlaceholder={t('bulkInvites.searchPage.searchPlaceholder')}\n          value={erpClientId}\n        />\n      </div>\n    );\n  }\n\n  renderFormContent() {\n    const {\n      activeTab,\n      defaultAssociationSummary,\n      supplierNumbers,\n      upload,\n    } = this.state;\n    const { t } = this.props;\n\n    const tabData = ['upload', 'input'].map(tab => ({\n      active: tab === activeTab,\n      callback: () =>\n        this.setState({\n          activeTab: tab,\n          associationSummary: defaultAssociationSummary,\n        }),\n      label: t(`bulkInvites.individualPage.options.${tab}.link`),\n    }));\n\n    return (\n      <div>\n        <Tabs data={tabData} />\n        {activeTab === 'upload' && (\n          <div style={{ display: 'flex' }}>\n            <div className=\"supplier-numbers\">\n              {this.isMultiErp() && this.renderErpClients()}\n              <Field validationState={upload.error ? 'error' : null}>\n                <FieldLabel htmlFor=\"file-upload\">\n                  {t('supplierSegment.segmentAddSupplierForm.selectCsvFile')}\n                </FieldLabel>\n                <FileUpload\n                  acceptedFileTypes={['.csv']}\n                  onChange={this.onUploadChange}\n                />\n                <FieldErrorMap code={upload.error}>\n                  <span key=\"invalidType\">\n                    {t(\n                      'bulkInvites.individualPage.options.upload.error.invalidType'\n                    )}\n                  </span>\n                  {t(\n                    'bulkInvites.individualPage.options.upload.error.noContent'\n                  )}\n                </FieldErrorMap>\n                <p className=\"padding\">\n                  <Trans\n                    values={{\n                      hereLink: t(\n                        'bulkInvites.individualPage.options.upload.infoLink'\n                      ),\n                    }}\n                    i18nKey=\"bulkInvites.individualPage.options.upload.info\"\n                    components={[\n                      <Button\n                        style={{ display: 'inline-block' }}\n                        theme=\"text\"\n                        onClick={downloadSampleSupplierInviteList}\n                      />,\n                    ]}\n                  />\n                </p>\n              </Field>\n            </div>\n            <div>\n              {!this.isMultiErp() && this.renderPreviewResultsSummary()}\n            </div>\n          </div>\n        )}\n        {activeTab === 'input' && (\n          <div style={{ display: 'flex' }}>\n            <div className=\"supplier-numbers\">\n              {this.isMultiErp() && this.renderErpClients()}\n              <Field>\n                <FieldLabel htmlFor=\"textInput\">\n                  {t(\n                    'supplierSegment.segmentAddSupplierForm.copyPasteSupplierNumbers'\n                  )}\n                </FieldLabel>\n                <Textarea\n                  id=\"textInput\"\n                  style={{ resize: 'vertical' }}\n                  rows=\"8\"\n                  cols=\"45\"\n                  maxLength=\"1024\"\n                  name=\"supplierNumbers\"\n                  value={supplierNumbers.value}\n                  onChange={this.onSupplierNumberInputChange}\n                  onBlur={this.onSupplierNumberInputBlur}\n                />\n              </Field>\n            </div>\n            <div>\n              {!this.isMultiErp() && this.renderPreviewResultsSummary()}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderForm() {\n    const { t, viewSegments } = this.props;\n    return (\n      <div>\n        <form id=\"addSupplierForm\" onSubmit={this.onSubmit}>\n          {this.renderFormContent()}\n          <div>\n            {this.renderCheckboxItems()}\n            <div style={{ float: 'right' }}>\n              <Button\n                id=\"add-suppliers-form-cancel-button\"\n                onClick={viewSegments}\n                theme=\"text\"\n              >\n                {t('standard.cancel')}\n              </Button>\n              <Button\n                id=\"add-suppliers-form-submit-button\"\n                type=\"submit\"\n                theme=\"primary\"\n                disabled={this.isSubmitButtonDisabled()}\n              >\n                {t('supplierSegment.supplierSegmentList.addSuppliers')}\n              </Button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    const { loading } = this.state;\n    const { params, segments, t } = this.props;\n    const segmentName =\n      segments.length &&\n      segments.filter(segment => segment.id === params.id)[0].name;\n    return (\n      <div className=\"supplier-segment\">\n        {loading && <Progress />}\n        <h3>\n          {t('supplierSegment.segmentAddSupplierForm.addSuppliersToSegment', {\n            segmentName,\n          })}\n        </h3>\n        <p style={{ marginBottom: '10px' }}>\n          {t('supplierSegment.segmentAddSupplierForm.supplierFormSummary')}\n        </p>\n        <div className=\"form-summary-container\">{this.renderForm()}</div>\n      </div>\n    );\n  }\n}\nexport default withTranslation()(AddSupplierForm);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Route, useLocation, useHistory, useParams } from 'react-router-dom';\nimport { Button, Progress, Tooltip } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport CONSTANTS from '../../globals';\nimport DeletedSegmentList from './DeletedSegmentList';\nimport SegmentList from './SegmentList';\nimport AddSupplierForm from './AddSupplierForm';\nimport { RequestContext } from '../../contexts';\n\nconst SegmentContainer = props => {\n  const location = useLocation();\n  const params = useParams();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n\n  const [segments, setSegments] = useState([]);\n  const [deletedSegments, setDeletedSegments] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getSegments = () => {\n    request('GET', '/api/segments?includeSupplierCounts=true')\n      .then(res => {\n        setSegments(res.body.segments);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setAlerts([\n          {\n            theme: 'danger',\n            text: t('supplierSegment.alert.errorLoadingSegments'),\n          },\n        ]);\n      });\n  };\n\n  const getDeletedArchivedSegments = archivedSegments => {\n    return archivedSegments.map(archivedSegment => {\n      const { segment } = archivedSegment;\n      segment.dateArchived = archivedSegment.dateArchived;\n      return segment;\n    });\n  };\n\n  const getDeletedSegments = () =>\n    request('GET', '/api/archivedSegments')\n      .then(res => {\n        setDeletedSegments(\n          getDeletedArchivedSegments(res.body.archivedSegments)\n        );\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setAlerts([\n          {\n            theme: 'danger',\n            text: t('supplierSegment.alert.errorLoadingSegments'),\n          },\n        ]);\n      });\n\n  useEffect(() => {\n    setLoading(true);\n    if (\n      location.pathname === CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST_DELETED\n    ) {\n      getDeletedSegments();\n    } else {\n      getSegments();\n    }\n  }, [location]);\n\n  const setAlertsViewSegments = segmentAlerts => {\n    setAlerts(segmentAlerts);\n    history.push(CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST);\n  };\n\n  const clearAlerts = () => {\n    setAlerts([]);\n  };\n\n  const viewSegments = () => {\n    if (!segments.length) {\n      getSegments();\n    }\n    history.push(CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST);\n  };\n\n  const viewDeletedSegments = () => {\n    getDeletedSegments();\n    history.push(CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST_DELETED);\n  };\n\n  const addSupplierResultsCallback = resultsData => {\n    const { associationSummary, supplierSegment } = resultsData;\n\n    const segment = segments.filter(\n      item => item.id === supplierSegment.segmentId\n    )[0];\n\n    const segmentAlerts = [];\n    const supplierCount = associationSummary.countNewAssociations;\n\n    if (associationSummary.countNewAssociations > 0) {\n      segmentAlerts.push({\n        theme: 'success',\n        text: t('supplierSegment.alert.suppliersAddedToSegment', {\n          supplierCount,\n          segmentName: segment.name,\n        }),\n      });\n    }\n\n    if (associationSummary.countExistingAssociations > 0) {\n      segmentAlerts.push({\n        theme: 'warn',\n        text: t('supplierSegment.alert.suppliersAlreadyInSegment', {\n          supplierCount,\n          segmentName: segment.name,\n        }),\n      });\n    }\n\n    if (associationSummary.suppliersMissingDetails.length > 0) {\n      const comp =\n        associationSummary.suppliersMissingDetails.length > 1 ? (\n          <div>\n            <Tooltip theme=\"light\" align=\"left\">\n              <Button theme=\"text\">\n                {t('supplierSegment.supplierSegmentList.viewNotFoundSuppliers')}\n              </Button>\n              <div>{associationSummary.suppliersMissingDetails.join(', ')}</div>\n            </Tooltip>\n          </div>\n        ) : (\n          undefined\n        );\n\n      const text = t('supplierSegment.alert.suppliersNotFound', {\n        supplierCount,\n        segmentName: segment.name,\n      });\n\n      segmentAlerts.push({\n        theme: 'danger',\n        text,\n        comp,\n      });\n    }\n\n    setAlertsViewSegments(segmentAlerts);\n  };\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  const childProps = {\n    ...props,\n    alerts,\n    deletedSegments,\n    segments,\n    addSupplierResultsCallback,\n    clearAlerts,\n    loadSegments: getSegments,\n    viewDeletedSegments,\n    viewSegments,\n  };\n\n  return (\n    <>\n      <Route\n        path={CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.ADD_SUPPLIERS}\n        render={() => {\n          return <AddSupplierForm params={params} {...childProps} />;\n        }}\n      />\n      <Route\n        path={CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST_DELETED}\n        render={() => {\n          return <DeletedSegmentList {...childProps} />;\n        }}\n      />\n      <Route\n        exact\n        path={CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST}\n        render={routeProps => {\n          return <SegmentList {...routeProps} {...childProps} />;\n        }}\n      />\n    </>\n  );\n};\n\nexport default SegmentContainer;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, ListView, StatusIndicator } from 'taulia-ui';\nimport {\n  localizeDate,\n  localizeNumber,\n  localizeTime,\n} from '../../Utils/localizeUtils';\nimport { downloadBlob, genericErrorToast } from '../../Utils/utils';\nimport { RequestContext, UserSettingsContext } from '../../contexts';\n\nconst Exports = () => {\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n  const { userId } = useContext(UserSettingsContext);\n  const [documentData, setDocumentData] = useState([]);\n  const [paginationData, setPaginationData] = useState({\n    page: 0,\n    maxPerPage: 10,\n    totalResults: 0,\n  });\n\n  let pollDelay = 500;\n\n  const getDocuments = (currentPage = 0, pageSize = 10) => {\n    request('GET', `/api/document/export/user/${userId}`)\n      .query({\n        includeTotal: true,\n        maxPerPage: pageSize,\n        page: currentPage,\n      })\n      .then(res => {\n        if (res.body?.success) {\n          const { documentExports, maxPerPage, page, totalResults } = res.body;\n          setDocumentData(documentExports);\n          setPaginationData({ maxPerPage, page, totalResults });\n          const isPending = documentExports.some(\n            doc => doc.status === 'PENDING'\n          );\n          if (isPending) {\n            setTimeout(() => getDocuments(currentPage, pageSize), pollDelay);\n            pollDelay *= 2;\n          }\n        }\n      })\n      .catch(genericErrorToast);\n  };\n\n  useEffect(() => {\n    getDocuments();\n  }, []);\n\n  const onPageChange = (page, pageSize) => {\n    getDocuments(page, pageSize);\n    setPaginationData({ ...paginationData, maxPerPage: pageSize, page });\n  };\n\n  const statusIndicator = status => {\n    const statusColorMap = {\n      PENDING: 'yellow',\n      SUCCESS: 'green',\n      FAILED: 'red',\n    };\n    return (\n      <StatusIndicator color={statusColorMap[status]}>\n        {t(`documentExports.${status}`)}\n      </StatusIndicator>\n    );\n  };\n\n  const downloadFile = (id, dateCreated, recordType) => {\n    request('GET', `/api/document/export/attachmentId/${id}`)\n      .then(res => {\n        const resultsToDownload = new Blob([res.text], {\n          type: 'text/csv;charset=utf-8',\n        });\n        const translatedType = t(\n          `documentExports.${recordType.toLowerCase()}Export`\n        );\n        const localizedDate = localizeDate(dateCreated);\n        downloadBlob(\n          resultsToDownload,\n          `${translatedType} \n          ${localizedDate}.csv`\n        );\n      })\n      .catch(genericErrorToast);\n  };\n\n  const columns = [\n    {\n      key: 'file',\n      label: t('documentExports.file'),\n      type: 'TEXT',\n      cell: data => {\n        const { recordType, dateCreated, fileType } = data.object;\n        const date = localizeDate(dateCreated);\n        const time = localizeTime(dateCreated);\n        return (\n          <div className=\"table-group\">\n            <span>\n              {t(`documentExports.${recordType.toLowerCase()}Export`)}\n            </span>\n            <span>\n              {t('documentExports.exportedToOn', {\n                date,\n                fileType,\n                time,\n              })}\n            </span>\n          </div>\n        );\n      },\n      width: 400,\n    },\n    {\n      key: 'status',\n      label: t('fields.status'),\n      type: 'TEXT',\n      cell: data => statusIndicator(data.object.status),\n    },\n    {\n      key: 'recordsExported',\n      label: t('documentExports.recordsExported'),\n      type: 'TEXT',\n      width: 400,\n      cell: data => {\n        const { recordCount, recordType } = data.object;\n        return (\n          <div className=\"table-group\">\n            <span>{localizeNumber(recordCount)}</span>\n            <span>\n              {t(`documentExports.${recordType.toLowerCase()}`, {\n                count: recordCount,\n              })}\n            </span>\n          </div>\n        );\n      },\n    },\n    {\n      key: 'actions',\n      label: '',\n      cell: data => {\n        const { attachmentId, dateCreated, recordType } = data.object;\n        if (attachmentId) {\n          return (\n            <Button\n              onClick={() =>\n                downloadFile(attachmentId, dateCreated, recordType)\n              }\n            >\n              {t('documentExports.downloadFile')}\n            </Button>\n          );\n        }\n        return null;\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <h1>{t('nav.buyer_area.documents.exports')}</h1>\n      <ListView\n        columns={columns}\n        data={documentData}\n        isResizable\n        noResultsText={<p>{t('documentExports.noDocuments')}</p>}\n        onPageChange={onPageChange}\n        page={paginationData?.page}\n        pageSize={paginationData?.maxPerPage}\n        paginationEnabled={!!paginationData}\n        showColumnConfig={false}\n        showCount\n        totalCount={paginationData?.totalResults}\n      />\n    </div>\n  );\n};\n\nexport default Exports;\n","import React, { useState } from 'react';\nimport { Button, Radio } from 'taulia-ui';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport CONSTANTS from '../../globals';\n\nconst StartPage = () => {\n  const { t } = useTranslation();\n  const [type, setType] = useState(null);\n  const history = useHistory();\n\n  return (\n    <div>\n      <h1>{t('bulkInvites.title')}</h1>\n      <h3>{t('bulkInvites.startPage.title')}</h3>\n      <p>{t('bulkInvites.startPage.text')}</p>\n      <div className=\"type-pickers\">\n        <Radio\n          checked={type === CONSTANTS.SUPPLIERS.BULK_INVITES.INDIVIDUAL}\n          data-testid=\"individual-radio\"\n          name=\"type\"\n          onChange={() => setType(CONSTANTS.SUPPLIERS.BULK_INVITES.INDIVIDUAL)}\n          value={CONSTANTS.SUPPLIERS.BULK_INVITES.INDIVIDUAL}\n        >\n          <p className=\"title\">\n            {t('bulkInvites.startPage.typePickers.individual.title')}\n          </p>\n          <p>{t('bulkInvites.startPage.typePickers.individual.text')}</p>\n        </Radio>\n        <Radio\n          checked={type === CONSTANTS.SUPPLIERS.BULK_INVITES.SEARCH}\n          data-testid=\"attribute-radio\"\n          name=\"type\"\n          onChange={() => setType(CONSTANTS.SUPPLIERS.BULK_INVITES.SEARCH)}\n          value={CONSTANTS.SUPPLIERS.BULK_INVITES.SEARCH}\n        >\n          <p className=\"title\">\n            {t('bulkInvites.startPage.typePickers.search.title')}\n          </p>\n          <p>{t('bulkInvites.startPage.typePickers.search.text')}</p>\n        </Radio>\n      </div>\n      <div className=\"submit\">\n        <Button\n          theme=\"primary\"\n          onClick={() => history.push(type)}\n          disabled={!type}\n        >\n          {t('bulkInvites.startPage.submit')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default StartPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport {\n  Button,\n  Field,\n  FieldLabel,\n  FieldErrorMap,\n  FileUpload,\n  Link,\n  Progress,\n  Tabs,\n  Textarea,\n} from 'taulia-ui';\nimport { withTranslation, Trans } from 'react-i18next';\nimport SupplierSummary from './SupplierSummary';\nimport CONSTANTS from '../../globals';\nimport {\n  parseInput,\n  downloadSampleSupplierInviteList,\n} from '../../Utils/utils';\nimport { BulkInvitesContext } from '../../contexts';\n\nclass BulkInvitesIndividualPage extends React.Component {\n  state = {\n    file: null,\n    input: { value: '' },\n    loading: true,\n    option: 'upload',\n    upload: { value: null, error: null },\n  };\n\n  static propTypes = {\n    request: PropTypes.func,\n    t: PropTypes.func,\n    history: PropTypes.shape().isRequired,\n  };\n\n  static defaultProps = {\n    request: null,\n    t: null,\n  };\n\n  componentDidMount() {\n    const { request } = this.props;\n    request('GET', '/api/bulkInvites/criteria')\n      .then(res => {\n        const { criteria } = res.body;\n        if (criteria && criteria.supplierNumbers) {\n          const value = parseInput(criteria.supplierNumbers).join(', ');\n          this.setState(\n            {\n              loading: false,\n              input: { value },\n              option: value ? 'input' : 'upload',\n            },\n            this.fetchSummaryInitial\n          );\n        } else {\n          this.setState({ loading: false });\n        }\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onUploadChange = file => {\n    this.setState({\n      file,\n      loading: false,\n      upload: { value: file.name, error: null },\n    });\n  };\n\n  onUploadSubmit = event => {\n    const { request } = this.props;\n    const { file, upload } = this.state;\n    event.preventDefault();\n    this.setState({ loading: true }, () => {\n      const data = new FormData();\n      data.append('file', file);\n      request('POST', '/api/bulkInvites/criteria/supplierNumbersUpload')\n        .send(data)\n        .then(() => this.navigateToNext())\n        .catch(err => {\n          this.setState({\n            upload: {\n              value: upload.value,\n              error: err.response.body.code,\n            },\n            loading: false,\n          });\n        });\n    });\n  };\n\n  onInputChange = event => {\n    this.setState({\n      input: { value: event.target.value },\n      loading: false,\n    });\n  };\n\n  onInputBlur = () => {\n    const { input } = this.state;\n    this.setState(\n      {\n        input: { value: parseInput(input.value).join(', ') },\n      },\n      this.fetchSummary\n    );\n  };\n\n  onInputSubmit = event => {\n    const { request } = this.props;\n    const { input } = this.state;\n    event.preventDefault();\n    this.setState({ loading: true }, () => {\n      request('POST', '/api/bulkInvites/criteria')\n        .send({ supplierNumbers: parseInput(input.value) })\n        .then(() => this.navigateToNext())\n        .catch(() => this.navigateToNext());\n    });\n  };\n\n  fetchSummaryInitial = () => {\n    const { input } = this.state;\n    if (input.value.length > 0) {\n      this.fetchSummary();\n    }\n  };\n\n  fetchSummary = () => {\n    const { fetchSummary } = this.context;\n    const { input } = this.state;\n\n    fetchSummary({\n      supplierNumbers: parseInput(input.value),\n    });\n  };\n\n  navigateToNext = () => {\n    const { history } = this.props;\n    history.push(CONSTANTS.SUPPLIERS.BULK_INVITES.REVIEW);\n  };\n\n  static contextType = BulkInvitesContext;\n\n  renderSubmit = () => {\n    const { t } = this.props;\n    const { input, option, upload } = this.state;\n    const selectedOption = option === 'input' ? input : upload;\n    const disabled = isEmpty(selectedOption.value) || selectedOption.error;\n    return (\n      <div className=\"invites-button-container\">\n        <Link to={CONSTANTS.SUPPLIERS.BULK_INVITES.START}>\n          &lt;&nbsp;\n          {t('bulkInvites.individualPage.back')}\n        </Link>\n        <Button type=\"submit\" theme=\"primary\" disabled={disabled}>\n          {t('bulkInvites.individualPage.submit')}\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    const { summary } = this.context;\n    const { t } = this.props;\n    const { file, input, loading, option, upload } = this.state;\n\n    const tabData = ['upload', 'input'].map(tab => ({\n      active: tab === option,\n      callback: () => this.setState({ option: tab }),\n      label: t(`bulkInvites.individualPage.options.${tab}.link`),\n    }));\n\n    if (loading) {\n      return <Progress />;\n    }\n\n    return (\n      <div className=\"individual-page\">\n        <h1>{t('bulkInvites.title')}</h1>\n        <h3>{t('bulkInvites.individualPage.title')}</h3>\n        <p>{t('bulkInvites.individualPage.text')}</p>\n        <Tabs data={tabData} />\n        {option === 'upload' && (\n          <form className=\"page-form\" onSubmit={this.onUploadSubmit}>\n            <div className=\"form-content option-upload\">\n              <Field validationState={upload.error ? 'error' : null}>\n                <FieldLabel htmlFor=\"file-upload\">\n                  {t('bulkInvites.individualPage.options.upload.label')}\n                </FieldLabel>\n                <FileUpload\n                  acceptedFileTypes={['.csv', '.xls', '.xlsx']}\n                  file={file}\n                  onChange={this.onUploadChange}\n                />\n                <FieldErrorMap code={upload.error}>\n                  <span key=\"invalidType\">\n                    {t(\n                      'bulkInvites.individualPage.options.upload.error.invalidType'\n                    )}\n                  </span>\n                  {t(\n                    'bulkInvites.individualPage.options.upload.error.noContent'\n                  )}\n                </FieldErrorMap>\n                <p>\n                  <Trans\n                    i18nKey=\"bulkInvites.individualPage.options.upload.info\"\n                    components={[\n                      <Button\n                        style={{ display: 'inline-block' }}\n                        theme=\"text\"\n                        onClick={downloadSampleSupplierInviteList}\n                      />,\n                    ]}\n                  />\n                </p>\n              </Field>\n            </div>\n            {this.renderSubmit()}\n          </form>\n        )}\n        {option === 'input' && (\n          <form className=\"page-form\" onSubmit={this.onInputSubmit}>\n            <div className=\"summary-container\">\n              <Field>\n                <FieldLabel htmlFor=\"input\">\n                  {t('bulkInvites.individualPage.options.input.label')}\n                </FieldLabel>\n                <Textarea\n                  id=\"input\"\n                  name=\"input\"\n                  onBlur={this.onInputBlur}\n                  onChange={this.onInputChange}\n                  value={input.value}\n                />\n              </Field>\n              {summary && input.value.length > 0 && <SupplierSummary />}\n            </div>\n            {this.renderSubmit()}\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(BulkInvitesIndividualPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Field, FieldLabel, Link, Progress, Select } from 'taulia-ui';\nimport { withTranslation } from 'react-i18next';\nimport SupplierSummary from './SupplierSummary';\nimport CONSTANTS from '../../globals';\nimport { BulkInvitesContext } from '../../contexts';\n\nclass BulkInvitesSearchPage extends React.Component {\n  state = {\n    businessUnitIds: [],\n    countries: [],\n    loading: true,\n    segmentIds: [],\n  };\n\n  static propTypes = {\n    request: PropTypes.func.isRequired,\n    settings: PropTypes.shape({ segmentsEnabled: PropTypes.bool }),\n    t: PropTypes.func,\n    history: PropTypes.shape().isRequired,\n  };\n\n  static defaultProps = {\n    settings: { segmentsEnabled: false },\n    t: null,\n  };\n\n  componentDidMount() {\n    const { request } = this.props;\n\n    request('GET', '/api/bulkInvites/criteria')\n      .then(res => {\n        const { criteria } = res.body;\n        if (criteria) {\n          this.setState(\n            {\n              loading: false,\n              businessUnitIds: criteria.businessUnitIds || [],\n              countries: criteria.countries || [],\n              segmentIds: criteria.segmentIds || [],\n            },\n            this.fetchSummaryInitial\n          );\n        } else {\n          this.setState({ loading: false });\n        }\n      })\n      .catch(err => {\n        if (CONSTANTS.DEBUG) {\n          console.error('[BulkInvitesSearchPage]', err); // eslint-disable-line no-console\n        }\n        this.setState({ loading: false });\n      });\n  }\n\n  onBusinessUnitIdsChange = businessUnitIds => {\n    this.setState({ businessUnitIds }, this.fetchSummary);\n  };\n\n  onCountriesChange = countries => {\n    this.setState({ countries }, this.fetchSummary);\n  };\n\n  onSegmentIdsChange = segmentIds => {\n    this.setState({ segmentIds }, this.fetchSummary);\n  };\n\n  onSubmit = event => {\n    const { request, history } = this.props;\n    const { businessUnitIds, countries, segmentIds } = this.state;\n    event.preventDefault();\n    this.setState({ loading: true }, () => {\n      request('POST', '/api/bulkInvites/criteria')\n        .send({ businessUnitIds, countries, segmentIds })\n        .then(() => history.push(CONSTANTS.SUPPLIERS.BULK_INVITES.REVIEW))\n        .catch(() => history.push(CONSTANTS.SUPPLIERS.BULK_INVITES.REVIEW));\n    });\n  };\n\n  fetchSummaryInitial = () => {\n    const { businessUnitIds, countries, segmentIds } = this.state;\n    if (\n      businessUnitIds.length > 0 ||\n      countries.length > 0 ||\n      segmentIds.length > 0\n    ) {\n      this.fetchSummary();\n    }\n  };\n\n  fetchSummary = () => {\n    const { businessUnitIds, countries, segmentIds } = this.state;\n    const { fetchSummary } = this.context;\n    fetchSummary({ businessUnitIds, countries, segmentIds });\n  };\n\n  static contextType = BulkInvitesContext;\n\n  render() {\n    const { searchOptions, summary } = this.context;\n    const { settings, t } = this.props;\n    const { loading, businessUnitIds, countries, segmentIds } = this.state;\n    const showSummary =\n      businessUnitIds.length > 0 ||\n      countries.length > 0 ||\n      segmentIds.length > 0;\n\n    if (!searchOptions || loading) {\n      return <Progress />;\n    }\n\n    return (\n      <>\n        <h1>{t('bulkInvites.title')}</h1>\n        <h3>{t('bulkInvites.searchPage.title')}</h3>\n        <p>{t('bulkInvites.searchPage.text')}</p>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"summary-container\">\n            <div>\n              <Field>\n                <FieldLabel htmlFor=\"business-unit-ids\">\n                  {t('bulkInvites.searchPage.businessUnitIds.label')}\n                </FieldLabel>\n                <Select\n                  id=\"business-unit-ids\"\n                  name=\"businessUnitIds\"\n                  enableSearch={searchOptions.businessUnitIds.length > 10}\n                  placeholder={t(\n                    'bulkInvites.searchPage.businessUnitIds.placeholder'\n                  )}\n                  searchPlaceholder={t(\n                    'bulkInvites.searchPage.searchPlaceholder'\n                  )}\n                  noSearchResultsLabel={t(\n                    'bulkInvites.searchPage.noSearchResultsLabel'\n                  )}\n                  options={searchOptions.businessUnitIds}\n                  onChange={this.onBusinessUnitIdsChange}\n                  value={businessUnitIds}\n                />\n              </Field>\n              <Field>\n                <FieldLabel htmlFor=\"countries\">\n                  {t('bulkInvites.searchPage.countries.label')}\n                </FieldLabel>\n                <Select\n                  id=\"countries\"\n                  name=\"countries\"\n                  enableSearch={searchOptions.countries.length > 10}\n                  placeholder={t(\n                    'bulkInvites.searchPage.countries.placeholder'\n                  )}\n                  searchPlaceholder={t(\n                    'bulkInvites.searchPage.searchPlaceholder'\n                  )}\n                  noSearchResultsLabel={t(\n                    'bulkInvites.searchPage.noSearchResultsLabel'\n                  )}\n                  options={searchOptions.countries}\n                  onChange={this.onCountriesChange}\n                  value={countries}\n                />\n              </Field>\n              {settings.segmentsEnabled && (\n                <Field>\n                  <FieldLabel htmlFor=\"segment-ids\">\n                    {t('bulkInvites.searchPage.segmentIds.label')}\n                  </FieldLabel>\n                  <Select\n                    id=\"segment-ids\"\n                    name=\"segmentIds\"\n                    enableSearch={searchOptions.segmentIds.length > 10}\n                    placeholder={t(\n                      'bulkInvites.searchPage.segmentIds.placeholder'\n                    )}\n                    searchPlaceholder={t(\n                      'bulkInvites.searchPage.searchPlaceholder'\n                    )}\n                    noSearchResultsLabel={t(\n                      'bulkInvites.searchPage.noSearchResultsLabel'\n                    )}\n                    options={searchOptions.segmentIds}\n                    onChange={this.onSegmentIdsChange}\n                    value={segmentIds}\n                    disabled={searchOptions.segmentIds.length === 0}\n                  />\n                </Field>\n              )}\n            </div>\n            {summary && showSummary && <SupplierSummary />}\n          </div>\n          <div className=\"invites-button-container\">\n            <Link to={CONSTANTS.SUPPLIERS.BULK_INVITES.START}>\n              &lt;&nbsp;\n              {t('bulkInvites.searchPage.back')}\n            </Link>\n            <Button\n              type=\"submit\"\n              theme=\"primary\"\n              disabled={\n                businessUnitIds.length === 0 &&\n                countries.length === 0 &&\n                segmentIds.length === 0\n              }\n            >\n              {t('bulkInvites.searchPage.submit')}\n            </Button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withTranslation()(BulkInvitesSearchPage);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Alert, Link, Progress } from 'taulia-ui';\nimport { useTranslation, Trans } from 'react-i18next';\nimport CONSTANTS from '../../globals';\nimport { RequestContext } from '../../contexts';\n\nconst BulkInvitesSuccessPage = () => {\n  const [loading, setLoading] = useState(true);\n  const [showError, setShowError] = useState(false);\n  const { t } = useTranslation();\n  const request = useContext(RequestContext);\n\n  useEffect(() => {\n    request('DELETE', '/api/bulkInvites/criteria')\n      .then(() => {\n        setLoading(false);\n        setShowError(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setShowError(true);\n      });\n  }, [request]);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (showError) {\n    return (\n      <Alert inline theme=\"danger\">\n        <strong>{t('bulkInvites.successPage.error.title')}</strong>\n        <p>\n          <Trans\n            i18nKey=\"bulkInvites.successPage.error.text\"\n            components={[<Link to={CONSTANTS.SUPPLIERS.BULK_INVITES.START} />]}\n          />\n        </p>\n      </Alert>\n    );\n  }\n  return (\n    <>\n      <h1>{t('bulkInvites.title')}</h1>\n      <h3>{t('bulkInvites.successPage.title')}</h3>\n      <Trans\n        components={[<Link to={CONSTANTS.SUPPLIERS.SEARCH} />]}\n        i18nKey=\"bulkInvites.successPage.text\"\n      />\n    </>\n  );\n};\n\nexport default BulkInvitesSuccessPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport CONSTANTS from '../../globals';\nimport { Home, LookerDashboard } from '../Analytics';\nimport NotFound from './NotFound';\nimport Releases from './Releases';\nimport { SupplierSearchBeta, SupplierSearchContainer } from '../SupplierSearch';\nimport { MonolithIFrame } from '../MonolithIFrame';\nimport CompanySettings from '../Settings/CompanySettings';\nimport SecuritySettings from '../Settings/SecuritySettings';\nimport { AnnouncementsContainer, AnnouncementsView } from '../Announcements';\nimport { SupplierView } from '../Suppliers';\nimport { TermsAndConditions } from '../TermsAndConditions';\nimport { ConnectionDetails, Profile, UserManager } from '../Settings';\nimport { SegmentContainer } from '../SupplierSegment';\nimport { Exports } from '../Documents';\nimport {\n  IndividualPage,\n  ReviewPage,\n  SearchPage,\n  StartPage,\n  SuccessPage,\n} from '../BulkInvitesPages';\nimport { BulkInvitesProvider } from '../../contexts';\n\nconst Pages = props => {\n  return (\n    <Switch>\n      <Route path={CONSTANTS.NOT_FOUND}>\n        <NotFound />\n      </Route>\n      <Route\n        path={CONSTANTS.DASHBOARD.HOME}\n        render={routeProps => {\n          return <Home {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route path={CONSTANTS.SUPPLIERS.BULK_INVITES.START}>\n        <BulkInvitesProvider>\n          <Route exact path={CONSTANTS.SUPPLIERS.BULK_INVITES.START}>\n            <StartPage />\n          </Route>\n\n          <Route\n            path={CONSTANTS.SUPPLIERS.BULK_INVITES.INDIVIDUAL}\n            render={routeProps => {\n              return <IndividualPage {...routeProps} {...props} />;\n            }}\n          />\n\n          <Route\n            path={CONSTANTS.SUPPLIERS.BULK_INVITES.SEARCH}\n            render={routeProps => {\n              return <SearchPage {...routeProps} {...props} />;\n            }}\n          />\n\n          <Route\n            path={CONSTANTS.SUPPLIERS.BULK_INVITES.REVIEW}\n            render={routeProps => {\n              return <ReviewPage {...routeProps} {...props} />;\n            }}\n          />\n\n          <Route\n            path={CONSTANTS.SUPPLIERS.BULK_INVITES.SUCCESS}\n            render={routeProps => {\n              return <SuccessPage {...routeProps} {...props} />;\n            }}\n          />\n        </BulkInvitesProvider>\n      </Route>\n\n      <Route path={CONSTANTS.SUPPLIERS.SUPPLIER_VIEW}>\n        <SupplierView />\n      </Route>\n\n      <Route\n        path={CONSTANTS.SUPPLIERS.SEARCH}\n        render={routeProps => {\n          return <SupplierSearchContainer {...props} {...routeProps} />;\n        }}\n      />\n      <Route\n        path={CONSTANTS.SUPPLIERS.SEARCH_BETA}\n        render={routeProps => {\n          return <SupplierSearchBeta {...props} {...routeProps} />;\n        }}\n      />\n\n      <Route\n        path={[\n          CONSTANTS.CASH.EARLY_PAYMENT_GROUPS,\n          CONSTANTS.CASH.GLOBAL_SETTINGS,\n          CONSTANTS.CASH.SUPPLIER_ASSIGNMENTS,\n          CONSTANTS.DOCUMENTS.INVOICES,\n          CONSTANTS.DOCUMENTS.PAYMENTS,\n          CONSTANTS.DOCUMENTS.PURCHASE_ORDERS,\n          CONSTANTS.SETTINGS.USER_MANAGER,\n          CONSTANTS.SUPPLIERS.COMPLIANCE,\n          CONSTANTS.SUPPLIERS.FAQS,\n          CONSTANTS.SUPPLIERS.LAUNCH,\n        ]}\n        render={routeProps => {\n          return <MonolithIFrame {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route\n        path={CONSTANTS.SUPPLIERS.ANNOUNCEMENTS_VIEW}\n        render={routeProps => {\n          return <AnnouncementsView {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route\n        path={CONSTANTS.SUPPLIERS.ANNOUNCEMENTS}\n        render={routeProps => {\n          return <AnnouncementsContainer {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route\n        path={[\n          CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.ADD_SUPPLIERS,\n          CONSTANTS.SUPPLIERS.SUPPLIER_SEGMENTS.LIST,\n        ]}\n        render={routeProps => {\n          return <SegmentContainer {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route\n        path={[\n          CONSTANTS.ANALYTICS.CASH_UNLOCKED,\n          CONSTANTS.ANALYTICS.INVOICING,\n          CONSTANTS.ANALYTICS.SUPPLY_CHAIN_ANALYTICS,\n          CONSTANTS.CASH.DEPLOY,\n          CONSTANTS.CASH.FORECAST,\n          CONSTANTS.CASH.PLAN,\n        ]}\n        render={routeProps => {\n          return <LookerDashboard {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route\n        path={CONSTANTS.TERMS_AND_CONDITIONS}\n        component={TermsAndConditions}\n      >\n        <TermsAndConditions {...props} />\n      </Route>\n\n      <Route path={CONSTANTS.RELEASES}>\n        <Releases />\n      </Route>\n\n      <Route path={CONSTANTS.SETTINGS.PROFILE}>\n        <Profile {...props} />\n      </Route>\n\n      <Route path={CONSTANTS.SETTINGS.COMPANY_SETTINGS}>\n        <CompanySettings {...props} />\n      </Route>\n\n      <Route path={CONSTANTS.SETTINGS.SECURITY_SETTINGS}>\n        <SecuritySettings {...props} />\n      </Route>\n\n      <Route path={CONSTANTS.DOCUMENTS.EXPORTS}>\n        <Exports {...props} />\n      </Route>\n\n      <Route\n        path={CONSTANTS.SETTINGS.USER_MANAGER_NEW}\n        render={routeProps => {\n          return <UserManager {...routeProps} {...props} />;\n        }}\n      />\n\n      <Route path={CONSTANTS.SETTINGS.CONNECTION_DETAILS}>\n        <ConnectionDetails />\n      </Route>\n\n      <Route exact path=\"/\">\n        <Redirect to={CONSTANTS.DASHBOARD.HOME} />\n      </Route>\n      <Redirect from=\"*\" to={CONSTANTS.NOT_FOUND} />\n    </Switch>\n  );\n};\n\nPages.propTypes = {};\n\nexport default Pages;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Notification } from 'taulia-ui';\nimport { useFetchContext } from '../../hooks';\n\nconst BuyerNotifications = () => {\n  const { data: notificationData } = useFetchContext(\n    '/api/buyer-announcements'\n  );\n  const { t } = useTranslation();\n  const [currentNotifications, setCurrentNotifications] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (notificationData?.buyerAnnouncements?.length) {\n      const { buyerAnnouncements } = notificationData;\n      const currentNotificationData = [];\n      const pathname = location.pathname || '';\n      buyerAnnouncements.forEach(item => {\n        const formattedObj = {\n          id: item.id,\n          message: item.message || t(item.localizationKey),\n        };\n        if (location && location.pathname) {\n          if (item.path === pathname) {\n            currentNotificationData.push(formattedObj);\n          } else if (item.path === '*') {\n            currentNotificationData.push(formattedObj);\n          } else if (!item.path && location.pathname === '/home') {\n            currentNotificationData.push(formattedObj);\n          }\n        }\n      });\n      setCurrentNotifications(currentNotificationData);\n    }\n  }, [notificationData, location]);\n\n  return <Notification notificationData={currentNotifications} />;\n};\n\nexport default BuyerNotifications;\n","/* eslint-disable no-param-reassign */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Header } from 'taulia-ui';\nimport { useLocation } from 'react-router-dom';\nimport { useFetchContext } from '../../hooks';\nimport { UserSettingsContext } from '../../contexts';\nimport { GenericErrorMessage } from '../../Utils/GenericErrorMessage';\n\nconst setActiveMenuItem = (navigationDirections, location) => {\n  if (!navigationDirections || !navigationDirections.length) {\n    return navigationDirections;\n  }\n  const pathname = location?.pathname ?? '';\n  navigationDirections.forEach(menuItem => {\n    menuItem.children = setActiveMenuItem(menuItem.children, location);\n    menuItem.isActive =\n      menuItem.path === pathname ||\n      (menuItem.children &&\n        !!menuItem.children.find(child => {\n          return child.isActive;\n        }));\n  });\n  return navigationDirections;\n};\n\nconst HeaderWrapper = () => {\n  const [directions, setDirections] = useState();\n  const location = useLocation();\n  const userInfo = useContext(UserSettingsContext);\n  const { data: mainMenuData, error: mainMenuError } = useFetchContext(\n    '/api/main-menu'\n  );\n\n  useEffect(() => {\n    if (mainMenuData && location?.pathname) {\n      setDirections(setActiveMenuItem([...mainMenuData], location));\n    }\n  }, [mainMenuData, location]);\n\n  useEffect(() => {\n    if (mainMenuError) {\n      // eslint-disable-next-line no-console\n      console.error('Error loading navigation', mainMenuError);\n    }\n  }, [mainMenuError]);\n\n  if (mainMenuError) {\n    return <GenericErrorMessage />;\n  }\n\n  if (directions) {\n    return (\n      <Header\n        directions={directions}\n        user={{ name: `${userInfo.userFirstName} ${userInfo.userLastName}` }}\n        company={{ name: userInfo.companyName }}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default HeaderWrapper;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport ReactGA from 'react-ga';\nimport validate from 'validate.js';\nimport {\n  Branding,\n  Button,\n  Col,\n  Grid,\n  Localization,\n  Modal,\n  ModalContainer,\n  Progress,\n  ToastContainer,\n} from 'taulia-ui';\nimport { Router } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useFetch, useTimer, useDebounceSend } from '../../hooks';\nimport { GenericErrorMessage } from '../../Utils/GenericErrorMessage';\nimport { createRequest } from '../../Utils/RequestUtils';\nimport {\n  AnalyticsConfigContext,\n  RequestContext,\n  UserSettingsContext,\n} from '../../contexts';\nimport Footer from './Footer';\nimport Pages from './Pages';\nimport BuyerNotifications from './BuyerNotifications';\nimport HeaderWrapper from './HeaderWrapper';\n\nconst getInactiveWarningDuration = maxInactiveInterval => {\n  const duration = maxInactiveInterval ?? 1800;\n  return (duration - 120) * 1000;\n};\n\nconst getInactiveLogoutDuration = maxInactiveInterval => {\n  const duration = maxInactiveInterval ?? 1800;\n  return (duration + 120) * 1000;\n};\n\nconst App = ({ history }) => {\n  const { t, i18n } = useTranslation();\n  const request = useRef(createRequest());\n\n  const {\n    data: sessionData,\n    error: sessionError,\n    loading: sessionLoading,\n  } = useFetch('/api/session', request.current);\n\n  const {\n    data: userInfoData,\n    loading: userInfoLoading,\n    error: userInfoError,\n  } = useFetch('/api/user-info', request.current);\n\n  const { data: regex } = useFetch(\n    '/api/emailValidation/regex',\n    request.current\n  );\n\n  const { error: activityError, doSend: doSendActivity } = useDebounceSend(\n    'POST',\n    '/api/activity',\n    request.current,\n    10000\n  );\n\n  const {\n    complete: logoutTimerComplete,\n    doReset: doResetLogoutTimer,\n  } = useTimer(getInactiveLogoutDuration(sessionData?.maxInactiveInterval));\n\n  const {\n    complete: logoutWarningTimerComplete,\n    doReset: doResetLogoutWarningTimer,\n  } = useTimer(getInactiveWarningDuration(sessionData?.maxInactiveInterval));\n\n  useEffect(() => {\n    const { csrfConfig, settings } = sessionData ?? {};\n    if (csrfConfig) {\n      request.current = createRequest(sessionData?.csrfConfig);\n    }\n    if (settings && settings?.gaEnabled) {\n      ReactGA.initialize(settings.gaAccount);\n      ReactGA.pageview(\n        `${history.location.pathname}+${history.location.search}`\n      );\n      history.listen(location => {\n        ReactGA.pageview(`${location.pathname}+${location.search}`);\n      });\n    }\n  }, [sessionData]);\n\n  useEffect(() => {\n    if (userInfoData) {\n      const { locale } = userInfoData;\n      i18n.changeLanguage(locale);\n      Localization.setLocale(locale);\n    }\n  }, [userInfoData]);\n\n  useEffect(() => {\n    validate.validators.email = value => {\n      if (value && value.match(regex.pattern)) {\n        return null;\n      }\n      return '^email';\n    };\n  }, [regex]);\n\n  useEffect(() => {\n    if (activityError && activityError.response.statusCode === 403) {\n      window.location.reload();\n    }\n  }, [activityError]);\n\n  useEffect(() => {\n    if (logoutTimerComplete) {\n      // eslint-disable-next-line no-console\n      console.log('[App] Session timer expired, logging out');\n      window.location.reload();\n    }\n  }, [logoutTimerComplete]);\n\n  const renderTitle = () => {\n    // Take the path name, split it by '/' and '-', capitalize the first letter, and add '|' if has multiple sections\n    if (history.location && history.location.pathname) {\n      return history.location.pathname\n        .split('/')\n        .filter(word => word)\n        .map(title =>\n          title\n            .split('-')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ')\n        )\n        .join(' | ');\n    }\n    return t('app.title', {\n      portalCompany: Branding.fetchDisplayName(),\n    });\n  };\n\n  if (sessionError || userInfoError) {\n    return (\n      <div className=\"app-error\">\n        <GenericErrorMessage />\n      </div>\n    );\n  }\n  if (sessionLoading || userInfoLoading) {\n    return (\n      <div>\n        <Progress />\n      </div>\n    );\n  }\n\n  const { settings, analyticsConfig } = {\n    ...sessionData,\n  };\n  const childProps = { ...sessionData, request: request.current };\n  return (\n    <Router history={history}>\n      <Grid\n        onClick={() => {\n          doResetLogoutTimer();\n          doResetLogoutWarningTimer();\n          doSendActivity({});\n        }}\n        className=\"app\"\n      >\n        <Col sm={100} md={100} lg={100}>\n          <Helmet\n            title={renderTitle()}\n            link={[\n              { rel: 'shortcut icon', href: Branding.fetchImage('favicon') },\n            ]}\n            script={\n              settings?.optimizelyUrl\n                ? [{ src: settings.optimizelyUrl, type: 'text/javascript' }]\n                : []\n            }\n          >\n            <meta name=\"robots\" content=\"noindex, nofollow, noarchive\" />\n          </Helmet>\n          <RequestContext.Provider value={request.current}>\n            <UserSettingsContext.Provider\n              value={{\n                buyerGroupPrimaryCompanyId:\n                  userInfoData.buyerGroupPrimaryCompanyId,\n                companyId: userInfoData.companyId,\n                companyName: userInfoData.companyName,\n                email: userInfoData.email,\n                userId: userInfoData.id,\n                userRoles: userInfoData.roles,\n                userFirstName: userInfoData.firstName,\n                userLastName: userInfoData.lastName,\n              }}\n            >\n              <HeaderWrapper />\n              <div className=\"body\">\n                <BuyerNotifications />\n                <AnalyticsConfigContext.Provider value={analyticsConfig}>\n                  <Pages {...childProps} />\n                </AnalyticsConfigContext.Provider>\n                <ModalContainer />\n                <Modal\n                  open={logoutWarningTimerComplete}\n                  width={400}\n                  onRequestClose={() => {}}\n                >\n                  <div>\n                    <p>{t('app.stayLoggedIn')}</p>\n                    <Button style={{ float: 'right' }}>\n                      {t('app.continue')}\n                    </Button>\n                  </div>\n                </Modal>\n                <ToastContainer />\n              </div>\n              <Footer />\n            </UserSettingsContext.Provider>\n          </RequestContext.Provider>\n        </Col>\n      </Grid>\n    </Router>\n  );\n};\n\nApp.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default App;\n","import csCZ from './cs-CZ.json';\nimport de from './de.json';\nimport elGR from './el-GR.json';\nimport enGB from './en-GB.json';\nimport enUS from './en-US.json';\nimport es from './es.json';\nimport frCA from './fr-CA.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport jaJP from './ja-JP.json';\nimport koKO from './ko-KO.json';\nimport nl from './nl.json';\nimport noNO from './no-NO.json';\nimport plPL from './pl-PL.json';\nimport pt from './pt.json';\nimport slSI from './sl-SI.json';\nimport svSE from './sv-SE.json';\nimport zhCN from './zh-CN.json';\n\nexport default {\n  'cs-CZ': { translation: csCZ },\n  de: { translation: de },\n  'el-GR': { translation: elGR },\n  'en-GB': { translation: enGB },\n  'en-US': { translation: enUS },\n  es: { translation: es },\n  'fr-CA': { translation: frCA },\n  fr: { translation: fr },\n  it: { translation: it },\n  'ja-JP': { translation: jaJP },\n  'ko-KO': { translation: koKO },\n  nl: { translation: nl },\n  'no-NO': { translation: noNO },\n  'pl-PL': { translation: plPL },\n  pt: { translation: pt },\n  'sl-SI': { translation: slSI },\n  'sv-SE': { translation: svSE },\n  'zh-CN': { translation: zhCN },\n};\n","/** @jsxRuntime classic */\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'element-matches-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { i18next } from 'taulia-ui';\nimport { initReactI18next } from 'react-i18next';\nimport { createBrowserHistory } from 'history';\nimport { App } from './components/App';\n\nimport './main.scss';\nimport TRANSLATIONS from './translations/translations';\n\nconst history = createBrowserHistory();\n\n// Remove the loading spinner from our template\nconst loading = document.getElementById('loading');\nloading.parentNode.removeChild(loading);\n\ni18next.use(initReactI18next).init({\n  resources: TRANSLATIONS,\n  lng: 'en-US',\n  fallbackLng: 'en-US',\n  interpolation: { escapeValue: false },\n});\n\n// Create a function to start the App\nfunction runApp() {\n  ReactDOM.render(\n    <App history={history} />,\n    document.getElementById('tau-root')\n  );\n}\n\nrunApp();\n"],"sourceRoot":""}